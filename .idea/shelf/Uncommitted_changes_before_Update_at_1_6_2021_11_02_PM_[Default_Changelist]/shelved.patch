Index: spotify_eda.ipynb
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"nbformat\": 4,\r\n  \"nbformat_minor\": 0,\r\n  \"metadata\": {\r\n    \"kernelspec\": {\r\n      \"name\": \"python3\",\r\n      \"display_name\": \"Python 3\"\r\n    },\r\n    \"colab\": {\r\n      \"name\": \"spotify_eda.ipynb\",\r\n      \"provenance\": [],\r\n      \"toc_visible\": true\r\n    },\r\n    \"accelerator\": \"TPU\"\r\n  },\r\n  \"cells\": [\r\n    {\r\n      \"cell_type\": \"markdown\",\r\n      \"metadata\": {\r\n        \"pycharm\": {\r\n          \"name\": \"#%% md\\n\"\r\n        },\r\n        \"id\": \"_QsUF-whcChD\"\r\n      },\r\n      \"source\": [\r\n        \"# Spotify Song Suggester\"\r\n      ]\r\n    },\r\n    {\r\n      \"cell_type\": \"markdown\",\r\n      \"metadata\": {\r\n        \"pycharm\": {\r\n          \"name\": \"#%% md\\n\"\r\n        },\r\n        \"id\": \"Tns3ezOtcChI\"\r\n      },\r\n      \"source\": [\r\n        \"## The Problem:\\n\",\r\n        \"Need to create a model to give predictions of songs that a user might like based on music they already like.\"\r\n      ]\r\n    },\r\n    {\r\n      \"cell_type\": \"markdown\",\r\n      \"metadata\": {\r\n        \"pycharm\": {\r\n          \"name\": \"#%% md\\n\"\r\n        },\r\n        \"id\": \"TT-CTdNVcChJ\"\r\n      },\r\n      \"source\": [\r\n        \"## Resources:\\n\",\r\n        \"- [DS PT Schedule / Milestones](https://www.notion.so/f30da0c13d5247289bd5ade8d95af4a8?v=c97929c27fe24af780928a5a91a8b095)\\n\",\r\n        \"- [DS Unit 3 Rubric](https://www.notion.so/Data-Science-Unit-3-Rubric-455c04d97fb840c6b75d46e8052a5275)\\n\",\r\n        \"- [DS Unit 4 Rubric](https://www.notion.so/Data-Science-Unit-4-Rubric-1f7381be7b924da2a83c086c2bf97d3b)\"\r\n      ]\r\n    },\r\n    {\r\n      \"cell_type\": \"markdown\",\r\n      \"metadata\": {\r\n        \"pycharm\": {\r\n          \"name\": \"#%% md\\n\"\r\n        },\r\n        \"id\": \"b58fjLJDcChJ\"\r\n      },\r\n      \"source\": [\r\n        \"## The Data:\\n\",\r\n        \"Looking for data that not only gives the artist and title of a song, but the lyrics too.\"\r\n      ]\r\n    },\r\n    {\r\n      \"cell_type\": \"markdown\",\r\n      \"metadata\": {\r\n        \"pycharm\": {\r\n          \"name\": \"#%% md\\n\"\r\n        },\r\n        \"id\": \"CU3Jt7rgcChJ\"\r\n      },\r\n      \"source\": [\r\n        \"### Possible Datasets:\\n\",\r\n        \"- most_popular_spotify_songs.csv\\n\",\r\n        \"- [billboard-lyrics-spotify.csv](https://github.com/walkerkq/musiclyrics/blob/master/billboard_lyrics_1964-2015.csv)\\n\",\r\n        \"- [Spotify API](https://developer.spotify.com/documentation/web-api/quick-start/)\\n\",\r\n        \"- [musiXmatch Dataset API](http://millionsongdataset.com/musixmatch/)\\n\",\r\n        \"- Scrape the web for lyrics to match to Spotify song list.\"\r\n      ]\r\n    },\r\n    {\r\n      \"cell_type\": \"code\",\r\n      \"metadata\": {\r\n        \"pycharm\": {\r\n          \"name\": \"#%%\\n\"\r\n        },\r\n        \"id\": \"5lYlnyE-cChK\"\r\n      },\r\n      \"source\": [\r\n        \"# If running on Google Colab\\n\",\r\n        \"!pip install pandas-profiling==2.*\\n\",\r\n        \"from google.colab import output # to clear pip output to screen\\n\",\r\n        \"output.clear()\"\r\n      ],\r\n      \"execution_count\": null,\r\n      \"outputs\": []\r\n    },\r\n    {\r\n      \"cell_type\": \"code\",\r\n      \"metadata\": {\r\n        \"colab\": {\r\n          \"base_uri\": \"https://localhost:8080/\"\r\n        },\r\n        \"id\": \"hUBkJQBNBpI1\",\r\n        \"outputId\": \"4d613aac-b70e-4746-fdf3-25b9076820b2\"\r\n      },\r\n      \"source\": [\r\n        \"# Install squarify\\r\\n\",\r\n        \"!pip install squarify\"\r\n      ],\r\n      \"execution_count\": null,\r\n      \"outputs\": [\r\n        {\r\n          \"output_type\": \"stream\",\r\n          \"text\": [\r\n            \"Requirement already satisfied: squarify in /usr/local/lib/python3.6/dist-packages (0.4.3)\\n\"\r\n          ],\r\n          \"name\": \"stdout\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"cell_type\": \"code\",\r\n      \"metadata\": {\r\n        \"pycharm\": {\r\n          \"name\": \"#%%\\n\"\r\n        },\r\n        \"id\": \"Grmu-yI_cChK\"\r\n      },\r\n      \"source\": [\r\n        \"# Imports\\n\",\r\n        \"import warnings\\n\",\r\n        \"warnings.filterwarnings('ignore')\\n\",\r\n        \"\\n\",\r\n        \"import numpy as np\\n\",\r\n        \"import pandas as pd\\n\",\r\n        \"import pickle\\n\",\r\n        \"from collections import Counter\\n\",\r\n        \"\\n\",\r\n        \"from pandas_profiling import ProfileReport\\n\",\r\n        \"\\n\",\r\n        \"# Sci-Kit Learn\\n\",\r\n        \"from sklearn.model_selection import train_test_split\\n\",\r\n        \"from sklearn.neighbors import NearestNeighbors, KNeighborsRegressor\\n\",\r\n        \"from sklearn.feature_extraction.text import CountVectorizer, ENGLISH_STOP_WORDS, TfidfVectorizer\\n\",\r\n        \"\\n\",\r\n        \"# NLP\\n\",\r\n        \"import re\\n\",\r\n        \"from nltk.stem import PorterStemmer\\n\",\r\n        \"import spacy\\n\",\r\n        \"from spacy.tokenizer import Tokenizer\\n\",\r\n        \"\\n\",\r\n        \"# PLotting\\n\",\r\n        \"import squarify\\n\",\r\n        \"import matplotlib.pyplot as plt\\n\",\r\n        \"import seaborn as sns\\n\",\r\n        \"\\n\",\r\n        \"from gensim.models import Word2Vec\"\r\n      ],\r\n      \"execution_count\": null,\r\n      \"outputs\": []\r\n    },\r\n    {\r\n      \"cell_type\": \"code\",\r\n      \"metadata\": {\r\n        \"pycharm\": {\r\n          \"name\": \"#%%\\n\"\r\n        },\r\n        \"colab\": {\r\n          \"base_uri\": \"https://localhost:8080/\",\r\n          \"height\": 621\r\n        },\r\n        \"id\": \"4mrv_7Q1cChK\",\r\n        \"outputId\": \"5aaa9fe1-ac95-4286-9dbc-50ac84a2b872\"\r\n      },\r\n      \"source\": [\r\n        \"# Read in dataset\\r\\n\",\r\n        \"song_df = pd.read_csv('https://raw.githubusercontent.com/Spotify-DSPT-158/Build-Week-Spotify/main/spotify_songs.csv')\\r\\n\",\r\n        \"\\r\\n\",\r\n        \"# Peak at the dataset\\r\\n\",\r\n        \"print(song_df.shape)\\r\\n\",\r\n        \"song_df.head()\"\r\n      ],\r\n      \"execution_count\": null,\r\n      \"outputs\": [\r\n        {\r\n          \"output_type\": \"stream\",\r\n          \"text\": [\r\n            \"(18454, 25)\\n\"\r\n          ],\r\n          \"name\": \"stdout\"\r\n        },\r\n        {\r\n          \"output_type\": \"execute_result\",\r\n          \"data\": {\r\n            \"text/html\": [\r\n              \"<div>\\n\",\r\n              \"<style scoped>\\n\",\r\n              \"    .dataframe tbody tr th:only-of-type {\\n\",\r\n              \"        vertical-align: middle;\\n\",\r\n              \"    }\\n\",\r\n              \"\\n\",\r\n              \"    .dataframe tbody tr th {\\n\",\r\n              \"        vertical-align: top;\\n\",\r\n              \"    }\\n\",\r\n              \"\\n\",\r\n              \"    .dataframe thead th {\\n\",\r\n              \"        text-align: right;\\n\",\r\n              \"    }\\n\",\r\n              \"</style>\\n\",\r\n              \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\r\n              \"  <thead>\\n\",\r\n              \"    <tr style=\\\"text-align: right;\\\">\\n\",\r\n              \"      <th></th>\\n\",\r\n              \"      <th>track_id</th>\\n\",\r\n              \"      <th>track_name</th>\\n\",\r\n              \"      <th>track_artist</th>\\n\",\r\n              \"      <th>lyrics</th>\\n\",\r\n              \"      <th>track_popularity</th>\\n\",\r\n              \"      <th>track_album_id</th>\\n\",\r\n              \"      <th>track_album_name</th>\\n\",\r\n              \"      <th>track_album_release_date</th>\\n\",\r\n              \"      <th>playlist_name</th>\\n\",\r\n              \"      <th>playlist_id</th>\\n\",\r\n              \"      <th>playlist_genre</th>\\n\",\r\n              \"      <th>playlist_subgenre</th>\\n\",\r\n              \"      <th>danceability</th>\\n\",\r\n              \"      <th>energy</th>\\n\",\r\n              \"      <th>key</th>\\n\",\r\n              \"      <th>loudness</th>\\n\",\r\n              \"      <th>mode</th>\\n\",\r\n              \"      <th>speechiness</th>\\n\",\r\n              \"      <th>acousticness</th>\\n\",\r\n              \"      <th>instrumentalness</th>\\n\",\r\n              \"      <th>liveness</th>\\n\",\r\n              \"      <th>valence</th>\\n\",\r\n              \"      <th>tempo</th>\\n\",\r\n              \"      <th>duration_ms</th>\\n\",\r\n              \"      <th>language</th>\\n\",\r\n              \"    </tr>\\n\",\r\n              \"  </thead>\\n\",\r\n              \"  <tbody>\\n\",\r\n              \"    <tr>\\n\",\r\n              \"      <th>0</th>\\n\",\r\n              \"      <td>0017A6SJgTbfQVU2EtsPNo</td>\\n\",\r\n              \"      <td>Pangarap</td>\\n\",\r\n              \"      <td>Barbie's Cradle</td>\\n\",\r\n              \"      <td>Minsan pa Nang ako'y napalingon Hindi ko alam ...</td>\\n\",\r\n              \"      <td>41</td>\\n\",\r\n              \"      <td>1srJQ0njEQgd8w4XSqI4JQ</td>\\n\",\r\n              \"      <td>Trip</td>\\n\",\r\n              \"      <td>2001-01-01</td>\\n\",\r\n              \"      <td>Pinoy Classic Rock</td>\\n\",\r\n              \"      <td>37i9dQZF1DWYDQ8wBxd7xt</td>\\n\",\r\n              \"      <td>rock</td>\\n\",\r\n              \"      <td>classic rock</td>\\n\",\r\n              \"      <td>0.682</td>\\n\",\r\n              \"      <td>0.401</td>\\n\",\r\n              \"      <td>2</td>\\n\",\r\n              \"      <td>-10.068</td>\\n\",\r\n              \"      <td>1</td>\\n\",\r\n              \"      <td>0.0236</td>\\n\",\r\n              \"      <td>0.27900</td>\\n\",\r\n              \"      <td>0.01170</td>\\n\",\r\n              \"      <td>0.0887</td>\\n\",\r\n              \"      <td>0.566</td>\\n\",\r\n              \"      <td>97.091</td>\\n\",\r\n              \"      <td>235440</td>\\n\",\r\n              \"      <td>tl</td>\\n\",\r\n              \"    </tr>\\n\",\r\n              \"    <tr>\\n\",\r\n              \"      <th>1</th>\\n\",\r\n              \"      <td>004s3t0ONYlzxII9PLgU6z</td>\\n\",\r\n              \"      <td>I Feel Alive</td>\\n\",\r\n              \"      <td>Steady Rollin</td>\\n\",\r\n              \"      <td>The trees, are singing in the wind The sky blu...</td>\\n\",\r\n              \"      <td>28</td>\\n\",\r\n              \"      <td>3z04Lb9Dsilqw68SHt6jLB</td>\\n\",\r\n              \"      <td>Love &amp; Loss</td>\\n\",\r\n              \"      <td>2017-11-21</td>\\n\",\r\n              \"      <td>Hard Rock Workout</td>\\n\",\r\n              \"      <td>3YouF0u7waJnolytf9JCXf</td>\\n\",\r\n              \"      <td>rock</td>\\n\",\r\n              \"      <td>hard rock</td>\\n\",\r\n              \"      <td>0.303</td>\\n\",\r\n              \"      <td>0.880</td>\\n\",\r\n              \"      <td>9</td>\\n\",\r\n              \"      <td>-4.739</td>\\n\",\r\n              \"      <td>1</td>\\n\",\r\n              \"      <td>0.0442</td>\\n\",\r\n              \"      <td>0.01170</td>\\n\",\r\n              \"      <td>0.00994</td>\\n\",\r\n              \"      <td>0.3470</td>\\n\",\r\n              \"      <td>0.404</td>\\n\",\r\n              \"      <td>135.225</td>\\n\",\r\n              \"      <td>373512</td>\\n\",\r\n              \"      <td>en</td>\\n\",\r\n              \"    </tr>\\n\",\r\n              \"    <tr>\\n\",\r\n              \"      <th>2</th>\\n\",\r\n              \"      <td>00chLpzhgVjxs1zKC9UScL</td>\\n\",\r\n              \"      <td>Poison</td>\\n\",\r\n              \"      <td>Bell Biv DeVoe</td>\\n\",\r\n              \"      <td>NA Yeah, Spyderman and Freeze in full effect U...</td>\\n\",\r\n              \"      <td>0</td>\\n\",\r\n              \"      <td>6oZ6brjB8x3GoeSYdwJdPc</td>\\n\",\r\n              \"      <td>Gold</td>\\n\",\r\n              \"      <td>2005-01-01</td>\\n\",\r\n              \"      <td>Back in the day - R&amp;B, New Jack Swing, Swingbe...</td>\\n\",\r\n              \"      <td>3a9y4eeCJRmG9p4YKfqYIx</td>\\n\",\r\n              \"      <td>r&amp;b</td>\\n\",\r\n              \"      <td>new jack swing</td>\\n\",\r\n              \"      <td>0.845</td>\\n\",\r\n              \"      <td>0.652</td>\\n\",\r\n              \"      <td>6</td>\\n\",\r\n              \"      <td>-7.504</td>\\n\",\r\n              \"      <td>0</td>\\n\",\r\n              \"      <td>0.2160</td>\\n\",\r\n              \"      <td>0.00432</td>\\n\",\r\n              \"      <td>0.00723</td>\\n\",\r\n              \"      <td>0.4890</td>\\n\",\r\n              \"      <td>0.650</td>\\n\",\r\n              \"      <td>111.904</td>\\n\",\r\n              \"      <td>262467</td>\\n\",\r\n              \"      <td>en</td>\\n\",\r\n              \"    </tr>\\n\",\r\n              \"    <tr>\\n\",\r\n              \"      <th>3</th>\\n\",\r\n              \"      <td>00cqd6ZsSkLZqGMlQCR0Zo</td>\\n\",\r\n              \"      <td>Baby It's Cold Outside (feat. Christina Aguilera)</td>\\n\",\r\n              \"      <td>CeeLo Green</td>\\n\",\r\n              \"      <td>I really can't stay Baby it's cold outside I'v...</td>\\n\",\r\n              \"      <td>41</td>\\n\",\r\n              \"      <td>3ssspRe42CXkhPxdc12xcp</td>\\n\",\r\n              \"      <td>CeeLo's Magic Moment</td>\\n\",\r\n              \"      <td>2012-10-29</td>\\n\",\r\n              \"      <td>Christmas Soul</td>\\n\",\r\n              \"      <td>6FZYc2BvF7tColxO8PBShV</td>\\n\",\r\n              \"      <td>r&amp;b</td>\\n\",\r\n              \"      <td>neo soul</td>\\n\",\r\n              \"      <td>0.425</td>\\n\",\r\n              \"      <td>0.378</td>\\n\",\r\n              \"      <td>5</td>\\n\",\r\n              \"      <td>-5.819</td>\\n\",\r\n              \"      <td>0</td>\\n\",\r\n              \"      <td>0.0341</td>\\n\",\r\n              \"      <td>0.68900</td>\\n\",\r\n              \"      <td>0.00000</td>\\n\",\r\n              \"      <td>0.0664</td>\\n\",\r\n              \"      <td>0.405</td>\\n\",\r\n              \"      <td>118.593</td>\\n\",\r\n              \"      <td>243067</td>\\n\",\r\n              \"      <td>en</td>\\n\",\r\n              \"    </tr>\\n\",\r\n              \"    <tr>\\n\",\r\n              \"      <th>4</th>\\n\",\r\n              \"      <td>00emjlCv9azBN0fzuuyLqy</td>\\n\",\r\n              \"      <td>Dumb Litty</td>\\n\",\r\n              \"      <td>KARD</td>\\n\",\r\n              \"      <td>Get up out of my business You don't keep me fr...</td>\\n\",\r\n              \"      <td>65</td>\\n\",\r\n              \"      <td>7h5X3xhh3peIK9Y0qI5hbK</td>\\n\",\r\n              \"      <td>KARD 2nd Digital Single ‘Dumb Litty’</td>\\n\",\r\n              \"      <td>2019-09-22</td>\\n\",\r\n              \"      <td>K-Party Dance Mix</td>\\n\",\r\n              \"      <td>37i9dQZF1DX4RDXswvP6Mj</td>\\n\",\r\n              \"      <td>pop</td>\\n\",\r\n              \"      <td>dance pop</td>\\n\",\r\n              \"      <td>0.760</td>\\n\",\r\n              \"      <td>0.887</td>\\n\",\r\n              \"      <td>9</td>\\n\",\r\n              \"      <td>-1.993</td>\\n\",\r\n              \"      <td>1</td>\\n\",\r\n              \"      <td>0.0409</td>\\n\",\r\n              \"      <td>0.03700</td>\\n\",\r\n              \"      <td>0.00000</td>\\n\",\r\n              \"      <td>0.1380</td>\\n\",\r\n              \"      <td>0.240</td>\\n\",\r\n              \"      <td>130.018</td>\\n\",\r\n              \"      <td>193160</td>\\n\",\r\n              \"      <td>en</td>\\n\",\r\n              \"    </tr>\\n\",\r\n              \"  </tbody>\\n\",\r\n              \"</table>\\n\",\r\n              \"</div>\"\r\n            ],\r\n            \"text/plain\": [\r\n              \"                 track_id  ... language\\n\",\r\n              \"0  0017A6SJgTbfQVU2EtsPNo  ...       tl\\n\",\r\n              \"1  004s3t0ONYlzxII9PLgU6z  ...       en\\n\",\r\n              \"2  00chLpzhgVjxs1zKC9UScL  ...       en\\n\",\r\n              \"3  00cqd6ZsSkLZqGMlQCR0Zo  ...       en\\n\",\r\n              \"4  00emjlCv9azBN0fzuuyLqy  ...       en\\n\",\r\n              \"\\n\",\r\n              \"[5 rows x 25 columns]\"\r\n            ]\r\n          },\r\n          \"metadata\": {\r\n            \"tags\": []\r\n          },\r\n          \"execution_count\": 4\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"cell_type\": \"code\",\r\n      \"metadata\": {\r\n        \"colab\": {\r\n          \"base_uri\": \"https://localhost:8080/\",\r\n          \"height\": 621\r\n        },\r\n        \"id\": \"106GLyDVws1X\",\r\n        \"outputId\": \"d1436adc-4a2f-4545-b987-2709a4c99e28\"\r\n      },\r\n      \"source\": [\r\n        \"# Drop columns not needed for our problem\\r\\n\",\r\n        \"songs = song_df.drop(columns=['track_album_id', 'track_album_name', 'playlist_id'])\\r\\n\",\r\n        \"print(songs.shape)\\r\\n\",\r\n        \"songs.head()\"\r\n      ],\r\n      \"execution_count\": null,\r\n      \"outputs\": [\r\n        {\r\n          \"output_type\": \"stream\",\r\n          \"text\": [\r\n            \"(18454, 22)\\n\"\r\n          ],\r\n          \"name\": \"stdout\"\r\n        },\r\n        {\r\n          \"output_type\": \"execute_result\",\r\n          \"data\": {\r\n            \"text/html\": [\r\n              \"<div>\\n\",\r\n              \"<style scoped>\\n\",\r\n              \"    .dataframe tbody tr th:only-of-type {\\n\",\r\n              \"        vertical-align: middle;\\n\",\r\n              \"    }\\n\",\r\n              \"\\n\",\r\n              \"    .dataframe tbody tr th {\\n\",\r\n              \"        vertical-align: top;\\n\",\r\n              \"    }\\n\",\r\n              \"\\n\",\r\n              \"    .dataframe thead th {\\n\",\r\n              \"        text-align: right;\\n\",\r\n              \"    }\\n\",\r\n              \"</style>\\n\",\r\n              \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\r\n              \"  <thead>\\n\",\r\n              \"    <tr style=\\\"text-align: right;\\\">\\n\",\r\n              \"      <th></th>\\n\",\r\n              \"      <th>track_id</th>\\n\",\r\n              \"      <th>track_name</th>\\n\",\r\n              \"      <th>track_artist</th>\\n\",\r\n              \"      <th>lyrics</th>\\n\",\r\n              \"      <th>track_popularity</th>\\n\",\r\n              \"      <th>track_album_release_date</th>\\n\",\r\n              \"      <th>playlist_name</th>\\n\",\r\n              \"      <th>playlist_genre</th>\\n\",\r\n              \"      <th>playlist_subgenre</th>\\n\",\r\n              \"      <th>danceability</th>\\n\",\r\n              \"      <th>energy</th>\\n\",\r\n              \"      <th>key</th>\\n\",\r\n              \"      <th>loudness</th>\\n\",\r\n              \"      <th>mode</th>\\n\",\r\n              \"      <th>speechiness</th>\\n\",\r\n              \"      <th>acousticness</th>\\n\",\r\n              \"      <th>instrumentalness</th>\\n\",\r\n              \"      <th>liveness</th>\\n\",\r\n              \"      <th>valence</th>\\n\",\r\n              \"      <th>tempo</th>\\n\",\r\n              \"      <th>duration_ms</th>\\n\",\r\n              \"      <th>language</th>\\n\",\r\n              \"    </tr>\\n\",\r\n              \"  </thead>\\n\",\r\n              \"  <tbody>\\n\",\r\n              \"    <tr>\\n\",\r\n              \"      <th>0</th>\\n\",\r\n              \"      <td>0017A6SJgTbfQVU2EtsPNo</td>\\n\",\r\n              \"      <td>Pangarap</td>\\n\",\r\n              \"      <td>Barbie's Cradle</td>\\n\",\r\n              \"      <td>Minsan pa Nang ako'y napalingon Hindi ko alam ...</td>\\n\",\r\n              \"      <td>41</td>\\n\",\r\n              \"      <td>2001-01-01</td>\\n\",\r\n              \"      <td>Pinoy Classic Rock</td>\\n\",\r\n              \"      <td>rock</td>\\n\",\r\n              \"      <td>classic rock</td>\\n\",\r\n              \"      <td>0.682</td>\\n\",\r\n              \"      <td>0.401</td>\\n\",\r\n              \"      <td>2</td>\\n\",\r\n              \"      <td>-10.068</td>\\n\",\r\n              \"      <td>1</td>\\n\",\r\n              \"      <td>0.0236</td>\\n\",\r\n              \"      <td>0.27900</td>\\n\",\r\n              \"      <td>0.01170</td>\\n\",\r\n              \"      <td>0.0887</td>\\n\",\r\n              \"      <td>0.566</td>\\n\",\r\n              \"      <td>97.091</td>\\n\",\r\n              \"      <td>235440</td>\\n\",\r\n              \"      <td>tl</td>\\n\",\r\n              \"    </tr>\\n\",\r\n              \"    <tr>\\n\",\r\n              \"      <th>1</th>\\n\",\r\n              \"      <td>004s3t0ONYlzxII9PLgU6z</td>\\n\",\r\n              \"      <td>I Feel Alive</td>\\n\",\r\n              \"      <td>Steady Rollin</td>\\n\",\r\n              \"      <td>The trees, are singing in the wind The sky blu...</td>\\n\",\r\n              \"      <td>28</td>\\n\",\r\n              \"      <td>2017-11-21</td>\\n\",\r\n              \"      <td>Hard Rock Workout</td>\\n\",\r\n              \"      <td>rock</td>\\n\",\r\n              \"      <td>hard rock</td>\\n\",\r\n              \"      <td>0.303</td>\\n\",\r\n              \"      <td>0.880</td>\\n\",\r\n              \"      <td>9</td>\\n\",\r\n              \"      <td>-4.739</td>\\n\",\r\n              \"      <td>1</td>\\n\",\r\n              \"      <td>0.0442</td>\\n\",\r\n              \"      <td>0.01170</td>\\n\",\r\n              \"      <td>0.00994</td>\\n\",\r\n              \"      <td>0.3470</td>\\n\",\r\n              \"      <td>0.404</td>\\n\",\r\n              \"      <td>135.225</td>\\n\",\r\n              \"      <td>373512</td>\\n\",\r\n              \"      <td>en</td>\\n\",\r\n              \"    </tr>\\n\",\r\n              \"    <tr>\\n\",\r\n              \"      <th>2</th>\\n\",\r\n              \"      <td>00chLpzhgVjxs1zKC9UScL</td>\\n\",\r\n              \"      <td>Poison</td>\\n\",\r\n              \"      <td>Bell Biv DeVoe</td>\\n\",\r\n              \"      <td>NA Yeah, Spyderman and Freeze in full effect U...</td>\\n\",\r\n              \"      <td>0</td>\\n\",\r\n              \"      <td>2005-01-01</td>\\n\",\r\n              \"      <td>Back in the day - R&amp;B, New Jack Swing, Swingbe...</td>\\n\",\r\n              \"      <td>r&amp;b</td>\\n\",\r\n              \"      <td>new jack swing</td>\\n\",\r\n              \"      <td>0.845</td>\\n\",\r\n              \"      <td>0.652</td>\\n\",\r\n              \"      <td>6</td>\\n\",\r\n              \"      <td>-7.504</td>\\n\",\r\n              \"      <td>0</td>\\n\",\r\n              \"      <td>0.2160</td>\\n\",\r\n              \"      <td>0.00432</td>\\n\",\r\n              \"      <td>0.00723</td>\\n\",\r\n              \"      <td>0.4890</td>\\n\",\r\n              \"      <td>0.650</td>\\n\",\r\n              \"      <td>111.904</td>\\n\",\r\n              \"      <td>262467</td>\\n\",\r\n              \"      <td>en</td>\\n\",\r\n              \"    </tr>\\n\",\r\n              \"    <tr>\\n\",\r\n              \"      <th>3</th>\\n\",\r\n              \"      <td>00cqd6ZsSkLZqGMlQCR0Zo</td>\\n\",\r\n              \"      <td>Baby It's Cold Outside (feat. Christina Aguilera)</td>\\n\",\r\n              \"      <td>CeeLo Green</td>\\n\",\r\n              \"      <td>I really can't stay Baby it's cold outside I'v...</td>\\n\",\r\n              \"      <td>41</td>\\n\",\r\n              \"      <td>2012-10-29</td>\\n\",\r\n              \"      <td>Christmas Soul</td>\\n\",\r\n              \"      <td>r&amp;b</td>\\n\",\r\n              \"      <td>neo soul</td>\\n\",\r\n              \"      <td>0.425</td>\\n\",\r\n              \"      <td>0.378</td>\\n\",\r\n              \"      <td>5</td>\\n\",\r\n              \"      <td>-5.819</td>\\n\",\r\n              \"      <td>0</td>\\n\",\r\n              \"      <td>0.0341</td>\\n\",\r\n              \"      <td>0.68900</td>\\n\",\r\n              \"      <td>0.00000</td>\\n\",\r\n              \"      <td>0.0664</td>\\n\",\r\n              \"      <td>0.405</td>\\n\",\r\n              \"      <td>118.593</td>\\n\",\r\n              \"      <td>243067</td>\\n\",\r\n              \"      <td>en</td>\\n\",\r\n              \"    </tr>\\n\",\r\n              \"    <tr>\\n\",\r\n              \"      <th>4</th>\\n\",\r\n              \"      <td>00emjlCv9azBN0fzuuyLqy</td>\\n\",\r\n              \"      <td>Dumb Litty</td>\\n\",\r\n              \"      <td>KARD</td>\\n\",\r\n              \"      <td>Get up out of my business You don't keep me fr...</td>\\n\",\r\n              \"      <td>65</td>\\n\",\r\n              \"      <td>2019-09-22</td>\\n\",\r\n              \"      <td>K-Party Dance Mix</td>\\n\",\r\n              \"      <td>pop</td>\\n\",\r\n              \"      <td>dance pop</td>\\n\",\r\n              \"      <td>0.760</td>\\n\",\r\n              \"      <td>0.887</td>\\n\",\r\n              \"      <td>9</td>\\n\",\r\n              \"      <td>-1.993</td>\\n\",\r\n              \"      <td>1</td>\\n\",\r\n              \"      <td>0.0409</td>\\n\",\r\n              \"      <td>0.03700</td>\\n\",\r\n              \"      <td>0.00000</td>\\n\",\r\n              \"      <td>0.1380</td>\\n\",\r\n              \"      <td>0.240</td>\\n\",\r\n              \"      <td>130.018</td>\\n\",\r\n              \"      <td>193160</td>\\n\",\r\n              \"      <td>en</td>\\n\",\r\n              \"    </tr>\\n\",\r\n              \"  </tbody>\\n\",\r\n              \"</table>\\n\",\r\n              \"</div>\"\r\n            ],\r\n            \"text/plain\": [\r\n              \"                 track_id  ... language\\n\",\r\n              \"0  0017A6SJgTbfQVU2EtsPNo  ...       tl\\n\",\r\n              \"1  004s3t0ONYlzxII9PLgU6z  ...       en\\n\",\r\n              \"2  00chLpzhgVjxs1zKC9UScL  ...       en\\n\",\r\n              \"3  00cqd6ZsSkLZqGMlQCR0Zo  ...       en\\n\",\r\n              \"4  00emjlCv9azBN0fzuuyLqy  ...       en\\n\",\r\n              \"\\n\",\r\n              \"[5 rows x 22 columns]\"\r\n            ]\r\n          },\r\n          \"metadata\": {\r\n            \"tags\": []\r\n          },\r\n          \"execution_count\": 5\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"cell_type\": \"code\",\r\n      \"metadata\": {\r\n        \"colab\": {\r\n          \"base_uri\": \"https://localhost:8080/\",\r\n          \"height\": 621\r\n        },\r\n        \"id\": \"EjeV_byXzfaT\",\r\n        \"outputId\": \"bc5f70d9-8894-4ce0-96b6-76ee1b070733\"\r\n      },\r\n      \"source\": [\r\n        \"# Rename features to make it easier to work with\\r\\n\",\r\n        \"songs = songs.rename(columns={'track_id': 'id', 'track_name': 'title' , \\r\\n\",\r\n        \"                              'track_artist': 'artist', \\r\\n\",\r\n        \"                              'track_popularity': 'popularity',\\r\\n\",\r\n        \"                              'track_album_release_date': 'release_date',\\r\\n\",\r\n        \"                              'playlist_name': 'playlist', \\r\\n\",\r\n        \"                              'playlist_genre': 'genre',\\r\\n\",\r\n        \"                              'playlist_subgenre': 'subgenre'})\\r\\n\",\r\n        \"\\r\\n\",\r\n        \"songs.head()\"\r\n      ],\r\n      \"execution_count\": null,\r\n      \"outputs\": [\r\n        {\r\n          \"output_type\": \"execute_result\",\r\n          \"data\": {\r\n            \"text/html\": [\r\n              \"<div>\\n\",\r\n              \"<style scoped>\\n\",\r\n              \"    .dataframe tbody tr th:only-of-type {\\n\",\r\n              \"        vertical-align: middle;\\n\",\r\n              \"    }\\n\",\r\n              \"\\n\",\r\n              \"    .dataframe tbody tr th {\\n\",\r\n              \"        vertical-align: top;\\n\",\r\n              \"    }\\n\",\r\n              \"\\n\",\r\n              \"    .dataframe thead th {\\n\",\r\n              \"        text-align: right;\\n\",\r\n              \"    }\\n\",\r\n              \"</style>\\n\",\r\n              \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\r\n              \"  <thead>\\n\",\r\n              \"    <tr style=\\\"text-align: right;\\\">\\n\",\r\n              \"      <th></th>\\n\",\r\n              \"      <th>id</th>\\n\",\r\n              \"      <th>title</th>\\n\",\r\n              \"      <th>artist</th>\\n\",\r\n              \"      <th>lyrics</th>\\n\",\r\n              \"      <th>popularity</th>\\n\",\r\n              \"      <th>release_date</th>\\n\",\r\n              \"      <th>playlist</th>\\n\",\r\n              \"      <th>genre</th>\\n\",\r\n              \"      <th>subgenre</th>\\n\",\r\n              \"      <th>danceability</th>\\n\",\r\n              \"      <th>energy</th>\\n\",\r\n              \"      <th>key</th>\\n\",\r\n              \"      <th>loudness</th>\\n\",\r\n              \"      <th>mode</th>\\n\",\r\n              \"      <th>speechiness</th>\\n\",\r\n              \"      <th>acousticness</th>\\n\",\r\n              \"      <th>instrumentalness</th>\\n\",\r\n              \"      <th>liveness</th>\\n\",\r\n              \"      <th>valence</th>\\n\",\r\n              \"      <th>tempo</th>\\n\",\r\n              \"      <th>duration_ms</th>\\n\",\r\n              \"      <th>language</th>\\n\",\r\n              \"    </tr>\\n\",\r\n              \"  </thead>\\n\",\r\n              \"  <tbody>\\n\",\r\n              \"    <tr>\\n\",\r\n              \"      <th>0</th>\\n\",\r\n              \"      <td>0017A6SJgTbfQVU2EtsPNo</td>\\n\",\r\n              \"      <td>Pangarap</td>\\n\",\r\n              \"      <td>Barbie's Cradle</td>\\n\",\r\n              \"      <td>Minsan pa Nang ako'y napalingon Hindi ko alam ...</td>\\n\",\r\n              \"      <td>41</td>\\n\",\r\n              \"      <td>2001-01-01</td>\\n\",\r\n              \"      <td>Pinoy Classic Rock</td>\\n\",\r\n              \"      <td>rock</td>\\n\",\r\n              \"      <td>classic rock</td>\\n\",\r\n              \"      <td>0.682</td>\\n\",\r\n              \"      <td>0.401</td>\\n\",\r\n              \"      <td>2</td>\\n\",\r\n              \"      <td>-10.068</td>\\n\",\r\n              \"      <td>1</td>\\n\",\r\n              \"      <td>0.0236</td>\\n\",\r\n              \"      <td>0.27900</td>\\n\",\r\n              \"      <td>0.01170</td>\\n\",\r\n              \"      <td>0.0887</td>\\n\",\r\n              \"      <td>0.566</td>\\n\",\r\n              \"      <td>97.091</td>\\n\",\r\n              \"      <td>235440</td>\\n\",\r\n              \"      <td>tl</td>\\n\",\r\n              \"    </tr>\\n\",\r\n              \"    <tr>\\n\",\r\n              \"      <th>1</th>\\n\",\r\n              \"      <td>004s3t0ONYlzxII9PLgU6z</td>\\n\",\r\n              \"      <td>I Feel Alive</td>\\n\",\r\n              \"      <td>Steady Rollin</td>\\n\",\r\n              \"      <td>The trees, are singing in the wind The sky blu...</td>\\n\",\r\n              \"      <td>28</td>\\n\",\r\n              \"      <td>2017-11-21</td>\\n\",\r\n              \"      <td>Hard Rock Workout</td>\\n\",\r\n              \"      <td>rock</td>\\n\",\r\n              \"      <td>hard rock</td>\\n\",\r\n              \"      <td>0.303</td>\\n\",\r\n              \"      <td>0.880</td>\\n\",\r\n              \"      <td>9</td>\\n\",\r\n              \"      <td>-4.739</td>\\n\",\r\n              \"      <td>1</td>\\n\",\r\n              \"      <td>0.0442</td>\\n\",\r\n              \"      <td>0.01170</td>\\n\",\r\n              \"      <td>0.00994</td>\\n\",\r\n              \"      <td>0.3470</td>\\n\",\r\n              \"      <td>0.404</td>\\n\",\r\n              \"      <td>135.225</td>\\n\",\r\n              \"      <td>373512</td>\\n\",\r\n              \"      <td>en</td>\\n\",\r\n              \"    </tr>\\n\",\r\n              \"    <tr>\\n\",\r\n              \"      <th>2</th>\\n\",\r\n              \"      <td>00chLpzhgVjxs1zKC9UScL</td>\\n\",\r\n              \"      <td>Poison</td>\\n\",\r\n              \"      <td>Bell Biv DeVoe</td>\\n\",\r\n              \"      <td>NA Yeah, Spyderman and Freeze in full effect U...</td>\\n\",\r\n              \"      <td>0</td>\\n\",\r\n              \"      <td>2005-01-01</td>\\n\",\r\n              \"      <td>Back in the day - R&amp;B, New Jack Swing, Swingbe...</td>\\n\",\r\n              \"      <td>r&amp;b</td>\\n\",\r\n              \"      <td>new jack swing</td>\\n\",\r\n              \"      <td>0.845</td>\\n\",\r\n              \"      <td>0.652</td>\\n\",\r\n              \"      <td>6</td>\\n\",\r\n              \"      <td>-7.504</td>\\n\",\r\n              \"      <td>0</td>\\n\",\r\n              \"      <td>0.2160</td>\\n\",\r\n              \"      <td>0.00432</td>\\n\",\r\n              \"      <td>0.00723</td>\\n\",\r\n              \"      <td>0.4890</td>\\n\",\r\n              \"      <td>0.650</td>\\n\",\r\n              \"      <td>111.904</td>\\n\",\r\n              \"      <td>262467</td>\\n\",\r\n              \"      <td>en</td>\\n\",\r\n              \"    </tr>\\n\",\r\n              \"    <tr>\\n\",\r\n              \"      <th>3</th>\\n\",\r\n              \"      <td>00cqd6ZsSkLZqGMlQCR0Zo</td>\\n\",\r\n              \"      <td>Baby It's Cold Outside (feat. Christina Aguilera)</td>\\n\",\r\n              \"      <td>CeeLo Green</td>\\n\",\r\n              \"      <td>I really can't stay Baby it's cold outside I'v...</td>\\n\",\r\n              \"      <td>41</td>\\n\",\r\n              \"      <td>2012-10-29</td>\\n\",\r\n              \"      <td>Christmas Soul</td>\\n\",\r\n              \"      <td>r&amp;b</td>\\n\",\r\n              \"      <td>neo soul</td>\\n\",\r\n              \"      <td>0.425</td>\\n\",\r\n              \"      <td>0.378</td>\\n\",\r\n              \"      <td>5</td>\\n\",\r\n              \"      <td>-5.819</td>\\n\",\r\n              \"      <td>0</td>\\n\",\r\n              \"      <td>0.0341</td>\\n\",\r\n              \"      <td>0.68900</td>\\n\",\r\n              \"      <td>0.00000</td>\\n\",\r\n              \"      <td>0.0664</td>\\n\",\r\n              \"      <td>0.405</td>\\n\",\r\n              \"      <td>118.593</td>\\n\",\r\n              \"      <td>243067</td>\\n\",\r\n              \"      <td>en</td>\\n\",\r\n              \"    </tr>\\n\",\r\n              \"    <tr>\\n\",\r\n              \"      <th>4</th>\\n\",\r\n              \"      <td>00emjlCv9azBN0fzuuyLqy</td>\\n\",\r\n              \"      <td>Dumb Litty</td>\\n\",\r\n              \"      <td>KARD</td>\\n\",\r\n              \"      <td>Get up out of my business You don't keep me fr...</td>\\n\",\r\n              \"      <td>65</td>\\n\",\r\n              \"      <td>2019-09-22</td>\\n\",\r\n              \"      <td>K-Party Dance Mix</td>\\n\",\r\n              \"      <td>pop</td>\\n\",\r\n              \"      <td>dance pop</td>\\n\",\r\n              \"      <td>0.760</td>\\n\",\r\n              \"      <td>0.887</td>\\n\",\r\n              \"      <td>9</td>\\n\",\r\n              \"      <td>-1.993</td>\\n\",\r\n              \"      <td>1</td>\\n\",\r\n              \"      <td>0.0409</td>\\n\",\r\n              \"      <td>0.03700</td>\\n\",\r\n              \"      <td>0.00000</td>\\n\",\r\n              \"      <td>0.1380</td>\\n\",\r\n              \"      <td>0.240</td>\\n\",\r\n              \"      <td>130.018</td>\\n\",\r\n              \"      <td>193160</td>\\n\",\r\n              \"      <td>en</td>\\n\",\r\n              \"    </tr>\\n\",\r\n              \"  </tbody>\\n\",\r\n              \"</table>\\n\",\r\n              \"</div>\"\r\n            ],\r\n            \"text/plain\": [\r\n              \"                       id  ... language\\n\",\r\n              \"0  0017A6SJgTbfQVU2EtsPNo  ...       tl\\n\",\r\n              \"1  004s3t0ONYlzxII9PLgU6z  ...       en\\n\",\r\n              \"2  00chLpzhgVjxs1zKC9UScL  ...       en\\n\",\r\n              \"3  00cqd6ZsSkLZqGMlQCR0Zo  ...       en\\n\",\r\n              \"4  00emjlCv9azBN0fzuuyLqy  ...       en\\n\",\r\n              \"\\n\",\r\n              \"[5 rows x 22 columns]\"\r\n            ]\r\n          },\r\n          \"metadata\": {\r\n            \"tags\": []\r\n          },\r\n          \"execution_count\": 6\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"cell_type\": \"code\",\r\n      \"metadata\": {\r\n        \"colab\": {\r\n          \"base_uri\": \"https://localhost:8080/\",\r\n          \"height\": 157\r\n        },\r\n        \"id\": \"qpCxKN7LcrPK\",\r\n        \"outputId\": \"1a04321d-6a23-4adc-8e21-f94d1d59f390\"\r\n      },\r\n      \"source\": [\r\n        \"# Peak a lyrics value\\r\\n\",\r\n        \"songs.lyrics[2]\"\r\n      ],\r\n      \"execution_count\": null,\r\n      \"outputs\": [\r\n        {\r\n          \"output_type\": \"execute_result\",\r\n          \"data\": {\r\n            \"application/vnd.google.colaboratory.intrinsic+json\": {\r\n              \"type\": \"string\"\r\n            },\r\n            \"text/plain\": [\r\n              \"'NA Yeah, Spyderman and Freeze in full effect Uh-huh You ready, Ron? I\\\\'m ready You ready, Biv? I\\\\'m ready, Slick, are you? Oh, yeah, break it down NA Girl, I, must (warn you) I sense something strange in my mind Situation is (serious) Let\\\\'s cure it cause we\\\\'re running out of time It\\\\'s oh, so (beautiful) Relationships they seem from the start It\\\\'s all so (deadly) When love is not together from the heart It\\\\'s drivin\\\\' me out of my mind! That\\\\'s why it\\\\'s HARD for me to find Can\\\\'t get it out of my head! Miss her, kiss her, love her(Wrong move you\\\\'re dead!) That girl is (poison)...Never trust a big butt and smile That girl is (poison)..(\\\"POISON!!\\\") NA (-caution) Before I start to meet a fly girl, you know? Cause in some (portions) You\\\\'ll think she\\\\'s the best thing in the world She\\\\'s so - (fly) She\\\\'ll drive you right out of your mind And steal your heart when you\\\\'re blind Beware she\\\\'s schemin\\\\', she\\\\'ll make you think you\\\\'re dreamin\\\\' YOU\\\\'LL fall in love and you\\\\'ll be screamin\\\\', demon, HOO.. Poison, deadly, movin\\\\' in slow Lookin for a mellow fellow like DeVoe Gettin paid, laid, so better lay low Schemin on house, money, and the whole show The low pro ho she\\\\'ll be cut like an aaa-FRO See what you\\\\'re sayin\\\\', huh, she\\\\'s a winner to you But I know she\\\\'s a loser (How do you know?) Me and the crew used to do her! \\\"POISON!\\\" \\\"POISON!\\\" \\\"POISON!\\\" \\\"POISON!\\\" \\\"POISON!\\\" \\\"POISON!\\\" \\\"POISON!\\\" \\\"POISON! \\\"POISON!\\\" \\\"POISON!\\\" \\\"POISON!\\\" \\\"POISON! \\\"POISON!\\\" \\\"POISON!\\\" \\\"POISON!\\\" \\\"POISON! I was at the park, shake, breakin and takin \\\\'em all And that night, I played the wall Checkin\\\\' out the fellas, the highs and lows Keepin\\\\' one eye open, still clockin\\\\' the hoes There was one particular girl that stood out from the rest Poison as can be, the high power chest Michael Biv here and I\\\\'m runnin\\\\' the show Bell, Biv DeVoe ..now you know! Yo, Slick, blow.. It\\\\'s drivin\\\\' me out of my mind! That\\\\'s why it\\\\'s HARD for me to find Can\\\\'t get it out of my head! Miss her, kiss her, love her(Wrong move you\\\\'re dead!) That girl is (poison)...Never trust a big butt and smile That girl is (poison)..(\\\"POISON!!\\\") Yo\\\\' fellas, that was my end of.. You know what I\\\\'m sayin\\\\', Mike? Yeah, B.B.D. in full effect Yo\\\\', wassup to Ralph T and Johnny G And I can\\\\'t forget about my boy, B. Brown And the whole NE crew Poison.. NA'\"\r\n            ]\r\n          },\r\n          \"metadata\": {\r\n            \"tags\": []\r\n          },\r\n          \"execution_count\": 7\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"cell_type\": \"code\",\r\n      \"metadata\": {\r\n        \"colab\": {\r\n          \"base_uri\": \"https://localhost:8080/\"\r\n        },\r\n        \"id\": \"Y3-afaV2Noz2\",\r\n        \"outputId\": \"acce7f42-b6c9-4278-a75c-27cb4eab93f1\"\r\n      },\r\n      \"source\": [\r\n        \"# Look at values in lyrics\\r\\n\",\r\n        \"songs['lyrics'].value_counts()\"\r\n      ],\r\n      \"execution_count\": null,\r\n      \"outputs\": [\r\n        {\r\n          \"output_type\": \"execute_result\",\r\n          \"data\": {\r\n            \"text/plain\": [\r\n              \"Lyrics for this song have yet to be released. Please check back once the song has been releasedn\",\r\nn\",\r\n              \"Instrumentaln\",\r\n              \"NA Si el ritmo te lleva a mover la cabeza Ya empezamos como es Mi música no discrimina a nadie Así que vamos a romper Toda mi gente se mueve Mira el ritmo cómo los tiene Hago música que entretiene El mundo nos quiere, nos quiere Me quiere a mí Toda mi gente se mueve Mira el ritmo cómo los tiene Hago música que entretiene Mi música los tiene fuerte bailando Y se baila así Tamo' rompiendo la discoteca La fiesta no para, apenas comienza C'est comme-ci, c'est comme ça Ma chèrie, la-la-la-la-la Francia, Colombia Me gusta (Freeze) J Balvin, Willy William Le gusta (Freeze) Los DJ's no mienten, le gusta a mi gente Y eso se fue mundial (Freeze) No le bajamos, más nunca paramos Es otro palo y ¡blam! ¿Y dónde está mi gente? Mais fais bouger la tête ¿Y dónde está mi gente? Say yeah, yeah, yeah Un, dos, tres, ¡leggo! (Ay di que sí) Esquina a esquina, de ahí no' vamo' El mundo es grande pero lo tengo en mi' manos Estoy muy duro, sí, ok, ahí vamos Y con el tiempo nos seguimos elevando Que seguimos rompiendo aquí Esta fiesta no tiene fin Botellas para arriba, sí Los tengo bailando, rompiendo y yo sigo aquí Que seguimos rompiendo aquí Esta fiesta no tiene fin Botellas para arriba, sí Los tengo bailando, rompiendo y yo sigo aquí ¿Y dónde está mi gente? Mais fais bouger la tête ¿Y dónde está mi gente? Say yeah, yeah, yeah Un, dos, tres, ¡leggo! (Ay di que sí) Worldwide Willy William J Balvin, man Uh-huh Uh-huh Uh-huh Uh-huhn\",\r\n              \"NA Yeah, Spyderman and Freeze in full effect Uh-huh You ready, Ron? I'm ready You ready, Biv? I'm ready, Slick, are you? Oh, yeah, break it down NA Girl, I, must (warn you) I sense something strange in my mind Situation is (serious) Let's cure it cause we're running out of time It's oh, so (beautiful) Relationships they seem from the start It's all so (deadly) When love is not together from the heart It's drivin' me out of my mind! That's why it's HARD for me to find Can't get it out of my head! Miss her, kiss her, love her(Wrong move you're dead!) That girl is (poison)...Never trust a big butt and smile That girl is (poison)..(\\\"POISON!!\\\") NA (-caution) Before I start to meet a fly girl, you know? Cause in some (portions) You'll think she's the best thing in the world She's so - (fly) She'll drive you right out of your mind And steal your heart when you're blind Beware she's schemin', she'll make you think you're dreamin' YOU'LL fall in love and you'll be screamin', demon, HOO.. Poison, deadly, movin' in slow Lookin for a mellow fellow like DeVoe Gettin paid, laid, so better lay low Schemin on house, money, and the whole show The low pro ho she'll be cut like an aaa-FRO See what you're sayin', huh, she's a winner to you But I know she's a loser (How do you know?) Me and the crew used to do her! \\\"POISON!\\\" \\\"POISON!\\\" \\\"POISON!\\\" \\\"POISON!\\\" \\\"POISON!\\\" \\\"POISON!\\\" \\\"POISON!\\\" \\\"POISON! \\\"POISON!\\\" \\\"POISON!\\\" \\\"POISON!\\\" \\\"POISON! \\\"POISON!\\\" \\\"POISON!\\\" \\\"POISON!\\\" \\\"POISON! I was at the park, shake, breakin and takin 'em all And that night, I played the wall Checkin' out the fellas, the highs and lows Keepin' one eye open, still clockin' the hoes There was one particular girl that stood out from the rest Poison as can be, the high power chest Michael Biv here and I'm runnin' the show Bell, Biv DeVoe ..now you know! Yo, Slick, blow.. It's drivin' me out of my mind! That's why it's HARD for me to find Can't get it out of my head! Miss her, kiss her, love her(Wrong move you're dead!) That girl is (poison)...Never trust a big butt and smile That girl is (poison)..(\\\"POISON!!\\\") Yo' fellas, that was my end of.. You know what I'm sayin', Mike? Yeah, B.B.D. in full effect Yo', wassup to Ralph T and Johnny G And I can't forget about my boy, B. Brown And the whole NE crew Poison.. NA     7\\n\",\r\nn\",\r\n              \"I've been smoking on the peace pipe I've been wondering just what would peace be like I've been staring into headlights Swallow me whole, finding my peace of mind I'm just trying to seize the moment Trying to love the little things, even if they're hard to love A monument to love unspoken Carved into stone, “Unwilling to come undone” It feels good to be running from the devil Another breath and I'm up another level It feels good to be up above the clouds It feels good for the first time in a long time now I remember back in Oakland I was lying there in rapture on the bathroom floor Moving hotel to hotel Out on the road, no idea really what's in store Light it up just like a flashlight Let it shine, let it rise just like a foreign sun Turn it over and it's capsized It's finally done, the battle's lost, yet I feel I've won It feels good to be running from the devil Another breath and I'm up another level It feels good to be up above the clouds It feels good for the first time in a long time now It feels good for the first time in a long time now It feels good to be me I'm high, staring at the ceiling Sending my love, what a wonderful feeling What comes next, I see a light I'm along for the ride as I'm taking flight I'm high, staring at the ceiling Sending my love, what a wonderful feeling What comes next, I see a light I'm along for the ride as I'm taking flight It feels good to be running from the devil Another breath and I'm up another level It feels good to be up above the clouds It feels good for the first time in a long time now It feels good for the first time in a long time to be me It feels good for the first time in a while I'm free I'm high, staring at the ceiling Sending my love, what a wonderful feeling What comes next, I see a light I'm along for the ride as I'm taking flight                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           1\\n\",\r\n              \"Golden years, gold, whop, whop, whop Golden years, gold, whop, whop, whop Golden years, gold, whop, whop, whop Don't let me hear you say Life's taking you nowhere, angel(Come get up, my baby) Look at that sky, life's begun Nights are warm and the days are young(Come get up, my baby) There's my baby, lost that's all Once I'm begging you save her little soul Golden years, gold, whop, whop, whop Come get up, my baby Last night they loved you Opening doors and pulling some strings, angel(Come get up, my baby) In walked luck and you looked in time Never look back, walk tall, act fine(Come get up, my baby) I'll stick with you baby for a thousand years Nothing's gonna touch you in these golden years Golden years Golden years, gold, whop, whop, whop Come get up, my baby Some of these days, and it won't be long Gonna drive back down where you once belonged In the back of a dream car twenty foot long(Come get up, my baby) Don't cry my sweet, don't break my heart Doing all right, but you gotta get smart Wish upon, wish upon, day upon day I believe, oh Lord, I believe all the way(Come get up, my baby) Run for the shadows, run for the shadows Run for the shadows in these golden years There's my baby, lost that's all Once I'm begging you save her little soul Golden years, gold, whop, whop, whop Come get up, my baby Don't let me hear you say life's taking you nowhere, angel(Come get up, my baby) Run for the shadows, run for the shadows Run for the shadows in these golden years I'll stick with you baby for a thousand years Nothing's gonna touch you in these golden years Golden years Golden years, gold, whop, whop, whop Golden years, gold, whop, whop, whop Golden years, gold, whop, whop, whop Golden years, gold, whop, whop, whop Golden years, gold, whop, whop, whop Golden years, gold, whop, whop, whop Golden years, gold, whop, whop, whop Golden years, gold, whop, whop, whop Golden years, gold, whop, whop, whop Golden years, gold, whop, whop, whop Golden years, gold, whop, whop, whop                                                                                                                                                                                                                                                                                                    1\\n\",\r\n              \"I ain't no angel Don't got no halo I cut off my wings Made my momma scream Woah I'm your darkest dream They call me devil My heart is empty They call me devil Just try and tempt me I steal your soul I'll eat you whole Ain't no other way They call me devil And you should be afraid I tell you lies I'll crawl inside your mind Grab hold of your eyes I will make you mine Oh And I'm gonna take my time (yeah) They call me devil My heart is empty They call me devil Just try and tempt me I steal your soul I'll eat you whole Ain't no other way They call me devil And you should be afraid I'm comin' I'm comin' So start runnin' start runnin' Yeah I'm comin' I'm comin' So start runnin' start runnin' NA They call me devil My heart is empty They call me devil Just try and tempt me I steal your soul I'll eat you whole Ain't no other way They call me devil And you should be afraidn\",\r\n              \"One, two, three, four Hands on your body, I'm grabbin' your ass Enjoyin' the moment 'cause life move too fast I'm lookin' forward, ignorin' the past These are the times that we'll laugh lookin' back I'm gettin' lucky like coins in the well Goodbye to my haters, I'm wishin' you well This is my year, man, if you couldn't tell This is our life and we livin' it well Late nights in the city, causin' hell Burn this bitch into the ground, oh well If all we got tonight, let's do this right Let's do this right Let's go to (Paradise) This shit feel like Friday nights This shit make me feel alive I feel like we in paradise, paradise (Paradise) Don't know if it's the drink I poured But I swear I've never loved you more When you right here, I come alive One more hit and we can fly This shit feel like (Paradise) I'm feelin' it, my head's where the ceilin' is (Oh yeah) This energy turns nights into memories (Oh yeah) Count up the bands, you've been workin' all summer Ex didn't know what he had, what a bummer Insecure people turn to insecure lovers Well, my drink is almost out and I'm about to pour another Just let it out The night has just begun, we on a level now If I get too fucked up, promise you'll hold me down Yeah, this that shit you can't deny This that shit you feel inside This our life, our time, we livin' well Late nights in the city, causin' hell Burn this bitch into the ground, oh well If all we got tonight, let's do this right Let's do this right Let's go to (Paradise) This shit feel like Friday nights (Ooh, it do) This shit make me feel alive (Baby) I feel like we in paradise, paradise (Paradise, oh yeah) Don't know if it's the drink I poured (Poured) But I swear I've never loved you more (Loved you more) When you right here, I come alive One more hit and we can fly This shit feel like (Paradise)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  1\\n\",\r\n              \"Waking up to no meaning, I stare at the ceiling Count the imperfections that surround my being Can tell how I'm feeling And it hurts more when you ask There's a hole in my head and heart But I'm a long way from the start There's a hole in my head and heart But I'm a long way from Back when I couldn't move, was frozen I told myself it's all good It's only chemical (Oh-woah) It's only chemical (Oh-woah) It's only chemical I'm too shy to speak up Guess I have my reasons for telling little lies About those around me and what I could be It's eating me alive There's a hole in my head and heart But I'm a long way from the start There's a hole in my head and heart But I'm a long way from Back when I couldn't move, was frozen I told myself it's all good It's only chemical (It's only chemical, it's only chemical) I want to scream, but it won't help I've created my own hell And It's only chemical (Oh-woah) It's only chemical (Oh-woah) It's only chemical I find comfort when they say you can't Sit and count the days until it ends There's still times I want to break everything I've ever made But I've come a long way from I've come a long way from Back when I couldn't move, was frozen I told myself it's all good It's only chemical (It's only chemical, it's only chemical) I want to scream but it won't help I've created my own hell And it's only chemical It's only chemical (Oh-woah) It's only chemical (Oh-woah) It's only chemical  (Oh-woah) It's only chemical (Oh-woahn\",\r\n              \"Name: lyrics, Length: 15977, dtype: int64\"\r\n            ]\r\n          },\r\n          \"metadata\": {\r\n            \"tags\": []\r\n          },\r\n          \"execution_count\": 9\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"cell_type\": \"code\",\r\n      \"metadata\": {\r\n        \"colab\": {\r\n          \"base_uri\": \"https://localhost:8080/\"\r\n        },\r\n        \"id\": \"0vr6m7D1ERtK\",\r\n        \"outputId\": \"1c082a46-dc86-4e8e-b0a0-c9ea45957740\"\r\n      },\r\n      \"source\": [\r\n        \"# Remove rows that have no lyrics or \\\"Instrumental\\\"\\r\\n\",\r\n        \"songs = songs[songs['lyrics'].notna()]\\r\\n\",\r\n        \"no_lyrics_yet = songs[songs['lyrics'] == 'Lyrics for this song have yet to be released. Please check back once the song has been released.'].index\\r\\n\",\r\n        \"songs.drop(no_lyrics_yet, inplace=True)\\r\\n\",\r\n        \"no_lyrics_NA = songs[songs['lyrics'] == 'NA NA'].index\\r\\n\",\r\n        \"songs.drop(no_lyrics_NA, inplace=True)\\r\\n\",\r\n        \"print(songs.shape)\"\r\n      ],\r\n      \"execution_count\": null,\r\n      \"outputs\": [\r\n        {\r\n          \"output_type\": \"stream\",\r\n          \"text\": [\r\n            \"(18127, 22)\\n\"\r\n          ],\r\n          \"name\": \"stdout\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"cell_type\": \"code\",\r\n      \"metadata\": {\r\n        \"id\": \"k1kSvzdmmgOS\"\r\n      },\r\n      \"source\": [\r\n        \"# Create function to tokenize a list of words\\r\\n\",\r\n        \"def tokens(text):\\r\\n\",\r\n        \"  '''\\r\\n\",\r\n        \"  Parses a string into a list of sementic units (words)0\\r\\n\",\r\n        \"\\r\\n\",\r\n        \"  Args:\\r\\n\",\r\n        \"    text (str): A string of values to be tokenized\\r\\n\",\r\n        \"\\r\\n\",\r\n        \"  Returns:\\r\\n\",\r\n        \"    list of tokens\\r\\n\",\r\n        \"  '''\\r\\n\",\r\n        \"\\r\\n\",\r\n        \"  # remove all non-alpha numeric characters\\r\\n\",\r\n        \"  tokens = re.sub('[^a-z A-Z 0-9]', '', text)\\r\\n\",\r\n        \"  \\r\\n\",\r\n        \"  # Lowercase all and split on spaces\\r\\n\",\r\n        \"  tokens = tokens.lower().split()\\r\\n\",\r\n        \"\\r\\n\",\r\n        \"  return tokens\"\r\n      ],\r\n      \"execution_count\": null,\r\n      \"outputs\": []\r\n    },\r\n    {\r\n      \"cell_type\": \"code\",\r\n      \"metadata\": {\r\n        \"colab\": {\r\n          \"base_uri\": \"https://localhost:8080/\",\r\n          \"height\": 202\r\n        },\r\n        \"id\": \"em4ntYoeCS-o\",\r\n        \"outputId\": \"4c4a9ad0-a1a1-414e-f147-d747fcbbbcc1\"\r\n      },\r\n      \"source\": [\r\n        \"# Tokenize the lyrics\\r\\n\",\r\n        \"songs['tokens'] = songs['lyrics'].apply(tokens)\\r\\n\",\r\n        \"\\r\\n\",\r\n        \"# Compare the lyrics to tokens\\r\\n\",\r\n        \"songs[['lyrics', 'tokens']][:5]\"\r\n      ],\r\n      \"execution_count\": null,\r\n      \"outputs\": [\r\n        {\r\n          \"output_type\": \"execute_result\",\r\n          \"data\": {\r\n            \"text/html\": [\r\n              \"<div>\\n\",\r\n              \"<style scoped>\\n\",\r\n              \"    .dataframe tbody tr th:only-of-type {\\n\",\r\n              \"        vertical-align: middle;\\n\",\r\n              \"    }\\n\",\r\n              \"\\n\",\r\n              \"    .dataframe tbody tr th {\\n\",\r\n              \"        vertical-align: top;\\n\",\r\n              \"    }\\n\",\r\n              \"\\n\",\r\n              \"    .dataframe thead th {\\n\",\r\n              \"        text-align: right;\\n\",\r\n              \"    }\\n\",\r\n              \"</style>\\n\",\r\n              \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\r\n              \"  <thead>\\n\",\r\n              \"    <tr style=\\\"text-align: right;\\\">\\n\",\r\n              \"      <th></th>\\n\",\r\n              \"      <th>lyrics</th>\\n\",\r\n              \"      <th>tokens</th>\\n\",\r\n              \"    </tr>\\n\",\r\n              \"  </thead>\\n\",\r\n              \"  <tbody>\\n\",\r\n              \"    <tr>\\n\",\r\n              \"      <th>0</th>\\n\",\r\n              \"      <td>Minsan pa Nang ako'y napalingon Hindi ko alam ...</td>\\n\",\r\n              \"      <td>[minsan, pa, nang, akoy, napalingon, hindi, ko...</td>\\n\",\r\n              \"    </tr>\\n\",\r\n              \"    <tr>\\n\",\r\n              \"      <th>1</th>\\n\",\r\n              \"      <td>The trees, are singing in the wind The sky blu...</td>\\n\",\r\n              \"      <td>[the, trees, are, singing, in, the, wind, the,...</td>\\n\",\r\n              \"    </tr>\\n\",\r\n              \"    <tr>\\n\",\r\n              \"      <th>2</th>\\n\",\r\n              \"      <td>NA Yeah, Spyderman and Freeze in full effect U...</td>\\n\",\r\n              \"      <td>[na, yeah, spyderman, and, freeze, in, full, e...</td>\\n\",\r\n              \"    </tr>\\n\",\r\n              \"    <tr>\\n\",\r\n              \"      <th>3</th>\\n\",\r\n              \"      <td>I really can't stay Baby it's cold outside I'v...</td>\\n\",\r\n              \"      <td>[i, really, cant, stay, baby, its, cold, outsi...</td>\\n\",\r\n              \"    </tr>\\n\",\r\n              \"    <tr>\\n\",\r\n              \"      <th>4</th>\\n\",\r\n              \"      <td>Get up out of my business You don't keep me fr...</td>\\n\",\r\n              \"      <td>[get, up, out, of, my, business, you, dont, ke...</td>\\n\",\r\n              \"    </tr>\\n\",\r\n              \"  </tbody>\\n\",\r\n              \"</table>\\n\",\r\n              \"</div>\"\r\n            ],\r\n            \"text/plain\": [\r\n              \"                                              lyrics                                             tokens\\n\",\r\n              \"0  Minsan pa Nang ako'y napalingon Hindi ko alam ...  [minsan, pa, nang, akoy, napalingon, hindi, ko...\\n\",\r\n              \"1  The trees, are singing in the wind The sky blu...  [the, trees, are, singing, in, the, wind, the,...\\n\",\r\n              \"2  NA Yeah, Spyderman and Freeze in full effect U...  [na, yeah, spyderman, and, freeze, in, full, e...\\n\",\r\n              \"3  I really can't stay Baby it's cold outside I'v...  [i, really, cant, stay, baby, its, cold, outsi...\\n\",\r\n              \"4  Get up out of my business You don't keep me fr...  [get, up, out, of, my, business, you, dont, ke...\"\r\n            ]\r\n          },\r\n          \"metadata\": {\r\n            \"tags\": []\r\n          },\r\n          \"execution_count\": 12\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"cell_type\": \"code\",\r\n      \"metadata\": {\r\n        \"colab\": {\r\n          \"base_uri\": \"https://localhost:8080/\",\r\n          \"height\": 540\r\n        },\r\n        \"id\": \"UQzpJCugS_tm\",\r\n        \"outputId\": \"5cc62c36-532a-4d67-90ec-ac9c6fb4d19b\"\r\n      },\r\n      \"source\": [\r\n        \"# Graph the count of songs per genre\\r\\n\",\r\n        \"plt.figure(figsize=(12,8), facecolor='white')\\r\\n\",\r\n        \"ax = sns.countplot(x='genre', data=songs)\\r\\n\",\r\n        \"plt.title('Count of Songs in each Genre', fontdict={'size':20})\\r\\n\",\r\n        \"plt.xlabel('\\\\nGenre of Song', fontdict={'size':16})\\r\\n\",\r\n        \"plt.ylabel('Frequency in the Dataset\\\\n', fontdict={'size':16});\"\r\n      ],\r\n      \"execution_count\": null,\r\n      \"outputs\": [\r\n        {\r\n          \"output_type\": \"display_data\",\r\n          \"data\": {\r\n            \"image/png\": \"\\n\",\r\n            \"text/plain\": [\r\n              \"<Figure size 864x576 with 1 Axes>\"\r\n            ]\r\n          },\r\n          \"metadata\": {\r\n            \"tags\": []\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"cell_type\": \"markdown\",\r\n      \"metadata\": {\r\n        \"id\": \"RghfoRS53MYk\"\r\n      },\r\n      \"source\": [\r\n        \"This dataset (spotify_songs.csv) is not diverse in genres but has lyrics and is large enough to train a good model on.\"\r\n      ]\r\n    },\r\n    {\r\n      \"cell_type\": \"markdown\",\r\n      \"metadata\": {\r\n        \"id\": \"JqEyO0Cj3m-G\"\r\n      },\r\n      \"source\": [\r\n        \"This dataset (billboard-lyrics-spotify.csv) has lyrics and appears more deverse but no specified genre and is a small dataset.\"\r\n      ]\r\n    },\r\n    {\r\n      \"cell_type\": \"code\",\r\n      \"metadata\": {\r\n        \"colab\": {\r\n          \"base_uri\": \"https://localhost:8080/\",\r\n          \"height\": 378\r\n        },\r\n        \"id\": \"59bdjRbky2oB\",\r\n        \"outputId\": \"ec281087-aff8-4edf-f1c7-589e93719032\"\r\n      },\r\n      \"source\": [\r\n        \"# Look at another dataset and preform EDA\\r\\n\",\r\n        \"most_pop_songs = pd.read_csv('https://raw.githubusercontent.com/Spotify-DSPT-158/Build-Week-Spotify/main/most_popular_spotify_songs.csv')\\r\\n\",\r\n        \"print(most_pop_songs.shape)\\r\\n\",\r\n        \"most_pop_songs.head()\"\r\n      ],\r\n      \"execution_count\": null,\r\n      \"outputs\": [\r\n        {\r\n          \"output_type\": \"stream\",\r\n          \"text\": [\r\n            \"(75022, 18)\\n\"\r\n          ],\r\n          \"name\": \"stdout\"\r\n        },\r\n        {\r\n          \"output_type\": \"execute_result\",\r\n          \"data\": {\r\n            \"text/html\": [\r\n              \"<div>\\n\",\r\n              \"<style scoped>\\n\",\r\n              \"    .dataframe tbody tr th:only-of-type {\\n\",\r\n              \"        vertical-align: middle;\\n\",\r\n              \"    }\\n\",\r\n              \"\\n\",\r\n              \"    .dataframe tbody tr th {\\n\",\r\n              \"        vertical-align: top;\\n\",\r\n              \"    }\\n\",\r\n              \"\\n\",\r\n              \"    .dataframe thead th {\\n\",\r\n              \"        text-align: right;\\n\",\r\n              \"    }\\n\",\r\n              \"</style>\\n\",\r\n              \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\r\n              \"  <thead>\\n\",\r\n              \"    <tr style=\\\"text-align: right;\\\">\\n\",\r\n              \"      <th></th>\\n\",\r\n              \"      <th>genre</th>\\n\",\r\n              \"      <th>artist_name</th>\\n\",\r\n              \"      <th>track_name</th>\\n\",\r\n              \"      <th>track_id</th>\\n\",\r\n              \"      <th>popularity</th>\\n\",\r\n              \"      <th>acousticness</th>\\n\",\r\n              \"      <th>danceability</th>\\n\",\r\n              \"      <th>duration_ms</th>\\n\",\r\n              \"      <th>energy</th>\\n\",\r\n              \"      <th>instrumentalness</th>\\n\",\r\n              \"      <th>key</th>\\n\",\r\n              \"      <th>liveness</th>\\n\",\r\n              \"      <th>loudness</th>\\n\",\r\n              \"      <th>mode</th>\\n\",\r\n              \"      <th>speechiness</th>\\n\",\r\n              \"      <th>tempo</th>\\n\",\r\n              \"      <th>time_signature</th>\\n\",\r\n              \"      <th>valence</th>\\n\",\r\n              \"    </tr>\\n\",\r\n              \"  </thead>\\n\",\r\n              \"  <tbody>\\n\",\r\n              \"    <tr>\\n\",\r\n              \"      <th>0</th>\\n\",\r\n              \"      <td>R&amp;B</td>\\n\",\r\n              \"      <td>Mary J. Blige</td>\\n\",\r\n              \"      <td>Be Without You - Kendu Mix</td>\\n\",\r\n              \"      <td>2YegxR5As7BeQuVp2U6pek</td>\\n\",\r\n              \"      <td>65</td>\\n\",\r\n              \"      <td>0.0830</td>\\n\",\r\n              \"      <td>0.724</td>\\n\",\r\n              \"      <td>246333</td>\\n\",\r\n              \"      <td>0.689</td>\\n\",\r\n              \"      <td>0.000000</td>\\n\",\r\n              \"      <td>D</td>\\n\",\r\n              \"      <td>0.3040</td>\\n\",\r\n              \"      <td>-5.922</td>\\n\",\r\n              \"      <td>Minor</td>\\n\",\r\n              \"      <td>0.1350</td>\\n\",\r\n              \"      <td>146.496</td>\\n\",\r\n              \"      <td>4/4</td>\\n\",\r\n              \"      <td>0.6930</td>\\n\",\r\n              \"    </tr>\\n\",\r\n              \"    <tr>\\n\",\r\n              \"      <th>1</th>\\n\",\r\n              \"      <td>R&amp;B</td>\\n\",\r\n              \"      <td>Rihanna</td>\\n\",\r\n              \"      <td>Desperado</td>\\n\",\r\n              \"      <td>6KFaHC9G178beAp7P0Vi5S</td>\\n\",\r\n              \"      <td>63</td>\\n\",\r\n              \"      <td>0.3230</td>\\n\",\r\n              \"      <td>0.685</td>\\n\",\r\n              \"      <td>186467</td>\\n\",\r\n              \"      <td>0.610</td>\\n\",\r\n              \"      <td>0.000000</td>\\n\",\r\n              \"      <td>C</td>\\n\",\r\n              \"      <td>0.1020</td>\\n\",\r\n              \"      <td>-5.221</td>\\n\",\r\n              \"      <td>Minor</td>\\n\",\r\n              \"      <td>0.0439</td>\\n\",\r\n              \"      <td>94.384</td>\\n\",\r\n              \"      <td>3/4</td>\\n\",\r\n              \"      <td>0.3230</td>\\n\",\r\n              \"    </tr>\\n\",\r\n              \"    <tr>\\n\",\r\n              \"      <th>2</th>\\n\",\r\n              \"      <td>R&amp;B</td>\\n\",\r\n              \"      <td>Yung Bleu</td>\\n\",\r\n              \"      <td>Ice On My Baby (feat. Kevin Gates) - Remix</td>\\n\",\r\n              \"      <td>6muW8cSjJ3rusKJ0vH5olw</td>\\n\",\r\n              \"      <td>62</td>\\n\",\r\n              \"      <td>0.0675</td>\\n\",\r\n              \"      <td>0.762</td>\\n\",\r\n              \"      <td>199520</td>\\n\",\r\n              \"      <td>0.520</td>\\n\",\r\n              \"      <td>0.000004</td>\\n\",\r\n              \"      <td>F</td>\\n\",\r\n              \"      <td>0.1140</td>\\n\",\r\n              \"      <td>-5.237</td>\\n\",\r\n              \"      <td>Minor</td>\\n\",\r\n              \"      <td>0.0959</td>\\n\",\r\n              \"      <td>75.047</td>\\n\",\r\n              \"      <td>4/4</td>\\n\",\r\n              \"      <td>0.0862</td>\\n\",\r\n              \"    </tr>\\n\",\r\n              \"    <tr>\\n\",\r\n              \"      <th>3</th>\\n\",\r\n              \"      <td>R&amp;B</td>\\n\",\r\n              \"      <td>Surfaces</td>\\n\",\r\n              \"      <td>Heaven Falls / Fall on Me</td>\\n\",\r\n              \"      <td>7yHqOZfsXYlicyoMt62yC6</td>\\n\",\r\n              \"      <td>61</td>\\n\",\r\n              \"      <td>0.3600</td>\\n\",\r\n              \"      <td>0.563</td>\\n\",\r\n              \"      <td>240597</td>\\n\",\r\n              \"      <td>0.366</td>\\n\",\r\n              \"      <td>0.002430</td>\\n\",\r\n              \"      <td>B</td>\\n\",\r\n              \"      <td>0.0955</td>\\n\",\r\n              \"      <td>-6.896</td>\\n\",\r\n              \"      <td>Minor</td>\\n\",\r\n              \"      <td>0.1210</td>\\n\",\r\n              \"      <td>85.352</td>\\n\",\r\n              \"      <td>4/4</td>\\n\",\r\n              \"      <td>0.7680</td>\\n\",\r\n              \"    </tr>\\n\",\r\n              \"    <tr>\\n\",\r\n              \"      <th>4</th>\\n\",\r\n              \"      <td>R&amp;B</td>\\n\",\r\n              \"      <td>Olivia O'Brien</td>\\n\",\r\n              \"      <td>Love Myself</td>\\n\",\r\n              \"      <td>4XzgjxGKqULifVf7mnDIQK</td>\\n\",\r\n              \"      <td>68</td>\\n\",\r\n              \"      <td>0.5960</td>\\n\",\r\n              \"      <td>0.653</td>\\n\",\r\n              \"      <td>213947</td>\\n\",\r\n              \"      <td>0.621</td>\\n\",\r\n              \"      <td>0.000000</td>\\n\",\r\n              \"      <td>B</td>\\n\",\r\n              \"      <td>0.0811</td>\\n\",\r\n              \"      <td>-5.721</td>\\n\",\r\n              \"      <td>Minor</td>\\n\",\r\n              \"      <td>0.0409</td>\\n\",\r\n              \"      <td>100.006</td>\\n\",\r\n              \"      <td>4/4</td>\\n\",\r\n              \"      <td>0.4660</td>\\n\",\r\n              \"    </tr>\\n\",\r\n              \"  </tbody>\\n\",\r\n              \"</table>\\n\",\r\n              \"</div>\"\r\n            ],\r\n            \"text/plain\": [\r\n              \"  genre     artist_name  ... time_signature valence\\n\",\r\n              \"0   R&B   Mary J. Blige  ...            4/4  0.6930\\n\",\r\n              \"1   R&B         Rihanna  ...            3/4  0.3230\\n\",\r\n              \"2   R&B       Yung Bleu  ...            4/4  0.0862\\n\",\r\n              \"3   R&B        Surfaces  ...            4/4  0.7680\\n\",\r\n              \"4   R&B  Olivia O'Brien  ...            4/4  0.4660\\n\",\r\n              \"\\n\",\r\n              \"[5 rows x 18 columns]\"\r\n            ]\r\n          },\r\n          \"metadata\": {\r\n            \"tags\": []\r\n          },\r\n          \"execution_count\": 14\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"cell_type\": \"code\",\r\n      \"metadata\": {\r\n        \"colab\": {\r\n          \"base_uri\": \"https://localhost:8080/\"\r\n        },\r\n        \"id\": \"703hAtJu0e_c\",\r\n        \"outputId\": \"0da5e09c-e37a-43d7-9db1-08325ae8966c\"\r\n      },\r\n      \"source\": [\r\n        \"most_pop_songs.columns\"\r\n      ],\r\n      \"execution_count\": null,\r\n      \"outputs\": [\r\n        {\r\n          \"output_type\": \"execute_result\",\r\n          \"data\": {\r\n            \"text/plain\": [\r\n              \"Index(['genre', 'artist_name', 'track_name', 'track_id', 'popularity',\\n\",\r\n              \"       'acousticness', 'danceability', 'duration_ms', 'energy',\\n\",\r\n              \"       'instrumentalness', 'key', 'liveness', 'loudness', 'mode',\\n\",\r\n              \"       'speechiness', 'tempo', 'time_signature', 'valence'],\\n\",\r\n              \"      dtype='object')\"\r\n            ]\r\n          },\r\n          \"metadata\": {\r\n            \"tags\": []\r\n          },\r\n          \"execution_count\": 15\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"cell_type\": \"code\",\r\n      \"metadata\": {\r\n        \"colab\": {\r\n          \"base_uri\": \"https://localhost:8080/\",\r\n          \"height\": 628\r\n        },\r\n        \"id\": \"OJnvylBJ0lji\",\r\n        \"outputId\": \"5859b3ae-c32c-4322-d353-88f56371acbc\"\r\n      },\r\n      \"source\": [\r\n        \"plt.figure(figsize=(12,8), facecolor='white')\\r\\n\",\r\n        \"ax = sns.countplot(x='genre', data=most_pop_songs)\\r\\n\",\r\n        \"plt.title('Count of Songs in each Genre', fontdict={'size':20})\\r\\n\",\r\n        \"plt.xlabel('\\\\nGenre of Song', fontdict={'size':16})\\r\\n\",\r\n        \"plt.xticks(rotation=90, size=12)\\r\\n\",\r\n        \"plt.ylabel('Frequency in the Dataset\\\\n', fontdict={'size':16})\\r\\n\",\r\n        \"plt.yticks(np.arange(0, 10000, 500), size=12)\\r\\n\",\r\n        \"plt.grid();\"\r\n      ],\r\n      \"execution_count\": null,\r\n      \"outputs\": [\r\n        {\r\n          \"output_type\": \"display_data\",\r\n          \"data\": {\r\n            \"image/png\": \"\\n\",\r\n            \"text/plain\": [\r\n              \"<Figure size 864x576 with 1 Axes>\"\r\n            ]\r\n          },\r\n          \"metadata\": {\r\n            \"tags\": []\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"cell_type\": \"markdown\",\r\n      \"metadata\": {\r\n        \"id\": \"f7b-Aeme2nid\"\r\n      },\r\n      \"source\": [\r\n        \"This dataset (most_popular_spotify_songs.csv) is more diverse but half as many observations as first dataset (spotify_songs.csv) and no lyrics.\"\r\n      ]\r\n    },\r\n    {\r\n      \"cell_type\": \"code\",\r\n      \"metadata\": {\r\n        \"id\": \"eKIhayUl0teJ\",\r\n        \"colab\": {\r\n          \"base_uri\": \"https://localhost:8080/\",\r\n          \"height\": 314\r\n        },\r\n        \"outputId\": \"dafce712-8f94-41b6-a5dd-931bc929b20a\"\r\n      },\r\n      \"source\": [\r\n        \"most_pop_songs.describe()\"\r\n      ],\r\n      \"execution_count\": null,\r\n      \"outputs\": [\r\n        {\r\n          \"output_type\": \"execute_result\",\r\n          \"data\": {\r\n            \"text/html\": [\r\n              \"<div>\\n\",\r\n              \"<style scoped>\\n\",\r\n              \"    .dataframe tbody tr th:only-of-type {\\n\",\r\n              \"        vertical-align: middle;\\n\",\r\n              \"    }\\n\",\r\n              \"\\n\",\r\n              \"    .dataframe tbody tr th {\\n\",\r\n              \"        vertical-align: top;\\n\",\r\n              \"    }\\n\",\r\n              \"\\n\",\r\n              \"    .dataframe thead th {\\n\",\r\n              \"        text-align: right;\\n\",\r\n              \"    }\\n\",\r\n              \"</style>\\n\",\r\n              \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\r\n              \"  <thead>\\n\",\r\n              \"    <tr style=\\\"text-align: right;\\\">\\n\",\r\n              \"      <th></th>\\n\",\r\n              \"      <th>popularity</th>\\n\",\r\n              \"      <th>acousticness</th>\\n\",\r\n              \"      <th>danceability</th>\\n\",\r\n              \"      <th>duration_ms</th>\\n\",\r\n              \"      <th>energy</th>\\n\",\r\n              \"      <th>instrumentalness</th>\\n\",\r\n              \"      <th>liveness</th>\\n\",\r\n              \"      <th>loudness</th>\\n\",\r\n              \"      <th>speechiness</th>\\n\",\r\n              \"      <th>tempo</th>\\n\",\r\n              \"      <th>valence</th>\\n\",\r\n              \"    </tr>\\n\",\r\n              \"  </thead>\\n\",\r\n              \"  <tbody>\\n\",\r\n              \"    <tr>\\n\",\r\n              \"      <th>count</th>\\n\",\r\n              \"      <td>75022.000000</td>\\n\",\r\n              \"      <td>75022.000000</td>\\n\",\r\n              \"      <td>75022.000000</td>\\n\",\r\n              \"      <td>7.502200e+04</td>\\n\",\r\n              \"      <td>75022.000000</td>\\n\",\r\n              \"      <td>75022.000000</td>\\n\",\r\n              \"      <td>75022.000000</td>\\n\",\r\n              \"      <td>75022.000000</td>\\n\",\r\n              \"      <td>75022.000000</td>\\n\",\r\n              \"      <td>75022.000000</td>\\n\",\r\n              \"      <td>75022.000000</td>\\n\",\r\n              \"    </tr>\\n\",\r\n              \"    <tr>\\n\",\r\n              \"      <th>mean</th>\\n\",\r\n              \"      <td>52.326757</td>\\n\",\r\n              \"      <td>0.286114</td>\\n\",\r\n              \"      <td>0.590045</td>\\n\",\r\n              \"      <td>2.338447e+05</td>\\n\",\r\n              \"      <td>0.609805</td>\\n\",\r\n              \"      <td>0.098790</td>\\n\",\r\n              \"      <td>0.188244</td>\\n\",\r\n              \"      <td>-8.127492</td>\\n\",\r\n              \"      <td>0.095000</td>\\n\",\r\n              \"      <td>119.785346</td>\\n\",\r\n              \"      <td>0.469266</td>\\n\",\r\n              \"    </tr>\\n\",\r\n              \"    <tr>\\n\",\r\n              \"      <th>std</th>\\n\",\r\n              \"      <td>8.930855</td>\\n\",\r\n              \"      <td>0.305384</td>\\n\",\r\n              \"      <td>0.168050</td>\\n\",\r\n              \"      <td>8.315542e+04</td>\\n\",\r\n              \"      <td>0.230312</td>\\n\",\r\n              \"      <td>0.249359</td>\\n\",\r\n              \"      <td>0.158109</td>\\n\",\r\n              \"      <td>4.636775</td>\\n\",\r\n              \"      <td>0.108138</td>\\n\",\r\n              \"      <td>29.795567</td>\\n\",\r\n              \"      <td>0.244772</td>\\n\",\r\n              \"    </tr>\\n\",\r\n              \"    <tr>\\n\",\r\n              \"      <th>min</th>\\n\",\r\n              \"      <td>41.000000</td>\\n\",\r\n              \"      <td>0.000001</td>\\n\",\r\n              \"      <td>0.058100</td>\\n\",\r\n              \"      <td>3.009300e+04</td>\\n\",\r\n              \"      <td>0.000234</td>\\n\",\r\n              \"      <td>0.000000</td>\\n\",\r\n              \"      <td>0.009670</td>\\n\",\r\n              \"      <td>-47.046000</td>\\n\",\r\n              \"      <td>0.022200</td>\\n\",\r\n              \"      <td>31.689000</td>\\n\",\r\n              \"      <td>0.017600</td>\\n\",\r\n              \"    </tr>\\n\",\r\n              \"    <tr>\\n\",\r\n              \"      <th>25%</th>\\n\",\r\n              \"      <td>45.000000</td>\\n\",\r\n              \"      <td>0.029300</td>\\n\",\r\n              \"      <td>0.483000</td>\\n\",\r\n              \"      <td>1.910228e+05</td>\\n\",\r\n              \"      <td>0.460250</td>\\n\",\r\n              \"      <td>0.000000</td>\\n\",\r\n              \"      <td>0.096200</td>\\n\",\r\n              \"      <td>-9.682750</td>\\n\",\r\n              \"      <td>0.035600</td>\\n\",\r\n              \"      <td>95.431750</td>\\n\",\r\n              \"      <td>0.274000</td>\\n\",\r\n              \"    </tr>\\n\",\r\n              \"    <tr>\\n\",\r\n              \"      <th>50%</th>\\n\",\r\n              \"      <td>50.000000</td>\\n\",\r\n              \"      <td>0.158000</td>\\n\",\r\n              \"      <td>0.602000</td>\\n\",\r\n              \"      <td>2.213730e+05</td>\\n\",\r\n              \"      <td>0.638000</td>\\n\",\r\n              \"      <td>0.000015</td>\\n\",\r\n              \"      <td>0.123000</td>\\n\",\r\n              \"      <td>-6.979000</td>\\n\",\r\n              \"      <td>0.049700</td>\\n\",\r\n              \"      <td>119.048000</td>\\n\",\r\n              \"      <td>0.459000</td>\\n\",\r\n              \"    </tr>\\n\",\r\n              \"    <tr>\\n\",\r\n              \"      <th>75%</th>\\n\",\r\n              \"      <td>58.000000</td>\\n\",\r\n              \"      <td>0.485000</td>\\n\",\r\n              \"      <td>0.713000</td>\\n\",\r\n              \"      <td>2.604368e+05</td>\\n\",\r\n              \"      <td>0.792000</td>\\n\",\r\n              \"      <td>0.005727</td>\\n\",\r\n              \"      <td>0.228000</td>\\n\",\r\n              \"      <td>-5.198000</td>\\n\",\r\n              \"      <td>0.102000</td>\\n\",\r\n              \"      <td>139.997000</td>\\n\",\r\n              \"      <td>0.659000</td>\\n\",\r\n              \"    </tr>\\n\",\r\n              \"    <tr>\\n\",\r\n              \"      <th>max</th>\\n\",\r\n              \"      <td>100.000000</td>\\n\",\r\n              \"      <td>0.996000</td>\\n\",\r\n              \"      <td>0.986000</td>\\n\",\r\n              \"      <td>5.488000e+06</td>\\n\",\r\n              \"      <td>0.999000</td>\\n\",\r\n              \"      <td>0.994000</td>\\n\",\r\n              \"      <td>1.000000</td>\\n\",\r\n              \"      <td>1.585000</td>\\n\",\r\n              \"      <td>0.960000</td>\\n\",\r\n              \"      <td>242.903000</td>\\n\",\r\n              \"      <td>0.992000</td>\\n\",\r\n              \"    </tr>\\n\",\r\n              \"  </tbody>\\n\",\r\n              \"</table>\\n\",\r\n              \"</div>\"\r\n            ],\r\n            \"text/plain\": [\r\n              \"         popularity  acousticness  ...         tempo       valence\\n\",\r\n              \"count  75022.000000  75022.000000  ...  75022.000000  75022.000000\\n\",\r\n              \"mean      52.326757      0.286114  ...    119.785346      0.469266\\n\",\r\n              \"std        8.930855      0.305384  ...     29.795567      0.244772\\n\",\r\n              \"min       41.000000      0.000001  ...     31.689000      0.017600\\n\",\r\n              \"25%       45.000000      0.029300  ...     95.431750      0.274000\\n\",\r\n              \"50%       50.000000      0.158000  ...    119.048000      0.459000\\n\",\r\n              \"75%       58.000000      0.485000  ...    139.997000      0.659000\\n\",\r\n              \"max      100.000000      0.996000  ...    242.903000      0.992000\\n\",\r\n              \"\\n\",\r\n              \"[8 rows x 11 columns]\"\r\n            ]\r\n          },\r\n          \"metadata\": {\r\n            \"tags\": []\r\n          },\r\n          \"execution_count\": 17\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"cell_type\": \"code\",\r\n      \"metadata\": {\r\n        \"id\": \"P-ZACDVWtV_P\",\r\n        \"colab\": {\r\n          \"base_uri\": \"https://localhost:8080/\"\r\n        },\r\n        \"outputId\": \"a9b6ea8b-31ea-475a-bad8-fcee63ee4cdf\"\r\n      },\r\n      \"source\": [\r\n        \"most_pop_songs.isnull().sum()\"\r\n      ],\r\n      \"execution_count\": null,\r\n      \"outputs\": [\r\n        {\r\n          \"output_type\": \"execute_result\",\r\n          \"data\": {\r\n            \"text/plain\": [\r\n              \"genre               0\\n\",\r\n              \"artist_name         0\\n\",\r\n              \"track_name          0\\n\",\r\n              \"track_id            0\\n\",\r\n              \"popularity          0\\n\",\r\n              \"acousticness        0\\n\",\r\n              \"danceability        0\\n\",\r\n              \"duration_ms         0\\n\",\r\n              \"energy              0\\n\",\r\n              \"instrumentalness    0\\n\",\r\n              \"key                 0\\n\",\r\n              \"liveness            0\\n\",\r\n              \"loudness            0\\n\",\r\n              \"mode                0\\n\",\r\n              \"speechiness         0\\n\",\r\n              \"tempo               0\\n\",\r\n              \"time_signature      0\\n\",\r\n              \"valence             0\\n\",\r\n              \"dtype: int64\"\r\n            ]\r\n          },\r\n          \"metadata\": {\r\n            \"tags\": []\r\n          },\r\n          \"execution_count\": 18\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"cell_type\": \"code\",\r\n      \"metadata\": {\r\n        \"id\": \"B2EpTsDjx4PZ\",\r\n        \"colab\": {\r\n          \"base_uri\": \"https://localhost:8080/\"\r\n        },\r\n        \"outputId\": \"0360b805-36b6-4088-b5a1-70c117a2efaf\"\r\n      },\r\n      \"source\": [\r\n        \"!python -m spacy download en_core_web_md\"\r\n      ],\r\n      \"execution_count\": null,\r\n      \"outputs\": [\r\n        {\r\n          \"output_type\": \"stream\",\r\n          \"text\": [\r\n            \"Requirement already satisfied: en_core_web_md==2.2.5 from https://github.com/explosion/spacy-models/releases/download/en_core_web_md-2.2.5/en_core_web_md-2.2.5.tar.gz#egg=en_core_web_md==2.2.5 in /usr/local/lib/python3.6/dist-packages (2.2.5)\\n\",\r\n            \"Requirement already satisfied: spacy>=2.2.2 in /usr/local/lib/python3.6/dist-packages (from en_core_web_md==2.2.5) (2.2.4)\\n\",\r\n            \"Requirement already satisfied: murmurhash<1.1.0,>=0.28.0 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_md==2.2.5) (1.0.5)\\n\",\r\n            \"Requirement already satisfied: numpy>=1.15.0 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_md==2.2.5) (1.19.4)\\n\",\r\n            \"Requirement already satisfied: wasabi<1.1.0,>=0.4.0 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_md==2.2.5) (0.8.0)\\n\",\r\n            \"Requirement already satisfied: cymem<2.1.0,>=2.0.2 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_md==2.2.5) (2.0.5)\\n\",\r\n            \"Requirement already satisfied: preshed<3.1.0,>=3.0.2 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_md==2.2.5) (3.0.5)\\n\",\r\n            \"Requirement already satisfied: setuptools in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_md==2.2.5) (51.0.0)\\n\",\r\n            \"Requirement already satisfied: thinc==7.4.0 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_md==2.2.5) (7.4.0)\\n\",\r\n            \"Requirement already satisfied: plac<1.2.0,>=0.9.6 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_md==2.2.5) (1.1.3)\\n\",\r\n            \"Requirement already satisfied: srsly<1.1.0,>=1.0.2 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_md==2.2.5) (1.0.5)\\n\",\r\n            \"Requirement already satisfied: blis<0.5.0,>=0.4.0 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_md==2.2.5) (0.4.1)\\n\",\r\n            \"Requirement already satisfied: catalogue<1.1.0,>=0.0.7 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_md==2.2.5) (1.0.0)\\n\",\r\n            \"Requirement already satisfied: requests<3.0.0,>=2.13.0 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_md==2.2.5) (2.25.1)\\n\",\r\n            \"Requirement already satisfied: tqdm<5.0.0,>=4.38.0 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_md==2.2.5) (4.55.1)\\n\",\r\n            \"Requirement already satisfied: importlib-metadata>=0.20; python_version < \\\"3.8\\\" in /usr/local/lib/python3.6/dist-packages (from catalogue<1.1.0,>=0.0.7->spacy>=2.2.2->en_core_web_md==2.2.5) (3.3.0)\\n\",\r\n            \"Requirement already satisfied: chardet<5,>=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests<3.0.0,>=2.13.0->spacy>=2.2.2->en_core_web_md==2.2.5) (3.0.4)\\n\",\r\n            \"Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.6/dist-packages (from requests<3.0.0,>=2.13.0->spacy>=2.2.2->en_core_web_md==2.2.5) (1.24.3)\\n\",\r\n            \"Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.6/dist-packages (from requests<3.0.0,>=2.13.0->spacy>=2.2.2->en_core_web_md==2.2.5) (2.10)\\n\",\r\n            \"Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.6/dist-packages (from requests<3.0.0,>=2.13.0->spacy>=2.2.2->en_core_web_md==2.2.5) (2020.12.5)\\n\",\r\n            \"Requirement already satisfied: typing-extensions>=3.6.4; python_version < \\\"3.8\\\" in /usr/local/lib/python3.6/dist-packages (from importlib-metadata>=0.20; python_version < \\\"3.8\\\"->catalogue<1.1.0,>=0.0.7->spacy>=2.2.2->en_core_web_md==2.2.5) (3.7.4.3)\\n\",\r\n            \"Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.6/dist-packages (from importlib-metadata>=0.20; python_version < \\\"3.8\\\"->catalogue<1.1.0,>=0.0.7->spacy>=2.2.2->en_core_web_md==2.2.5) (3.4.0)\\n\",\r\n            \"\\u001b[38;5;2m✔ Download and installation successful\\u001b[0m\\n\",\r\n            \"You can now load the model via spacy.load('en_core_web_md')\\n\"\r\n          ],\r\n          \"name\": \"stdout\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"cell_type\": \"code\",\r\n      \"metadata\": {\r\n        \"id\": \"1VrWMrW341Sa\"\r\n      },\r\n      \"source\": [\r\n        \"\"\r\n      ],\r\n      \"execution_count\": null,\r\n      \"outputs\": []\r\n    },\r\n    {\r\n      \"cell_type\": \"code\",\r\n      \"metadata\": {\r\n        \"id\": \"fo2y7zTwtkLs\",\r\n        \"colab\": {\r\n          \"base_uri\": \"https://localhost:8080/\",\r\n          \"height\": 35\r\n        },\r\n        \"outputId\": \"e98d5e38-4009-4313-eefa-69717ff7a159\"\r\n      },\r\n      \"source\": [\r\n        \"nlp = spacy.load('en_core_web_md')\\r\\n\",\r\n        \"\\r\\n\",\r\n        \"def lemma_creator(text):\\r\\n\",\r\n        \"    lemmas = []\\r\\n\",\r\n        \"    process_text = nlp(text)\\r\\n\",\r\n        \"\\r\\n\",\r\n        \"    for token in process_text:\\r\\n\",\r\n        \"        if ((token.is_stop == False) and (token.is_punct == False)) and (token.pos_ != 'PRON'):\\r\\n\",\r\n        \"            lemmas.append(token.lemma_)\\r\\n\",\r\n        \"    return ' '.join(lemmas)\\r\\n\",\r\n        \"\\r\\n\",\r\n        \"most_pop_songs['lemmas'] = most_pop_songs['track_name'].apply(lemma_creator)\\r\\n\",\r\n        \"most_pop_songs['lemmas'][0]\"\r\n      ],\r\n      \"execution_count\": null,\r\n      \"outputs\": [\r\n        {\r\n          \"output_type\": \"execute_result\",\r\n          \"data\": {\r\n            \"application/vnd.google.colaboratory.intrinsic+json\": {\r\n              \"type\": \"string\"\r\n            },\r\n            \"text/plain\": [\r\n              \"'Kendu Mix'\"\r\n            ]\r\n          },\r\n          \"metadata\": {\r\n            \"tags\": []\r\n          },\r\n          \"execution_count\": 20\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"cell_type\": \"code\",\r\n      \"metadata\": {\r\n        \"id\": \"LHSNGUey0S3V\"\r\n      },\r\n      \"source\": [\r\n        \"most_pop_songs.to_csv('most_pop_songs.csv', index=False)\"\r\n      ],\r\n      \"execution_count\": null,\r\n      \"outputs\": []\r\n    },\r\n    {\r\n      \"cell_type\": \"code\",\r\n      \"metadata\": {\r\n        \"id\": \"Y6J2cqfR-jxZ\"\r\n      },\r\n      \"source\": [\r\n        \"from sklearn.feature_extraction.text import TfidfVectorizer\"\r\n      ],\r\n      \"execution_count\": null,\r\n      \"outputs\": []\r\n    },\r\n    {\r\n      \"cell_type\": \"code\",\r\n      \"metadata\": {\r\n        \"id\": \"_sLk8kg70Sx6\"\r\n      },\r\n      \"source\": [\r\n        \"tfidf = TfidfVectorizer(stop_words='english', min_df=0.025, max_df=0.98, ngram_range=(1,3))\\r\\n\",\r\n        \"dtm = tfidf.fit_transform(most_pop_songs['lemmas'])\\r\\n\",\r\n        \"dtm = pd.DataFrame(dtm.todense(), columns=tfidf.get_feature_names())\"\r\n      ],\r\n      \"execution_count\": null,\r\n      \"outputs\": []\r\n    },\r\n    {\r\n      \"cell_type\": \"code\",\r\n      \"metadata\": {\r\n        \"colab\": {\r\n          \"base_uri\": \"https://localhost:8080/\"\r\n        },\r\n        \"id\": \"cfT4gQzv92XH\",\r\n        \"outputId\": \"9c01d386-7ae2-4113-aad1-e705c6cbb0f9\"\r\n      },\r\n      \"source\": [\r\n        \"!pip install pickle-mixin\"\r\n      ],\r\n      \"execution_count\": null,\r\n      \"outputs\": [\r\n        {\r\n          \"output_type\": \"stream\",\r\n          \"text\": [\r\n            \"Requirement already satisfied: pickle-mixin in /usr/local/lib/python3.6/dist-packages (1.0.2)\\n\"\r\n          ],\r\n          \"name\": \"stdout\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"cell_type\": \"code\",\r\n      \"metadata\": {\r\n        \"id\": \"1nZZOkg10SqC\"\r\n      },\r\n      \"source\": [\r\n        \"with open('model.pkl', 'wb') as f2:\\r\\n\",\r\n        \"  pickle.dump('/content/most_pop_songs.csv', f2)\"\r\n      ],\r\n      \"execution_count\": null,\r\n      \"outputs\": []\r\n    },\r\n    {\r\n      \"cell_type\": \"code\",\r\n      \"metadata\": {\r\n        \"id\": \"IckeT2W2rfuF\"\r\n      },\r\n      \"source\": [\r\n        \"\"\r\n      ],\r\n      \"execution_count\": null,\r\n      \"outputs\": []\r\n    },\r\n    {\r\n      \"cell_type\": \"code\",\r\n      \"metadata\": {\r\n        \"id\": \"9zfNfBNKq4NC\",\r\n        \"colab\": {\r\n          \"base_uri\": \"https://localhost:8080/\",\r\n          \"height\": 131\r\n        },\r\n        \"outputId\": \"9532dad7-091a-411a-ac67-99e0d6e38118\"\r\n      },\r\n      \"source\": [\r\n        \"X_train, y_train, X_test, y_test = train_test_split(most_pop_songs, test_size=)\"\r\n      ],\r\n      \"execution_count\": null,\r\n      \"outputs\": [\r\n        {\r\n          \"output_type\": \"error\",\r\n          \"ename\": \"SyntaxError\",\r\n          \"evalue\": \"ignored\",\r\n          \"traceback\": [\r\n            \"\\u001b[0;36m  File \\u001b[0;32m\\\"<ipython-input-21-93e4b645e535>\\\"\\u001b[0;36m, line \\u001b[0;32m1\\u001b[0m\\n\\u001b[0;31m    X_train, y_train, X_test, y_test = train_test_split(most_pop_songs, test_size=)\\u001b[0m\\n\\u001b[0m                                                                                  ^\\u001b[0m\\n\\u001b[0;31mSyntaxError\\u001b[0m\\u001b[0;31m:\\u001b[0m invalid syntax\\n\"\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"cell_type\": \"code\",\r\n      \"metadata\": {\r\n        \"id\": \"d13PfoVrpHgY\"\r\n      },\r\n      \"source\": [\r\n        \"n_neighbors = 10\\r\\n\",\r\n        \"\\r\\n\"\r\n      ],\r\n      \"execution_count\": null,\r\n      \"outputs\": []\r\n    }\r\n  ]\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/spotify_eda.ipynb b/spotify_eda.ipynb
--- a/spotify_eda.ipynb	(revision ccd0fdef7e512148a91f9d29cb7e710967f55ed5)
+++ b/spotify_eda.ipynb	(date 1609991668442)
@@ -1,1848 +1,1846 @@
 {
-  "nbformat": 4,
-  "nbformat_minor": 0,
-  "metadata": {
-    "kernelspec": {
-      "name": "python3",
-      "display_name": "Python 3"
-    },
-    "colab": {
-      "name": "spotify_eda.ipynb",
-      "provenance": [],
-      "toc_visible": true
-    },
-    "accelerator": "TPU"
-  },
-  "cells": [
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "pycharm": {
-          "name": "#%% md\n"
-        },
-        "id": "_QsUF-whcChD"
-      },
-      "source": [
-        "# Spotify Song Suggester"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "pycharm": {
-          "name": "#%% md\n"
-        },
-        "id": "Tns3ezOtcChI"
-      },
-      "source": [
-        "## The Problem:\n",
-        "Need to create a model to give predictions of songs that a user might like based on music they already like."
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "pycharm": {
-          "name": "#%% md\n"
-        },
-        "id": "TT-CTdNVcChJ"
-      },
-      "source": [
-        "## Resources:\n",
-        "- [DS PT Schedule / Milestones](https://www.notion.so/f30da0c13d5247289bd5ade8d95af4a8?v=c97929c27fe24af780928a5a91a8b095)\n",
-        "- [DS Unit 3 Rubric](https://www.notion.so/Data-Science-Unit-3-Rubric-455c04d97fb840c6b75d46e8052a5275)\n",
-        "- [DS Unit 4 Rubric](https://www.notion.so/Data-Science-Unit-4-Rubric-1f7381be7b924da2a83c086c2bf97d3b)"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "pycharm": {
-          "name": "#%% md\n"
-        },
-        "id": "b58fjLJDcChJ"
-      },
-      "source": [
-        "## The Data:\n",
-        "Looking for data that not only gives the artist and title of a song, but the lyrics too."
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "pycharm": {
-          "name": "#%% md\n"
-        },
-        "id": "CU3Jt7rgcChJ"
-      },
-      "source": [
-        "### Possible Datasets:\n",
-        "- most_popular_spotify_songs.csv\n",
-        "- [billboard-lyrics-spotify.csv](https://github.com/walkerkq/musiclyrics/blob/master/billboard_lyrics_1964-2015.csv)\n",
-        "- [Spotify API](https://developer.spotify.com/documentation/web-api/quick-start/)\n",
-        "- [musiXmatch Dataset API](http://millionsongdataset.com/musixmatch/)\n",
-        "- Scrape the web for lyrics to match to Spotify song list."
-      ]
-    },
-    {
-      "cell_type": "code",
-      "metadata": {
-        "pycharm": {
-          "name": "#%%\n"
-        },
-        "id": "5lYlnyE-cChK"
-      },
-      "source": [
-        "# If running on Google Colab\n",
-        "!pip install pandas-profiling==2.*\n",
-        "from google.colab import output # to clear pip output to screen\n",
-        "output.clear()"
-      ],
-      "execution_count": null,
-      "outputs": []
-    },
-    {
-      "cell_type": "code",
-      "metadata": {
-        "colab": {
-          "base_uri": "https://localhost:8080/"
-        },
-        "id": "hUBkJQBNBpI1",
-        "outputId": "4d613aac-b70e-4746-fdf3-25b9076820b2"
-      },
-      "source": [
-        "# Install squarify\r\n",
-        "!pip install squarify"
-      ],
-      "execution_count": null,
-      "outputs": [
-        {
-          "output_type": "stream",
-          "text": [
-            "Requirement already satisfied: squarify in /usr/local/lib/python3.6/dist-packages (0.4.3)\n"
-          ],
-          "name": "stdout"
-        }
-      ]
-    },
-    {
-      "cell_type": "code",
-      "metadata": {
-        "pycharm": {
-          "name": "#%%\n"
-        },
-        "id": "Grmu-yI_cChK"
-      },
-      "source": [
-        "# Imports\n",
-        "import warnings\n",
-        "warnings.filterwarnings('ignore')\n",
-        "\n",
-        "import numpy as np\n",
-        "import pandas as pd\n",
-        "import pickle\n",
-        "from collections import Counter\n",
-        "\n",
-        "from pandas_profiling import ProfileReport\n",
-        "\n",
-        "# Sci-Kit Learn\n",
-        "from sklearn.model_selection import train_test_split\n",
-        "from sklearn.neighbors import NearestNeighbors, KNeighborsRegressor\n",
-        "from sklearn.feature_extraction.text import CountVectorizer, ENGLISH_STOP_WORDS, TfidfVectorizer\n",
-        "\n",
-        "# NLP\n",
-        "import re\n",
-        "from nltk.stem import PorterStemmer\n",
-        "import spacy\n",
-        "from spacy.tokenizer import Tokenizer\n",
-        "\n",
-        "# PLotting\n",
-        "import squarify\n",
-        "import matplotlib.pyplot as plt\n",
-        "import seaborn as sns\n",
-        "\n",
-        "from gensim.models import Word2Vec"
-      ],
-      "execution_count": null,
-      "outputs": []
-    },
-    {
-      "cell_type": "code",
-      "metadata": {
-        "pycharm": {
-          "name": "#%%\n"
-        },
-        "colab": {
-          "base_uri": "https://localhost:8080/",
-          "height": 621
-        },
-        "id": "4mrv_7Q1cChK",
-        "outputId": "5aaa9fe1-ac95-4286-9dbc-50ac84a2b872"
-      },
-      "source": [
-        "# Read in dataset\r\n",
-        "song_df = pd.read_csv('https://raw.githubusercontent.com/Spotify-DSPT-158/Build-Week-Spotify/main/spotify_songs.csv')\r\n",
-        "\r\n",
-        "# Peak at the dataset\r\n",
-        "print(song_df.shape)\r\n",
-        "song_df.head()"
-      ],
-      "execution_count": null,
-      "outputs": [
-        {
-          "output_type": "stream",
-          "text": [
-            "(18454, 25)\n"
-          ],
-          "name": "stdout"
-        },
-        {
-          "output_type": "execute_result",
-          "data": {
-            "text/html": [
-              "<div>\n",
-              "<style scoped>\n",
-              "    .dataframe tbody tr th:only-of-type {\n",
-              "        vertical-align: middle;\n",
-              "    }\n",
-              "\n",
-              "    .dataframe tbody tr th {\n",
-              "        vertical-align: top;\n",
-              "    }\n",
-              "\n",
-              "    .dataframe thead th {\n",
-              "        text-align: right;\n",
-              "    }\n",
-              "</style>\n",
-              "<table border=\"1\" class=\"dataframe\">\n",
-              "  <thead>\n",
-              "    <tr style=\"text-align: right;\">\n",
-              "      <th></th>\n",
-              "      <th>track_id</th>\n",
-              "      <th>track_name</th>\n",
-              "      <th>track_artist</th>\n",
-              "      <th>lyrics</th>\n",
-              "      <th>track_popularity</th>\n",
-              "      <th>track_album_id</th>\n",
-              "      <th>track_album_name</th>\n",
-              "      <th>track_album_release_date</th>\n",
-              "      <th>playlist_name</th>\n",
-              "      <th>playlist_id</th>\n",
-              "      <th>playlist_genre</th>\n",
-              "      <th>playlist_subgenre</th>\n",
-              "      <th>danceability</th>\n",
-              "      <th>energy</th>\n",
-              "      <th>key</th>\n",
-              "      <th>loudness</th>\n",
-              "      <th>mode</th>\n",
-              "      <th>speechiness</th>\n",
-              "      <th>acousticness</th>\n",
-              "      <th>instrumentalness</th>\n",
-              "      <th>liveness</th>\n",
-              "      <th>valence</th>\n",
-              "      <th>tempo</th>\n",
-              "      <th>duration_ms</th>\n",
-              "      <th>language</th>\n",
-              "    </tr>\n",
-              "  </thead>\n",
-              "  <tbody>\n",
-              "    <tr>\n",
-              "      <th>0</th>\n",
-              "      <td>0017A6SJgTbfQVU2EtsPNo</td>\n",
-              "      <td>Pangarap</td>\n",
-              "      <td>Barbie's Cradle</td>\n",
-              "      <td>Minsan pa Nang ako'y napalingon Hindi ko alam ...</td>\n",
-              "      <td>41</td>\n",
-              "      <td>1srJQ0njEQgd8w4XSqI4JQ</td>\n",
-              "      <td>Trip</td>\n",
-              "      <td>2001-01-01</td>\n",
-              "      <td>Pinoy Classic Rock</td>\n",
-              "      <td>37i9dQZF1DWYDQ8wBxd7xt</td>\n",
-              "      <td>rock</td>\n",
-              "      <td>classic rock</td>\n",
-              "      <td>0.682</td>\n",
-              "      <td>0.401</td>\n",
-              "      <td>2</td>\n",
-              "      <td>-10.068</td>\n",
-              "      <td>1</td>\n",
-              "      <td>0.0236</td>\n",
-              "      <td>0.27900</td>\n",
-              "      <td>0.01170</td>\n",
-              "      <td>0.0887</td>\n",
-              "      <td>0.566</td>\n",
-              "      <td>97.091</td>\n",
-              "      <td>235440</td>\n",
-              "      <td>tl</td>\n",
-              "    </tr>\n",
-              "    <tr>\n",
-              "      <th>1</th>\n",
-              "      <td>004s3t0ONYlzxII9PLgU6z</td>\n",
-              "      <td>I Feel Alive</td>\n",
-              "      <td>Steady Rollin</td>\n",
-              "      <td>The trees, are singing in the wind The sky blu...</td>\n",
-              "      <td>28</td>\n",
-              "      <td>3z04Lb9Dsilqw68SHt6jLB</td>\n",
-              "      <td>Love &amp; Loss</td>\n",
-              "      <td>2017-11-21</td>\n",
-              "      <td>Hard Rock Workout</td>\n",
-              "      <td>3YouF0u7waJnolytf9JCXf</td>\n",
-              "      <td>rock</td>\n",
-              "      <td>hard rock</td>\n",
-              "      <td>0.303</td>\n",
-              "      <td>0.880</td>\n",
-              "      <td>9</td>\n",
-              "      <td>-4.739</td>\n",
-              "      <td>1</td>\n",
-              "      <td>0.0442</td>\n",
-              "      <td>0.01170</td>\n",
-              "      <td>0.00994</td>\n",
-              "      <td>0.3470</td>\n",
-              "      <td>0.404</td>\n",
-              "      <td>135.225</td>\n",
-              "      <td>373512</td>\n",
-              "      <td>en</td>\n",
-              "    </tr>\n",
-              "    <tr>\n",
-              "      <th>2</th>\n",
-              "      <td>00chLpzhgVjxs1zKC9UScL</td>\n",
-              "      <td>Poison</td>\n",
-              "      <td>Bell Biv DeVoe</td>\n",
-              "      <td>NA Yeah, Spyderman and Freeze in full effect U...</td>\n",
-              "      <td>0</td>\n",
-              "      <td>6oZ6brjB8x3GoeSYdwJdPc</td>\n",
-              "      <td>Gold</td>\n",
-              "      <td>2005-01-01</td>\n",
-              "      <td>Back in the day - R&amp;B, New Jack Swing, Swingbe...</td>\n",
-              "      <td>3a9y4eeCJRmG9p4YKfqYIx</td>\n",
-              "      <td>r&amp;b</td>\n",
-              "      <td>new jack swing</td>\n",
-              "      <td>0.845</td>\n",
-              "      <td>0.652</td>\n",
-              "      <td>6</td>\n",
-              "      <td>-7.504</td>\n",
-              "      <td>0</td>\n",
-              "      <td>0.2160</td>\n",
-              "      <td>0.00432</td>\n",
-              "      <td>0.00723</td>\n",
-              "      <td>0.4890</td>\n",
-              "      <td>0.650</td>\n",
-              "      <td>111.904</td>\n",
-              "      <td>262467</td>\n",
-              "      <td>en</td>\n",
-              "    </tr>\n",
-              "    <tr>\n",
-              "      <th>3</th>\n",
-              "      <td>00cqd6ZsSkLZqGMlQCR0Zo</td>\n",
-              "      <td>Baby It's Cold Outside (feat. Christina Aguilera)</td>\n",
-              "      <td>CeeLo Green</td>\n",
-              "      <td>I really can't stay Baby it's cold outside I'v...</td>\n",
-              "      <td>41</td>\n",
-              "      <td>3ssspRe42CXkhPxdc12xcp</td>\n",
-              "      <td>CeeLo's Magic Moment</td>\n",
-              "      <td>2012-10-29</td>\n",
-              "      <td>Christmas Soul</td>\n",
-              "      <td>6FZYc2BvF7tColxO8PBShV</td>\n",
-              "      <td>r&amp;b</td>\n",
-              "      <td>neo soul</td>\n",
-              "      <td>0.425</td>\n",
-              "      <td>0.378</td>\n",
-              "      <td>5</td>\n",
-              "      <td>-5.819</td>\n",
-              "      <td>0</td>\n",
-              "      <td>0.0341</td>\n",
-              "      <td>0.68900</td>\n",
-              "      <td>0.00000</td>\n",
-              "      <td>0.0664</td>\n",
-              "      <td>0.405</td>\n",
-              "      <td>118.593</td>\n",
-              "      <td>243067</td>\n",
-              "      <td>en</td>\n",
-              "    </tr>\n",
-              "    <tr>\n",
-              "      <th>4</th>\n",
-              "      <td>00emjlCv9azBN0fzuuyLqy</td>\n",
-              "      <td>Dumb Litty</td>\n",
-              "      <td>KARD</td>\n",
-              "      <td>Get up out of my business You don't keep me fr...</td>\n",
-              "      <td>65</td>\n",
-              "      <td>7h5X3xhh3peIK9Y0qI5hbK</td>\n",
-              "      <td>KARD 2nd Digital Single ‘Dumb Litty’</td>\n",
-              "      <td>2019-09-22</td>\n",
-              "      <td>K-Party Dance Mix</td>\n",
-              "      <td>37i9dQZF1DX4RDXswvP6Mj</td>\n",
-              "      <td>pop</td>\n",
-              "      <td>dance pop</td>\n",
-              "      <td>0.760</td>\n",
-              "      <td>0.887</td>\n",
-              "      <td>9</td>\n",
-              "      <td>-1.993</td>\n",
-              "      <td>1</td>\n",
-              "      <td>0.0409</td>\n",
-              "      <td>0.03700</td>\n",
-              "      <td>0.00000</td>\n",
-              "      <td>0.1380</td>\n",
-              "      <td>0.240</td>\n",
-              "      <td>130.018</td>\n",
-              "      <td>193160</td>\n",
-              "      <td>en</td>\n",
-              "    </tr>\n",
-              "  </tbody>\n",
-              "</table>\n",
-              "</div>"
-            ],
-            "text/plain": [
-              "                 track_id  ... language\n",
-              "0  0017A6SJgTbfQVU2EtsPNo  ...       tl\n",
-              "1  004s3t0ONYlzxII9PLgU6z  ...       en\n",
-              "2  00chLpzhgVjxs1zKC9UScL  ...       en\n",
-              "3  00cqd6ZsSkLZqGMlQCR0Zo  ...       en\n",
-              "4  00emjlCv9azBN0fzuuyLqy  ...       en\n",
-              "\n",
-              "[5 rows x 25 columns]"
-            ]
-          },
-          "metadata": {
-            "tags": []
-          },
-          "execution_count": 4
-        }
-      ]
-    },
-    {
-      "cell_type": "code",
-      "metadata": {
-        "colab": {
-          "base_uri": "https://localhost:8080/",
-          "height": 621
-        },
-        "id": "106GLyDVws1X",
-        "outputId": "d1436adc-4a2f-4545-b987-2709a4c99e28"
-      },
-      "source": [
-        "# Drop columns not needed for our problem\r\n",
-        "songs = song_df.drop(columns=['track_album_id', 'track_album_name', 'playlist_id'])\r\n",
-        "print(songs.shape)\r\n",
-        "songs.head()"
-      ],
-      "execution_count": null,
-      "outputs": [
-        {
-          "output_type": "stream",
-          "text": [
-            "(18454, 22)\n"
-          ],
-          "name": "stdout"
-        },
-        {
-          "output_type": "execute_result",
-          "data": {
-            "text/html": [
-              "<div>\n",
-              "<style scoped>\n",
-              "    .dataframe tbody tr th:only-of-type {\n",
-              "        vertical-align: middle;\n",
-              "    }\n",
-              "\n",
-              "    .dataframe tbody tr th {\n",
-              "        vertical-align: top;\n",
-              "    }\n",
-              "\n",
-              "    .dataframe thead th {\n",
-              "        text-align: right;\n",
-              "    }\n",
-              "</style>\n",
-              "<table border=\"1\" class=\"dataframe\">\n",
-              "  <thead>\n",
-              "    <tr style=\"text-align: right;\">\n",
-              "      <th></th>\n",
-              "      <th>track_id</th>\n",
-              "      <th>track_name</th>\n",
-              "      <th>track_artist</th>\n",
-              "      <th>lyrics</th>\n",
-              "      <th>track_popularity</th>\n",
-              "      <th>track_album_release_date</th>\n",
-              "      <th>playlist_name</th>\n",
-              "      <th>playlist_genre</th>\n",
-              "      <th>playlist_subgenre</th>\n",
-              "      <th>danceability</th>\n",
-              "      <th>energy</th>\n",
-              "      <th>key</th>\n",
-              "      <th>loudness</th>\n",
-              "      <th>mode</th>\n",
-              "      <th>speechiness</th>\n",
-              "      <th>acousticness</th>\n",
-              "      <th>instrumentalness</th>\n",
-              "      <th>liveness</th>\n",
-              "      <th>valence</th>\n",
-              "      <th>tempo</th>\n",
-              "      <th>duration_ms</th>\n",
-              "      <th>language</th>\n",
-              "    </tr>\n",
-              "  </thead>\n",
-              "  <tbody>\n",
-              "    <tr>\n",
-              "      <th>0</th>\n",
-              "      <td>0017A6SJgTbfQVU2EtsPNo</td>\n",
-              "      <td>Pangarap</td>\n",
-              "      <td>Barbie's Cradle</td>\n",
-              "      <td>Minsan pa Nang ako'y napalingon Hindi ko alam ...</td>\n",
-              "      <td>41</td>\n",
-              "      <td>2001-01-01</td>\n",
-              "      <td>Pinoy Classic Rock</td>\n",
-              "      <td>rock</td>\n",
-              "      <td>classic rock</td>\n",
-              "      <td>0.682</td>\n",
-              "      <td>0.401</td>\n",
-              "      <td>2</td>\n",
-              "      <td>-10.068</td>\n",
-              "      <td>1</td>\n",
-              "      <td>0.0236</td>\n",
-              "      <td>0.27900</td>\n",
-              "      <td>0.01170</td>\n",
-              "      <td>0.0887</td>\n",
-              "      <td>0.566</td>\n",
-              "      <td>97.091</td>\n",
-              "      <td>235440</td>\n",
-              "      <td>tl</td>\n",
-              "    </tr>\n",
-              "    <tr>\n",
-              "      <th>1</th>\n",
-              "      <td>004s3t0ONYlzxII9PLgU6z</td>\n",
-              "      <td>I Feel Alive</td>\n",
-              "      <td>Steady Rollin</td>\n",
-              "      <td>The trees, are singing in the wind The sky blu...</td>\n",
-              "      <td>28</td>\n",
-              "      <td>2017-11-21</td>\n",
-              "      <td>Hard Rock Workout</td>\n",
-              "      <td>rock</td>\n",
-              "      <td>hard rock</td>\n",
-              "      <td>0.303</td>\n",
-              "      <td>0.880</td>\n",
-              "      <td>9</td>\n",
-              "      <td>-4.739</td>\n",
-              "      <td>1</td>\n",
-              "      <td>0.0442</td>\n",
-              "      <td>0.01170</td>\n",
-              "      <td>0.00994</td>\n",
-              "      <td>0.3470</td>\n",
-              "      <td>0.404</td>\n",
-              "      <td>135.225</td>\n",
-              "      <td>373512</td>\n",
-              "      <td>en</td>\n",
-              "    </tr>\n",
-              "    <tr>\n",
-              "      <th>2</th>\n",
-              "      <td>00chLpzhgVjxs1zKC9UScL</td>\n",
-              "      <td>Poison</td>\n",
-              "      <td>Bell Biv DeVoe</td>\n",
-              "      <td>NA Yeah, Spyderman and Freeze in full effect U...</td>\n",
-              "      <td>0</td>\n",
-              "      <td>2005-01-01</td>\n",
-              "      <td>Back in the day - R&amp;B, New Jack Swing, Swingbe...</td>\n",
-              "      <td>r&amp;b</td>\n",
-              "      <td>new jack swing</td>\n",
-              "      <td>0.845</td>\n",
-              "      <td>0.652</td>\n",
-              "      <td>6</td>\n",
-              "      <td>-7.504</td>\n",
-              "      <td>0</td>\n",
-              "      <td>0.2160</td>\n",
-              "      <td>0.00432</td>\n",
-              "      <td>0.00723</td>\n",
-              "      <td>0.4890</td>\n",
-              "      <td>0.650</td>\n",
-              "      <td>111.904</td>\n",
-              "      <td>262467</td>\n",
-              "      <td>en</td>\n",
-              "    </tr>\n",
-              "    <tr>\n",
-              "      <th>3</th>\n",
-              "      <td>00cqd6ZsSkLZqGMlQCR0Zo</td>\n",
-              "      <td>Baby It's Cold Outside (feat. Christina Aguilera)</td>\n",
-              "      <td>CeeLo Green</td>\n",
-              "      <td>I really can't stay Baby it's cold outside I'v...</td>\n",
-              "      <td>41</td>\n",
-              "      <td>2012-10-29</td>\n",
-              "      <td>Christmas Soul</td>\n",
-              "      <td>r&amp;b</td>\n",
-              "      <td>neo soul</td>\n",
-              "      <td>0.425</td>\n",
-              "      <td>0.378</td>\n",
-              "      <td>5</td>\n",
-              "      <td>-5.819</td>\n",
-              "      <td>0</td>\n",
-              "      <td>0.0341</td>\n",
-              "      <td>0.68900</td>\n",
-              "      <td>0.00000</td>\n",
-              "      <td>0.0664</td>\n",
-              "      <td>0.405</td>\n",
-              "      <td>118.593</td>\n",
-              "      <td>243067</td>\n",
-              "      <td>en</td>\n",
-              "    </tr>\n",
-              "    <tr>\n",
-              "      <th>4</th>\n",
-              "      <td>00emjlCv9azBN0fzuuyLqy</td>\n",
-              "      <td>Dumb Litty</td>\n",
-              "      <td>KARD</td>\n",
-              "      <td>Get up out of my business You don't keep me fr...</td>\n",
-              "      <td>65</td>\n",
-              "      <td>2019-09-22</td>\n",
-              "      <td>K-Party Dance Mix</td>\n",
-              "      <td>pop</td>\n",
-              "      <td>dance pop</td>\n",
-              "      <td>0.760</td>\n",
-              "      <td>0.887</td>\n",
-              "      <td>9</td>\n",
-              "      <td>-1.993</td>\n",
-              "      <td>1</td>\n",
-              "      <td>0.0409</td>\n",
-              "      <td>0.03700</td>\n",
-              "      <td>0.00000</td>\n",
-              "      <td>0.1380</td>\n",
-              "      <td>0.240</td>\n",
-              "      <td>130.018</td>\n",
-              "      <td>193160</td>\n",
-              "      <td>en</td>\n",
-              "    </tr>\n",
-              "  </tbody>\n",
-              "</table>\n",
-              "</div>"
-            ],
-            "text/plain": [
-              "                 track_id  ... language\n",
-              "0  0017A6SJgTbfQVU2EtsPNo  ...       tl\n",
-              "1  004s3t0ONYlzxII9PLgU6z  ...       en\n",
-              "2  00chLpzhgVjxs1zKC9UScL  ...       en\n",
-              "3  00cqd6ZsSkLZqGMlQCR0Zo  ...       en\n",
-              "4  00emjlCv9azBN0fzuuyLqy  ...       en\n",
-              "\n",
-              "[5 rows x 22 columns]"
-            ]
-          },
-          "metadata": {
-            "tags": []
-          },
-          "execution_count": 5
-        }
-      ]
-    },
-    {
-      "cell_type": "code",
-      "metadata": {
-        "colab": {
-          "base_uri": "https://localhost:8080/",
-          "height": 621
-        },
-        "id": "EjeV_byXzfaT",
-        "outputId": "bc5f70d9-8894-4ce0-96b6-76ee1b070733"
-      },
-      "source": [
-        "# Rename features to make it easier to work with\r\n",
-        "songs = songs.rename(columns={'track_id': 'id', 'track_name': 'title' , \r\n",
-        "                              'track_artist': 'artist', \r\n",
-        "                              'track_popularity': 'popularity',\r\n",
-        "                              'track_album_release_date': 'release_date',\r\n",
-        "                              'playlist_name': 'playlist', \r\n",
-        "                              'playlist_genre': 'genre',\r\n",
-        "                              'playlist_subgenre': 'subgenre'})\r\n",
-        "\r\n",
-        "songs.head()"
-      ],
-      "execution_count": null,
-      "outputs": [
-        {
-          "output_type": "execute_result",
-          "data": {
-            "text/html": [
-              "<div>\n",
-              "<style scoped>\n",
-              "    .dataframe tbody tr th:only-of-type {\n",
-              "        vertical-align: middle;\n",
-              "    }\n",
-              "\n",
-              "    .dataframe tbody tr th {\n",
-              "        vertical-align: top;\n",
-              "    }\n",
-              "\n",
-              "    .dataframe thead th {\n",
-              "        text-align: right;\n",
-              "    }\n",
-              "</style>\n",
-              "<table border=\"1\" class=\"dataframe\">\n",
-              "  <thead>\n",
-              "    <tr style=\"text-align: right;\">\n",
-              "      <th></th>\n",
-              "      <th>id</th>\n",
-              "      <th>title</th>\n",
-              "      <th>artist</th>\n",
-              "      <th>lyrics</th>\n",
-              "      <th>popularity</th>\n",
-              "      <th>release_date</th>\n",
-              "      <th>playlist</th>\n",
-              "      <th>genre</th>\n",
-              "      <th>subgenre</th>\n",
-              "      <th>danceability</th>\n",
-              "      <th>energy</th>\n",
-              "      <th>key</th>\n",
-              "      <th>loudness</th>\n",
-              "      <th>mode</th>\n",
-              "      <th>speechiness</th>\n",
-              "      <th>acousticness</th>\n",
-              "      <th>instrumentalness</th>\n",
-              "      <th>liveness</th>\n",
-              "      <th>valence</th>\n",
-              "      <th>tempo</th>\n",
-              "      <th>duration_ms</th>\n",
-              "      <th>language</th>\n",
-              "    </tr>\n",
-              "  </thead>\n",
-              "  <tbody>\n",
-              "    <tr>\n",
-              "      <th>0</th>\n",
-              "      <td>0017A6SJgTbfQVU2EtsPNo</td>\n",
-              "      <td>Pangarap</td>\n",
-              "      <td>Barbie's Cradle</td>\n",
-              "      <td>Minsan pa Nang ako'y napalingon Hindi ko alam ...</td>\n",
-              "      <td>41</td>\n",
-              "      <td>2001-01-01</td>\n",
-              "      <td>Pinoy Classic Rock</td>\n",
-              "      <td>rock</td>\n",
-              "      <td>classic rock</td>\n",
-              "      <td>0.682</td>\n",
-              "      <td>0.401</td>\n",
-              "      <td>2</td>\n",
-              "      <td>-10.068</td>\n",
-              "      <td>1</td>\n",
-              "      <td>0.0236</td>\n",
-              "      <td>0.27900</td>\n",
-              "      <td>0.01170</td>\n",
-              "      <td>0.0887</td>\n",
-              "      <td>0.566</td>\n",
-              "      <td>97.091</td>\n",
-              "      <td>235440</td>\n",
-              "      <td>tl</td>\n",
-              "    </tr>\n",
-              "    <tr>\n",
-              "      <th>1</th>\n",
-              "      <td>004s3t0ONYlzxII9PLgU6z</td>\n",
-              "      <td>I Feel Alive</td>\n",
-              "      <td>Steady Rollin</td>\n",
-              "      <td>The trees, are singing in the wind The sky blu...</td>\n",
-              "      <td>28</td>\n",
-              "      <td>2017-11-21</td>\n",
-              "      <td>Hard Rock Workout</td>\n",
-              "      <td>rock</td>\n",
-              "      <td>hard rock</td>\n",
-              "      <td>0.303</td>\n",
-              "      <td>0.880</td>\n",
-              "      <td>9</td>\n",
-              "      <td>-4.739</td>\n",
-              "      <td>1</td>\n",
-              "      <td>0.0442</td>\n",
-              "      <td>0.01170</td>\n",
-              "      <td>0.00994</td>\n",
-              "      <td>0.3470</td>\n",
-              "      <td>0.404</td>\n",
-              "      <td>135.225</td>\n",
-              "      <td>373512</td>\n",
-              "      <td>en</td>\n",
-              "    </tr>\n",
-              "    <tr>\n",
-              "      <th>2</th>\n",
-              "      <td>00chLpzhgVjxs1zKC9UScL</td>\n",
-              "      <td>Poison</td>\n",
-              "      <td>Bell Biv DeVoe</td>\n",
-              "      <td>NA Yeah, Spyderman and Freeze in full effect U...</td>\n",
-              "      <td>0</td>\n",
-              "      <td>2005-01-01</td>\n",
-              "      <td>Back in the day - R&amp;B, New Jack Swing, Swingbe...</td>\n",
-              "      <td>r&amp;b</td>\n",
-              "      <td>new jack swing</td>\n",
-              "      <td>0.845</td>\n",
-              "      <td>0.652</td>\n",
-              "      <td>6</td>\n",
-              "      <td>-7.504</td>\n",
-              "      <td>0</td>\n",
-              "      <td>0.2160</td>\n",
-              "      <td>0.00432</td>\n",
-              "      <td>0.00723</td>\n",
-              "      <td>0.4890</td>\n",
-              "      <td>0.650</td>\n",
-              "      <td>111.904</td>\n",
-              "      <td>262467</td>\n",
-              "      <td>en</td>\n",
-              "    </tr>\n",
-              "    <tr>\n",
-              "      <th>3</th>\n",
-              "      <td>00cqd6ZsSkLZqGMlQCR0Zo</td>\n",
-              "      <td>Baby It's Cold Outside (feat. Christina Aguilera)</td>\n",
-              "      <td>CeeLo Green</td>\n",
-              "      <td>I really can't stay Baby it's cold outside I'v...</td>\n",
-              "      <td>41</td>\n",
-              "      <td>2012-10-29</td>\n",
-              "      <td>Christmas Soul</td>\n",
-              "      <td>r&amp;b</td>\n",
-              "      <td>neo soul</td>\n",
-              "      <td>0.425</td>\n",
-              "      <td>0.378</td>\n",
-              "      <td>5</td>\n",
-              "      <td>-5.819</td>\n",
-              "      <td>0</td>\n",
-              "      <td>0.0341</td>\n",
-              "      <td>0.68900</td>\n",
-              "      <td>0.00000</td>\n",
-              "      <td>0.0664</td>\n",
-              "      <td>0.405</td>\n",
-              "      <td>118.593</td>\n",
-              "      <td>243067</td>\n",
-              "      <td>en</td>\n",
-              "    </tr>\n",
-              "    <tr>\n",
-              "      <th>4</th>\n",
-              "      <td>00emjlCv9azBN0fzuuyLqy</td>\n",
-              "      <td>Dumb Litty</td>\n",
-              "      <td>KARD</td>\n",
-              "      <td>Get up out of my business You don't keep me fr...</td>\n",
-              "      <td>65</td>\n",
-              "      <td>2019-09-22</td>\n",
-              "      <td>K-Party Dance Mix</td>\n",
-              "      <td>pop</td>\n",
-              "      <td>dance pop</td>\n",
-              "      <td>0.760</td>\n",
-              "      <td>0.887</td>\n",
-              "      <td>9</td>\n",
-              "      <td>-1.993</td>\n",
-              "      <td>1</td>\n",
-              "      <td>0.0409</td>\n",
-              "      <td>0.03700</td>\n",
-              "      <td>0.00000</td>\n",
-              "      <td>0.1380</td>\n",
-              "      <td>0.240</td>\n",
-              "      <td>130.018</td>\n",
-              "      <td>193160</td>\n",
-              "      <td>en</td>\n",
-              "    </tr>\n",
-              "  </tbody>\n",
-              "</table>\n",
-              "</div>"
-            ],
-            "text/plain": [
-              "                       id  ... language\n",
-              "0  0017A6SJgTbfQVU2EtsPNo  ...       tl\n",
-              "1  004s3t0ONYlzxII9PLgU6z  ...       en\n",
-              "2  00chLpzhgVjxs1zKC9UScL  ...       en\n",
-              "3  00cqd6ZsSkLZqGMlQCR0Zo  ...       en\n",
-              "4  00emjlCv9azBN0fzuuyLqy  ...       en\n",
-              "\n",
-              "[5 rows x 22 columns]"
-            ]
-          },
-          "metadata": {
-            "tags": []
-          },
-          "execution_count": 6
-        }
-      ]
-    },
-    {
-      "cell_type": "code",
-      "metadata": {
-        "colab": {
-          "base_uri": "https://localhost:8080/",
-          "height": 157
-        },
-        "id": "qpCxKN7LcrPK",
-        "outputId": "1a04321d-6a23-4adc-8e21-f94d1d59f390"
-      },
-      "source": [
-        "# Peak a lyrics value\r\n",
-        "songs.lyrics[2]"
-      ],
-      "execution_count": null,
-      "outputs": [
-        {
-          "output_type": "execute_result",
-          "data": {
-            "application/vnd.google.colaboratory.intrinsic+json": {
-              "type": "string"
-            },
-            "text/plain": [
-              "'NA Yeah, Spyderman and Freeze in full effect Uh-huh You ready, Ron? I\\'m ready You ready, Biv? I\\'m ready, Slick, are you? Oh, yeah, break it down NA Girl, I, must (warn you) I sense something strange in my mind Situation is (serious) Let\\'s cure it cause we\\'re running out of time It\\'s oh, so (beautiful) Relationships they seem from the start It\\'s all so (deadly) When love is not together from the heart It\\'s drivin\\' me out of my mind! That\\'s why it\\'s HARD for me to find Can\\'t get it out of my head! Miss her, kiss her, love her(Wrong move you\\'re dead!) That girl is (poison)...Never trust a big butt and smile That girl is (poison)..(\"POISON!!\") NA (-caution) Before I start to meet a fly girl, you know? Cause in some (portions) You\\'ll think she\\'s the best thing in the world She\\'s so - (fly) She\\'ll drive you right out of your mind And steal your heart when you\\'re blind Beware she\\'s schemin\\', she\\'ll make you think you\\'re dreamin\\' YOU\\'LL fall in love and you\\'ll be screamin\\', demon, HOO.. Poison, deadly, movin\\' in slow Lookin for a mellow fellow like DeVoe Gettin paid, laid, so better lay low Schemin on house, money, and the whole show The low pro ho she\\'ll be cut like an aaa-FRO See what you\\'re sayin\\', huh, she\\'s a winner to you But I know she\\'s a loser (How do you know?) Me and the crew used to do her! \"POISON!\" \"POISON!\" \"POISON!\" \"POISON!\" \"POISON!\" \"POISON!\" \"POISON!\" \"POISON! \"POISON!\" \"POISON!\" \"POISON!\" \"POISON! \"POISON!\" \"POISON!\" \"POISON!\" \"POISON! I was at the park, shake, breakin and takin \\'em all And that night, I played the wall Checkin\\' out the fellas, the highs and lows Keepin\\' one eye open, still clockin\\' the hoes There was one particular girl that stood out from the rest Poison as can be, the high power chest Michael Biv here and I\\'m runnin\\' the show Bell, Biv DeVoe ..now you know! Yo, Slick, blow.. It\\'s drivin\\' me out of my mind! That\\'s why it\\'s HARD for me to find Can\\'t get it out of my head! Miss her, kiss her, love her(Wrong move you\\'re dead!) That girl is (poison)...Never trust a big butt and smile That girl is (poison)..(\"POISON!!\") Yo\\' fellas, that was my end of.. You know what I\\'m sayin\\', Mike? Yeah, B.B.D. in full effect Yo\\', wassup to Ralph T and Johnny G And I can\\'t forget about my boy, B. Brown And the whole NE crew Poison.. NA'"
-            ]
-          },
-          "metadata": {
-            "tags": []
-          },
-          "execution_count": 7
-        }
-      ]
-    },
-    {
-      "cell_type": "code",
-      "metadata": {
-        "colab": {
-          "base_uri": "https://localhost:8080/"
-        },
-        "id": "Y3-afaV2Noz2",
-        "outputId": "acce7f42-b6c9-4278-a75c-27cb4eab93f1"
-      },
-      "source": [
-        "# Look at values in lyrics\r\n",
-        "songs['lyrics'].value_counts()"
-      ],
-      "execution_count": null,
-      "outputs": [
-        {
-          "output_type": "execute_result",
-          "data": {
-            "text/plain": [
-              "Lyrics for this song have yet to be released. Please check back once the song has been releasedn",
n",
-              "Instrumental                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        9\n",
-              "NA Si el ritmo te lleva a mover la cabeza Ya empezamos como es Mi música no discrimina a nadie Así que vamos a romper Toda mi gente se mueve Mira el ritmo cómo los tiene Hago música que entretiene El mundo nos quiere, nos quiere Me quiere a mí Toda mi gente se mueve Mira el ritmo cómo los tiene Hago música que entretiene Mi música los tiene fuerte bailando Y se baila así Tamo' rompiendo la discoteca La fiesta no para, apenas comienza C'est comme-ci, c'est comme ça Ma chèrie, la-la-la-la-la Francia, Colombia Me gusta (Freeze) J Balvin, Willy William Le gusta (Freeze) Los DJ's no mienten, le gusta a mi gente Y eso se fue mundial (Freeze) No le bajamos, más nunca paramos Es otro palo y ¡blam! ¿Y dónde está mi gente? Mais fais bouger la tête ¿Y dónde está mi gente? Say yeah, yeah, yeah Un, dos, tres, ¡leggo! (Ay di que sí) Esquina a esquina, de ahí no' vamo' El mundo es grande pero lo tengo en mi' manos Estoy muy duro, sí, ok, ahí vamos Y con el tiempo nos seguimos elevando Que seguimos rompiendo aquí Esta fiesta no tiene fin Botellas para arriba, sí Los tengo bailando, rompiendo y yo sigo aquí Que seguimos rompiendo aquí Esta fiesta no tiene fin Botellas para arriba, sí Los tengo bailando, rompiendo y yo sigo aquí ¿Y dónde está mi gente? Mais fais bouger la tête ¿Y dónde está mi gente? Say yeah, yeah, yeah Un, dos, tres, ¡leggo! (Ay di que sí) Worldwide Willy William J Balvin, man Uh-huh Uh-huh Uh-huh Uh-huhn",
-              "NA Yeah, Spyderman and Freeze in full effect Uh-huh You ready, Ron? I'm ready You ready, Biv? I'm ready, Slick, are you? Oh, yeah, break it down NA Girl, I, must (warn you) I sense something strange in my mind Situation is (serious) Let's cure it cause we're running out of time It's oh, so (beautiful) Relationships they seem from the start It's all so (deadly) When love is not together from the heart It's drivin' me out of my mind! That's why it's HARD for me to find Can't get it out of my head! Miss her, kiss her, love her(Wrong move you're dead!) That girl is (poison)...Never trust a big butt and smile That girl is (poison)..(\"POISON!!\") NA (-caution) Before I start to meet a fly girl, you know? Cause in some (portions) You'll think she's the best thing in the world She's so - (fly) She'll drive you right out of your mind And steal your heart when you're blind Beware she's schemin', she'll make you think you're dreamin' YOU'LL fall in love and you'll be screamin', demon, HOO.. Poison, deadly, movin' in slow Lookin for a mellow fellow like DeVoe Gettin paid, laid, so better lay low Schemin on house, money, and the whole show The low pro ho she'll be cut like an aaa-FRO See what you're sayin', huh, she's a winner to you But I know she's a loser (How do you know?) Me and the crew used to do her! \"POISON!\" \"POISON!\" \"POISON!\" \"POISON!\" \"POISON!\" \"POISON!\" \"POISON!\" \"POISON! \"POISON!\" \"POISON!\" \"POISON!\" \"POISON! \"POISON!\" \"POISON!\" \"POISON!\" \"POISON! I was at the park, shake, breakin and takin 'em all And that night, I played the wall Checkin' out the fellas, the highs and lows Keepin' one eye open, still clockin' the hoes There was one particular girl that stood out from the rest Poison as can be, the high power chest Michael Biv here and I'm runnin' the show Bell, Biv DeVoe ..now you know! Yo, Slick, blow.. It's drivin' me out of my mind! That's why it's HARD for me to find Can't get it out of my head! Miss her, kiss her, love her(Wrong move you're dead!) That girl is (poison)...Never trust a big butt and smile That girl is (poison)..(\"POISON!!\") Yo' fellas, that was my end of.. You know what I'm sayin', Mike? Yeah, B.B.D. in full effect Yo', wassup to Ralph T and Johnny G And I can't forget about my boy, B. Brown And the whole NE crew Poison.. NA     7\n",
n",
-              "I've been smoking on the peace pipe I've been wondering just what would peace be like I've been staring into headlights Swallow me whole, finding my peace of mind I'm just trying to seize the moment Trying to love the little things, even if they're hard to love A monument to love unspoken Carved into stone, “Unwilling to come undone” It feels good to be running from the devil Another breath and I'm up another level It feels good to be up above the clouds It feels good for the first time in a long time now I remember back in Oakland I was lying there in rapture on the bathroom floor Moving hotel to hotel Out on the road, no idea really what's in store Light it up just like a flashlight Let it shine, let it rise just like a foreign sun Turn it over and it's capsized It's finally done, the battle's lost, yet I feel I've won It feels good to be running from the devil Another breath and I'm up another level It feels good to be up above the clouds It feels good for the first time in a long time now It feels good for the first time in a long time now It feels good to be me I'm high, staring at the ceiling Sending my love, what a wonderful feeling What comes next, I see a light I'm along for the ride as I'm taking flight I'm high, staring at the ceiling Sending my love, what a wonderful feeling What comes next, I see a light I'm along for the ride as I'm taking flight It feels good to be running from the devil Another breath and I'm up another level It feels good to be up above the clouds It feels good for the first time in a long time now It feels good for the first time in a long time to be me It feels good for the first time in a while I'm free I'm high, staring at the ceiling Sending my love, what a wonderful feeling What comes next, I see a light I'm along for the ride as I'm taking flight                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           1\n",
-              "Golden years, gold, whop, whop, whop Golden years, gold, whop, whop, whop Golden years, gold, whop, whop, whop Don't let me hear you say Life's taking you nowhere, angel(Come get up, my baby) Look at that sky, life's begun Nights are warm and the days are young(Come get up, my baby) There's my baby, lost that's all Once I'm begging you save her little soul Golden years, gold, whop, whop, whop Come get up, my baby Last night they loved you Opening doors and pulling some strings, angel(Come get up, my baby) In walked luck and you looked in time Never look back, walk tall, act fine(Come get up, my baby) I'll stick with you baby for a thousand years Nothing's gonna touch you in these golden years Golden years Golden years, gold, whop, whop, whop Come get up, my baby Some of these days, and it won't be long Gonna drive back down where you once belonged In the back of a dream car twenty foot long(Come get up, my baby) Don't cry my sweet, don't break my heart Doing all right, but you gotta get smart Wish upon, wish upon, day upon day I believe, oh Lord, I believe all the way(Come get up, my baby) Run for the shadows, run for the shadows Run for the shadows in these golden years There's my baby, lost that's all Once I'm begging you save her little soul Golden years, gold, whop, whop, whop Come get up, my baby Don't let me hear you say life's taking you nowhere, angel(Come get up, my baby) Run for the shadows, run for the shadows Run for the shadows in these golden years I'll stick with you baby for a thousand years Nothing's gonna touch you in these golden years Golden years Golden years, gold, whop, whop, whop Golden years, gold, whop, whop, whop Golden years, gold, whop, whop, whop Golden years, gold, whop, whop, whop Golden years, gold, whop, whop, whop Golden years, gold, whop, whop, whop Golden years, gold, whop, whop, whop Golden years, gold, whop, whop, whop Golden years, gold, whop, whop, whop Golden years, gold, whop, whop, whop Golden years, gold, whop, whop, whop                                                                                                                                                                                                                                                                                                    1\n",
-              "I ain't no angel Don't got no halo I cut off my wings Made my momma scream Woah I'm your darkest dream They call me devil My heart is empty They call me devil Just try and tempt me I steal your soul I'll eat you whole Ain't no other way They call me devil And you should be afraid I tell you lies I'll crawl inside your mind Grab hold of your eyes I will make you mine Oh And I'm gonna take my time (yeah) They call me devil My heart is empty They call me devil Just try and tempt me I steal your soul I'll eat you whole Ain't no other way They call me devil And you should be afraid I'm comin' I'm comin' So start runnin' start runnin' Yeah I'm comin' I'm comin' So start runnin' start runnin' NA They call me devil My heart is empty They call me devil Just try and tempt me I steal your soul I'll eat you whole Ain't no other way They call me devil And you should be afraidn",
-              "One, two, three, four Hands on your body, I'm grabbin' your ass Enjoyin' the moment 'cause life move too fast I'm lookin' forward, ignorin' the past These are the times that we'll laugh lookin' back I'm gettin' lucky like coins in the well Goodbye to my haters, I'm wishin' you well This is my year, man, if you couldn't tell This is our life and we livin' it well Late nights in the city, causin' hell Burn this bitch into the ground, oh well If all we got tonight, let's do this right Let's do this right Let's go to (Paradise) This shit feel like Friday nights This shit make me feel alive I feel like we in paradise, paradise (Paradise) Don't know if it's the drink I poured But I swear I've never loved you more When you right here, I come alive One more hit and we can fly This shit feel like (Paradise) I'm feelin' it, my head's where the ceilin' is (Oh yeah) This energy turns nights into memories (Oh yeah) Count up the bands, you've been workin' all summer Ex didn't know what he had, what a bummer Insecure people turn to insecure lovers Well, my drink is almost out and I'm about to pour another Just let it out The night has just begun, we on a level now If I get too fucked up, promise you'll hold me down Yeah, this that shit you can't deny This that shit you feel inside This our life, our time, we livin' well Late nights in the city, causin' hell Burn this bitch into the ground, oh well If all we got tonight, let's do this right Let's do this right Let's go to (Paradise) This shit feel like Friday nights (Ooh, it do) This shit make me feel alive (Baby) I feel like we in paradise, paradise (Paradise, oh yeah) Don't know if it's the drink I poured (Poured) But I swear I've never loved you more (Loved you more) When you right here, I come alive One more hit and we can fly This shit feel like (Paradise)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  1\n",
-              "Waking up to no meaning, I stare at the ceiling Count the imperfections that surround my being Can tell how I'm feeling And it hurts more when you ask There's a hole in my head and heart But I'm a long way from the start There's a hole in my head and heart But I'm a long way from Back when I couldn't move, was frozen I told myself it's all good It's only chemical (Oh-woah) It's only chemical (Oh-woah) It's only chemical I'm too shy to speak up Guess I have my reasons for telling little lies About those around me and what I could be It's eating me alive There's a hole in my head and heart But I'm a long way from the start There's a hole in my head and heart But I'm a long way from Back when I couldn't move, was frozen I told myself it's all good It's only chemical (It's only chemical, it's only chemical) I want to scream, but it won't help I've created my own hell And It's only chemical (Oh-woah) It's only chemical (Oh-woah) It's only chemical I find comfort when they say you can't Sit and count the days until it ends There's still times I want to break everything I've ever made But I've come a long way from I've come a long way from Back when I couldn't move, was frozen I told myself it's all good It's only chemical (It's only chemical, it's only chemical) I want to scream but it won't help I've created my own hell And it's only chemical It's only chemical (Oh-woah) It's only chemical (Oh-woah) It's only chemical  (Oh-woah) It's only chemical (Oh-woahn",
-              "Name: lyrics, Length: 15977, dtype: int64"
-            ]
-          },
-          "metadata": {
-            "tags": []
-          },
-          "execution_count": 9
-        }
-      ]
-    },
-    {
-      "cell_type": "code",
-      "metadata": {
-        "colab": {
-          "base_uri": "https://localhost:8080/"
-        },
-        "id": "0vr6m7D1ERtK",
-        "outputId": "1c082a46-dc86-4e8e-b0a0-c9ea45957740"
-      },
-      "source": [
-        "# Remove rows that have no lyrics or \"Instrumental\"\r\n",
-        "songs = songs[songs['lyrics'].notna()]\r\n",
-        "no_lyrics_yet = songs[songs['lyrics'] == 'Lyrics for this song have yet to be released. Please check back once the song has been released.'].index\r\n",
-        "songs.drop(no_lyrics_yet, inplace=True)\r\n",
-        "no_lyrics_NA = songs[songs['lyrics'] == 'NA NA'].index\r\n",
-        "songs.drop(no_lyrics_NA, inplace=True)\r\n",
-        "print(songs.shape)"
-      ],
-      "execution_count": null,
-      "outputs": [
-        {
-          "output_type": "stream",
-          "text": [
-            "(18127, 22)\n"
-          ],
-          "name": "stdout"
-        }
-      ]
-    },
-    {
-      "cell_type": "code",
-      "metadata": {
-        "id": "k1kSvzdmmgOS"
-      },
-      "source": [
-        "# Create function to tokenize a list of words\r\n",
-        "def tokens(text):\r\n",
-        "  '''\r\n",
-        "  Parses a string into a list of sementic units (words)0\r\n",
-        "\r\n",
-        "  Args:\r\n",
-        "    text (str): A string of values to be tokenized\r\n",
-        "\r\n",
-        "  Returns:\r\n",
-        "    list of tokens\r\n",
-        "  '''\r\n",
-        "\r\n",
-        "  # remove all non-alpha numeric characters\r\n",
-        "  tokens = re.sub('[^a-z A-Z 0-9]', '', text)\r\n",
-        "  \r\n",
-        "  # Lowercase all and split on spaces\r\n",
-        "  tokens = tokens.lower().split()\r\n",
-        "\r\n",
-        "  return tokens"
-      ],
-      "execution_count": null,
-      "outputs": []
-    },
-    {
-      "cell_type": "code",
-      "metadata": {
-        "colab": {
-          "base_uri": "https://localhost:8080/",
-          "height": 202
-        },
-        "id": "em4ntYoeCS-o",
-        "outputId": "4c4a9ad0-a1a1-414e-f147-d747fcbbbcc1"
-      },
-      "source": [
-        "# Tokenize the lyrics\r\n",
-        "songs['tokens'] = songs['lyrics'].apply(tokens)\r\n",
-        "\r\n",
-        "# Compare the lyrics to tokens\r\n",
-        "songs[['lyrics', 'tokens']][:5]"
-      ],
-      "execution_count": null,
-      "outputs": [
-        {
-          "output_type": "execute_result",
-          "data": {
-            "text/html": [
-              "<div>\n",
-              "<style scoped>\n",
-              "    .dataframe tbody tr th:only-of-type {\n",
-              "        vertical-align: middle;\n",
-              "    }\n",
-              "\n",
-              "    .dataframe tbody tr th {\n",
-              "        vertical-align: top;\n",
-              "    }\n",
-              "\n",
-              "    .dataframe thead th {\n",
-              "        text-align: right;\n",
-              "    }\n",
-              "</style>\n",
-              "<table border=\"1\" class=\"dataframe\">\n",
-              "  <thead>\n",
-              "    <tr style=\"text-align: right;\">\n",
-              "      <th></th>\n",
-              "      <th>lyrics</th>\n",
-              "      <th>tokens</th>\n",
-              "    </tr>\n",
-              "  </thead>\n",
-              "  <tbody>\n",
-              "    <tr>\n",
-              "      <th>0</th>\n",
-              "      <td>Minsan pa Nang ako'y napalingon Hindi ko alam ...</td>\n",
-              "      <td>[minsan, pa, nang, akoy, napalingon, hindi, ko...</td>\n",
-              "    </tr>\n",
-              "    <tr>\n",
-              "      <th>1</th>\n",
-              "      <td>The trees, are singing in the wind The sky blu...</td>\n",
-              "      <td>[the, trees, are, singing, in, the, wind, the,...</td>\n",
-              "    </tr>\n",
-              "    <tr>\n",
-              "      <th>2</th>\n",
-              "      <td>NA Yeah, Spyderman and Freeze in full effect U...</td>\n",
-              "      <td>[na, yeah, spyderman, and, freeze, in, full, e...</td>\n",
-              "    </tr>\n",
-              "    <tr>\n",
-              "      <th>3</th>\n",
-              "      <td>I really can't stay Baby it's cold outside I'v...</td>\n",
-              "      <td>[i, really, cant, stay, baby, its, cold, outsi...</td>\n",
-              "    </tr>\n",
-              "    <tr>\n",
-              "      <th>4</th>\n",
-              "      <td>Get up out of my business You don't keep me fr...</td>\n",
-              "      <td>[get, up, out, of, my, business, you, dont, ke...</td>\n",
-              "    </tr>\n",
-              "  </tbody>\n",
-              "</table>\n",
-              "</div>"
-            ],
-            "text/plain": [
-              "                                              lyrics                                             tokens\n",
-              "0  Minsan pa Nang ako'y napalingon Hindi ko alam ...  [minsan, pa, nang, akoy, napalingon, hindi, ko...\n",
-              "1  The trees, are singing in the wind The sky blu...  [the, trees, are, singing, in, the, wind, the,...\n",
-              "2  NA Yeah, Spyderman and Freeze in full effect U...  [na, yeah, spyderman, and, freeze, in, full, e...\n",
-              "3  I really can't stay Baby it's cold outside I'v...  [i, really, cant, stay, baby, its, cold, outsi...\n",
-              "4  Get up out of my business You don't keep me fr...  [get, up, out, of, my, business, you, dont, ke..."
-            ]
-          },
-          "metadata": {
-            "tags": []
-          },
-          "execution_count": 12
-        }
-      ]
-    },
-    {
-      "cell_type": "code",
-      "metadata": {
-        "colab": {
-          "base_uri": "https://localhost:8080/",
-          "height": 540
-        },
-        "id": "UQzpJCugS_tm",
-        "outputId": "5cc62c36-532a-4d67-90ec-ac9c6fb4d19b"
-      },
-      "source": [
-        "# Graph the count of songs per genre\r\n",
-        "plt.figure(figsize=(12,8), facecolor='white')\r\n",
-        "ax = sns.countplot(x='genre', data=songs)\r\n",
-        "plt.title('Count of Songs in each Genre', fontdict={'size':20})\r\n",
-        "plt.xlabel('\\nGenre of Song', fontdict={'size':16})\r\n",
-        "plt.ylabel('Frequency in the Dataset\\n', fontdict={'size':16});"
-      ],
-      "execution_count": null,
-      "outputs": [
-        {
-          "output_type": "display_data",
-          "data": {
-            "image/png": "\n",
-            "text/plain": [
-              "<Figure size 864x576 with 1 Axes>"
-            ]
-          },
-          "metadata": {
-            "tags": []
-          }
-        }
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "RghfoRS53MYk"
-      },
-      "source": [
-        "This dataset (spotify_songs.csv) is not diverse in genres but has lyrics and is large enough to train a good model on."
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "JqEyO0Cj3m-G"
-      },
-      "source": [
-        "This dataset (billboard-lyrics-spotify.csv) has lyrics and appears more deverse but no specified genre and is a small dataset."
-      ]
-    },
-    {
-      "cell_type": "code",
-      "metadata": {
-        "colab": {
-          "base_uri": "https://localhost:8080/",
-          "height": 378
-        },
-        "id": "59bdjRbky2oB",
-        "outputId": "ec281087-aff8-4edf-f1c7-589e93719032"
-      },
-      "source": [
-        "# Look at another dataset and preform EDA\r\n",
-        "most_pop_songs = pd.read_csv('https://raw.githubusercontent.com/Spotify-DSPT-158/Build-Week-Spotify/main/most_popular_spotify_songs.csv')\r\n",
-        "print(most_pop_songs.shape)\r\n",
-        "most_pop_songs.head()"
-      ],
-      "execution_count": null,
-      "outputs": [
-        {
-          "output_type": "stream",
-          "text": [
-            "(75022, 18)\n"
-          ],
-          "name": "stdout"
-        },
-        {
-          "output_type": "execute_result",
-          "data": {
-            "text/html": [
-              "<div>\n",
-              "<style scoped>\n",
-              "    .dataframe tbody tr th:only-of-type {\n",
-              "        vertical-align: middle;\n",
-              "    }\n",
-              "\n",
-              "    .dataframe tbody tr th {\n",
-              "        vertical-align: top;\n",
-              "    }\n",
-              "\n",
-              "    .dataframe thead th {\n",
-              "        text-align: right;\n",
-              "    }\n",
-              "</style>\n",
-              "<table border=\"1\" class=\"dataframe\">\n",
-              "  <thead>\n",
-              "    <tr style=\"text-align: right;\">\n",
-              "      <th></th>\n",
-              "      <th>genre</th>\n",
-              "      <th>artist_name</th>\n",
-              "      <th>track_name</th>\n",
-              "      <th>track_id</th>\n",
-              "      <th>popularity</th>\n",
-              "      <th>acousticness</th>\n",
-              "      <th>danceability</th>\n",
-              "      <th>duration_ms</th>\n",
-              "      <th>energy</th>\n",
-              "      <th>instrumentalness</th>\n",
-              "      <th>key</th>\n",
-              "      <th>liveness</th>\n",
-              "      <th>loudness</th>\n",
-              "      <th>mode</th>\n",
-              "      <th>speechiness</th>\n",
-              "      <th>tempo</th>\n",
-              "      <th>time_signature</th>\n",
-              "      <th>valence</th>\n",
-              "    </tr>\n",
-              "  </thead>\n",
-              "  <tbody>\n",
-              "    <tr>\n",
-              "      <th>0</th>\n",
-              "      <td>R&amp;B</td>\n",
-              "      <td>Mary J. Blige</td>\n",
-              "      <td>Be Without You - Kendu Mix</td>\n",
-              "      <td>2YegxR5As7BeQuVp2U6pek</td>\n",
-              "      <td>65</td>\n",
-              "      <td>0.0830</td>\n",
-              "      <td>0.724</td>\n",
-              "      <td>246333</td>\n",
-              "      <td>0.689</td>\n",
-              "      <td>0.000000</td>\n",
-              "      <td>D</td>\n",
-              "      <td>0.3040</td>\n",
-              "      <td>-5.922</td>\n",
-              "      <td>Minor</td>\n",
-              "      <td>0.1350</td>\n",
-              "      <td>146.496</td>\n",
-              "      <td>4/4</td>\n",
-              "      <td>0.6930</td>\n",
-              "    </tr>\n",
-              "    <tr>\n",
-              "      <th>1</th>\n",
-              "      <td>R&amp;B</td>\n",
-              "      <td>Rihanna</td>\n",
-              "      <td>Desperado</td>\n",
-              "      <td>6KFaHC9G178beAp7P0Vi5S</td>\n",
-              "      <td>63</td>\n",
-              "      <td>0.3230</td>\n",
-              "      <td>0.685</td>\n",
-              "      <td>186467</td>\n",
-              "      <td>0.610</td>\n",
-              "      <td>0.000000</td>\n",
-              "      <td>C</td>\n",
-              "      <td>0.1020</td>\n",
-              "      <td>-5.221</td>\n",
-              "      <td>Minor</td>\n",
-              "      <td>0.0439</td>\n",
-              "      <td>94.384</td>\n",
-              "      <td>3/4</td>\n",
-              "      <td>0.3230</td>\n",
-              "    </tr>\n",
-              "    <tr>\n",
-              "      <th>2</th>\n",
-              "      <td>R&amp;B</td>\n",
-              "      <td>Yung Bleu</td>\n",
-              "      <td>Ice On My Baby (feat. Kevin Gates) - Remix</td>\n",
-              "      <td>6muW8cSjJ3rusKJ0vH5olw</td>\n",
-              "      <td>62</td>\n",
-              "      <td>0.0675</td>\n",
-              "      <td>0.762</td>\n",
-              "      <td>199520</td>\n",
-              "      <td>0.520</td>\n",
-              "      <td>0.000004</td>\n",
-              "      <td>F</td>\n",
-              "      <td>0.1140</td>\n",
-              "      <td>-5.237</td>\n",
-              "      <td>Minor</td>\n",
-              "      <td>0.0959</td>\n",
-              "      <td>75.047</td>\n",
-              "      <td>4/4</td>\n",
-              "      <td>0.0862</td>\n",
-              "    </tr>\n",
-              "    <tr>\n",
-              "      <th>3</th>\n",
-              "      <td>R&amp;B</td>\n",
-              "      <td>Surfaces</td>\n",
-              "      <td>Heaven Falls / Fall on Me</td>\n",
-              "      <td>7yHqOZfsXYlicyoMt62yC6</td>\n",
-              "      <td>61</td>\n",
-              "      <td>0.3600</td>\n",
-              "      <td>0.563</td>\n",
-              "      <td>240597</td>\n",
-              "      <td>0.366</td>\n",
-              "      <td>0.002430</td>\n",
-              "      <td>B</td>\n",
-              "      <td>0.0955</td>\n",
-              "      <td>-6.896</td>\n",
-              "      <td>Minor</td>\n",
-              "      <td>0.1210</td>\n",
-              "      <td>85.352</td>\n",
-              "      <td>4/4</td>\n",
-              "      <td>0.7680</td>\n",
-              "    </tr>\n",
-              "    <tr>\n",
-              "      <th>4</th>\n",
-              "      <td>R&amp;B</td>\n",
-              "      <td>Olivia O'Brien</td>\n",
-              "      <td>Love Myself</td>\n",
-              "      <td>4XzgjxGKqULifVf7mnDIQK</td>\n",
-              "      <td>68</td>\n",
-              "      <td>0.5960</td>\n",
-              "      <td>0.653</td>\n",
-              "      <td>213947</td>\n",
-              "      <td>0.621</td>\n",
-              "      <td>0.000000</td>\n",
-              "      <td>B</td>\n",
-              "      <td>0.0811</td>\n",
-              "      <td>-5.721</td>\n",
-              "      <td>Minor</td>\n",
-              "      <td>0.0409</td>\n",
-              "      <td>100.006</td>\n",
-              "      <td>4/4</td>\n",
-              "      <td>0.4660</td>\n",
-              "    </tr>\n",
-              "  </tbody>\n",
-              "</table>\n",
-              "</div>"
-            ],
-            "text/plain": [
-              "  genre     artist_name  ... time_signature valence\n",
-              "0   R&B   Mary J. Blige  ...            4/4  0.6930\n",
-              "1   R&B         Rihanna  ...            3/4  0.3230\n",
-              "2   R&B       Yung Bleu  ...            4/4  0.0862\n",
-              "3   R&B        Surfaces  ...            4/4  0.7680\n",
-              "4   R&B  Olivia O'Brien  ...            4/4  0.4660\n",
-              "\n",
-              "[5 rows x 18 columns]"
-            ]
-          },
-          "metadata": {
-            "tags": []
-          },
-          "execution_count": 14
-        }
-      ]
-    },
-    {
-      "cell_type": "code",
-      "metadata": {
-        "colab": {
-          "base_uri": "https://localhost:8080/"
-        },
-        "id": "703hAtJu0e_c",
-        "outputId": "0da5e09c-e37a-43d7-9db1-08325ae8966c"
-      },
-      "source": [
-        "most_pop_songs.columns"
-      ],
-      "execution_count": null,
-      "outputs": [
-        {
-          "output_type": "execute_result",
-          "data": {
-            "text/plain": [
-              "Index(['genre', 'artist_name', 'track_name', 'track_id', 'popularity',\n",
-              "       'acousticness', 'danceability', 'duration_ms', 'energy',\n",
-              "       'instrumentalness', 'key', 'liveness', 'loudness', 'mode',\n",
-              "       'speechiness', 'tempo', 'time_signature', 'valence'],\n",
-              "      dtype='object')"
-            ]
-          },
-          "metadata": {
-            "tags": []
-          },
-          "execution_count": 15
-        }
-      ]
-    },
-    {
-      "cell_type": "code",
-      "metadata": {
-        "colab": {
-          "base_uri": "https://localhost:8080/",
-          "height": 628
-        },
-        "id": "OJnvylBJ0lji",
-        "outputId": "5859b3ae-c32c-4322-d353-88f56371acbc"
-      },
-      "source": [
-        "plt.figure(figsize=(12,8), facecolor='white')\r\n",
-        "ax = sns.countplot(x='genre', data=most_pop_songs)\r\n",
-        "plt.title('Count of Songs in each Genre', fontdict={'size':20})\r\n",
-        "plt.xlabel('\\nGenre of Song', fontdict={'size':16})\r\n",
-        "plt.xticks(rotation=90, size=12)\r\n",
-        "plt.ylabel('Frequency in the Dataset\\n', fontdict={'size':16})\r\n",
-        "plt.yticks(np.arange(0, 10000, 500), size=12)\r\n",
-        "plt.grid();"
-      ],
-      "execution_count": null,
-      "outputs": [
-        {
-          "output_type": "display_data",
-          "data": {
-            "image/png": "\n",
-            "text/plain": [
-              "<Figure size 864x576 with 1 Axes>"
-            ]
-          },
-          "metadata": {
-            "tags": []
-          }
-        }
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "f7b-Aeme2nid"
-      },
-      "source": [
-        "This dataset (most_popular_spotify_songs.csv) is more diverse but half as many observations as first dataset (spotify_songs.csv) and no lyrics."
-      ]
-    },
-    {
-      "cell_type": "code",
-      "metadata": {
-        "id": "eKIhayUl0teJ",
-        "colab": {
-          "base_uri": "https://localhost:8080/",
-          "height": 314
-        },
-        "outputId": "dafce712-8f94-41b6-a5dd-931bc929b20a"
-      },
-      "source": [
-        "most_pop_songs.describe()"
-      ],
-      "execution_count": null,
-      "outputs": [
-        {
-          "output_type": "execute_result",
-          "data": {
-            "text/html": [
-              "<div>\n",
-              "<style scoped>\n",
-              "    .dataframe tbody tr th:only-of-type {\n",
-              "        vertical-align: middle;\n",
-              "    }\n",
-              "\n",
-              "    .dataframe tbody tr th {\n",
-              "        vertical-align: top;\n",
-              "    }\n",
-              "\n",
-              "    .dataframe thead th {\n",
-              "        text-align: right;\n",
-              "    }\n",
-              "</style>\n",
-              "<table border=\"1\" class=\"dataframe\">\n",
-              "  <thead>\n",
-              "    <tr style=\"text-align: right;\">\n",
-              "      <th></th>\n",
-              "      <th>popularity</th>\n",
-              "      <th>acousticness</th>\n",
-              "      <th>danceability</th>\n",
-              "      <th>duration_ms</th>\n",
-              "      <th>energy</th>\n",
-              "      <th>instrumentalness</th>\n",
-              "      <th>liveness</th>\n",
-              "      <th>loudness</th>\n",
-              "      <th>speechiness</th>\n",
-              "      <th>tempo</th>\n",
-              "      <th>valence</th>\n",
-              "    </tr>\n",
-              "  </thead>\n",
-              "  <tbody>\n",
-              "    <tr>\n",
-              "      <th>count</th>\n",
-              "      <td>75022.000000</td>\n",
-              "      <td>75022.000000</td>\n",
-              "      <td>75022.000000</td>\n",
-              "      <td>7.502200e+04</td>\n",
-              "      <td>75022.000000</td>\n",
-              "      <td>75022.000000</td>\n",
-              "      <td>75022.000000</td>\n",
-              "      <td>75022.000000</td>\n",
-              "      <td>75022.000000</td>\n",
-              "      <td>75022.000000</td>\n",
-              "      <td>75022.000000</td>\n",
-              "    </tr>\n",
-              "    <tr>\n",
-              "      <th>mean</th>\n",
-              "      <td>52.326757</td>\n",
-              "      <td>0.286114</td>\n",
-              "      <td>0.590045</td>\n",
-              "      <td>2.338447e+05</td>\n",
-              "      <td>0.609805</td>\n",
-              "      <td>0.098790</td>\n",
-              "      <td>0.188244</td>\n",
-              "      <td>-8.127492</td>\n",
-              "      <td>0.095000</td>\n",
-              "      <td>119.785346</td>\n",
-              "      <td>0.469266</td>\n",
-              "    </tr>\n",
-              "    <tr>\n",
-              "      <th>std</th>\n",
-              "      <td>8.930855</td>\n",
-              "      <td>0.305384</td>\n",
-              "      <td>0.168050</td>\n",
-              "      <td>8.315542e+04</td>\n",
-              "      <td>0.230312</td>\n",
-              "      <td>0.249359</td>\n",
-              "      <td>0.158109</td>\n",
-              "      <td>4.636775</td>\n",
-              "      <td>0.108138</td>\n",
-              "      <td>29.795567</td>\n",
-              "      <td>0.244772</td>\n",
-              "    </tr>\n",
-              "    <tr>\n",
-              "      <th>min</th>\n",
-              "      <td>41.000000</td>\n",
-              "      <td>0.000001</td>\n",
-              "      <td>0.058100</td>\n",
-              "      <td>3.009300e+04</td>\n",
-              "      <td>0.000234</td>\n",
-              "      <td>0.000000</td>\n",
-              "      <td>0.009670</td>\n",
-              "      <td>-47.046000</td>\n",
-              "      <td>0.022200</td>\n",
-              "      <td>31.689000</td>\n",
-              "      <td>0.017600</td>\n",
-              "    </tr>\n",
-              "    <tr>\n",
-              "      <th>25%</th>\n",
-              "      <td>45.000000</td>\n",
-              "      <td>0.029300</td>\n",
-              "      <td>0.483000</td>\n",
-              "      <td>1.910228e+05</td>\n",
-              "      <td>0.460250</td>\n",
-              "      <td>0.000000</td>\n",
-              "      <td>0.096200</td>\n",
-              "      <td>-9.682750</td>\n",
-              "      <td>0.035600</td>\n",
-              "      <td>95.431750</td>\n",
-              "      <td>0.274000</td>\n",
-              "    </tr>\n",
-              "    <tr>\n",
-              "      <th>50%</th>\n",
-              "      <td>50.000000</td>\n",
-              "      <td>0.158000</td>\n",
-              "      <td>0.602000</td>\n",
-              "      <td>2.213730e+05</td>\n",
-              "      <td>0.638000</td>\n",
-              "      <td>0.000015</td>\n",
-              "      <td>0.123000</td>\n",
-              "      <td>-6.979000</td>\n",
-              "      <td>0.049700</td>\n",
-              "      <td>119.048000</td>\n",
-              "      <td>0.459000</td>\n",
-              "    </tr>\n",
-              "    <tr>\n",
-              "      <th>75%</th>\n",
-              "      <td>58.000000</td>\n",
-              "      <td>0.485000</td>\n",
-              "      <td>0.713000</td>\n",
-              "      <td>2.604368e+05</td>\n",
-              "      <td>0.792000</td>\n",
-              "      <td>0.005727</td>\n",
-              "      <td>0.228000</td>\n",
-              "      <td>-5.198000</td>\n",
-              "      <td>0.102000</td>\n",
-              "      <td>139.997000</td>\n",
-              "      <td>0.659000</td>\n",
-              "    </tr>\n",
-              "    <tr>\n",
-              "      <th>max</th>\n",
-              "      <td>100.000000</td>\n",
-              "      <td>0.996000</td>\n",
-              "      <td>0.986000</td>\n",
-              "      <td>5.488000e+06</td>\n",
-              "      <td>0.999000</td>\n",
-              "      <td>0.994000</td>\n",
-              "      <td>1.000000</td>\n",
-              "      <td>1.585000</td>\n",
-              "      <td>0.960000</td>\n",
-              "      <td>242.903000</td>\n",
-              "      <td>0.992000</td>\n",
-              "    </tr>\n",
-              "  </tbody>\n",
-              "</table>\n",
-              "</div>"
-            ],
-            "text/plain": [
-              "         popularity  acousticness  ...         tempo       valence\n",
-              "count  75022.000000  75022.000000  ...  75022.000000  75022.000000\n",
-              "mean      52.326757      0.286114  ...    119.785346      0.469266\n",
-              "std        8.930855      0.305384  ...     29.795567      0.244772\n",
-              "min       41.000000      0.000001  ...     31.689000      0.017600\n",
-              "25%       45.000000      0.029300  ...     95.431750      0.274000\n",
-              "50%       50.000000      0.158000  ...    119.048000      0.459000\n",
-              "75%       58.000000      0.485000  ...    139.997000      0.659000\n",
-              "max      100.000000      0.996000  ...    242.903000      0.992000\n",
-              "\n",
-              "[8 rows x 11 columns]"
-            ]
-          },
-          "metadata": {
-            "tags": []
-          },
-          "execution_count": 17
-        }
-      ]
-    },
-    {
-      "cell_type": "code",
-      "metadata": {
-        "id": "P-ZACDVWtV_P",
-        "colab": {
-          "base_uri": "https://localhost:8080/"
-        },
-        "outputId": "a9b6ea8b-31ea-475a-bad8-fcee63ee4cdf"
-      },
-      "source": [
-        "most_pop_songs.isnull().sum()"
-      ],
-      "execution_count": null,
-      "outputs": [
-        {
-          "output_type": "execute_result",
-          "data": {
-            "text/plain": [
-              "genre               0\n",
-              "artist_name         0\n",
-              "track_name          0\n",
-              "track_id            0\n",
-              "popularity          0\n",
-              "acousticness        0\n",
-              "danceability        0\n",
-              "duration_ms         0\n",
-              "energy              0\n",
-              "instrumentalness    0\n",
-              "key                 0\n",
-              "liveness            0\n",
-              "loudness            0\n",
-              "mode                0\n",
-              "speechiness         0\n",
-              "tempo               0\n",
-              "time_signature      0\n",
-              "valence             0\n",
-              "dtype: int64"
-            ]
-          },
-          "metadata": {
-            "tags": []
-          },
-          "execution_count": 18
-        }
-      ]
-    },
-    {
-      "cell_type": "code",
-      "metadata": {
-        "id": "B2EpTsDjx4PZ",
-        "colab": {
-          "base_uri": "https://localhost:8080/"
-        },
-        "outputId": "0360b805-36b6-4088-b5a1-70c117a2efaf"
-      },
-      "source": [
-        "!python -m spacy download en_core_web_md"
-      ],
-      "execution_count": null,
-      "outputs": [
-        {
-          "output_type": "stream",
-          "text": [
-            "Requirement already satisfied: en_core_web_md==2.2.5 from https://github.com/explosion/spacy-models/releases/download/en_core_web_md-2.2.5/en_core_web_md-2.2.5.tar.gz#egg=en_core_web_md==2.2.5 in /usr/local/lib/python3.6/dist-packages (2.2.5)\n",
-            "Requirement already satisfied: spacy>=2.2.2 in /usr/local/lib/python3.6/dist-packages (from en_core_web_md==2.2.5) (2.2.4)\n",
-            "Requirement already satisfied: murmurhash<1.1.0,>=0.28.0 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_md==2.2.5) (1.0.5)\n",
-            "Requirement already satisfied: numpy>=1.15.0 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_md==2.2.5) (1.19.4)\n",
-            "Requirement already satisfied: wasabi<1.1.0,>=0.4.0 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_md==2.2.5) (0.8.0)\n",
-            "Requirement already satisfied: cymem<2.1.0,>=2.0.2 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_md==2.2.5) (2.0.5)\n",
-            "Requirement already satisfied: preshed<3.1.0,>=3.0.2 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_md==2.2.5) (3.0.5)\n",
-            "Requirement already satisfied: setuptools in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_md==2.2.5) (51.0.0)\n",
-            "Requirement already satisfied: thinc==7.4.0 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_md==2.2.5) (7.4.0)\n",
-            "Requirement already satisfied: plac<1.2.0,>=0.9.6 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_md==2.2.5) (1.1.3)\n",
-            "Requirement already satisfied: srsly<1.1.0,>=1.0.2 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_md==2.2.5) (1.0.5)\n",
-            "Requirement already satisfied: blis<0.5.0,>=0.4.0 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_md==2.2.5) (0.4.1)\n",
-            "Requirement already satisfied: catalogue<1.1.0,>=0.0.7 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_md==2.2.5) (1.0.0)\n",
-            "Requirement already satisfied: requests<3.0.0,>=2.13.0 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_md==2.2.5) (2.25.1)\n",
-            "Requirement already satisfied: tqdm<5.0.0,>=4.38.0 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_md==2.2.5) (4.55.1)\n",
-            "Requirement already satisfied: importlib-metadata>=0.20; python_version < \"3.8\" in /usr/local/lib/python3.6/dist-packages (from catalogue<1.1.0,>=0.0.7->spacy>=2.2.2->en_core_web_md==2.2.5) (3.3.0)\n",
-            "Requirement already satisfied: chardet<5,>=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests<3.0.0,>=2.13.0->spacy>=2.2.2->en_core_web_md==2.2.5) (3.0.4)\n",
-            "Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.6/dist-packages (from requests<3.0.0,>=2.13.0->spacy>=2.2.2->en_core_web_md==2.2.5) (1.24.3)\n",
-            "Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.6/dist-packages (from requests<3.0.0,>=2.13.0->spacy>=2.2.2->en_core_web_md==2.2.5) (2.10)\n",
-            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.6/dist-packages (from requests<3.0.0,>=2.13.0->spacy>=2.2.2->en_core_web_md==2.2.5) (2020.12.5)\n",
-            "Requirement already satisfied: typing-extensions>=3.6.4; python_version < \"3.8\" in /usr/local/lib/python3.6/dist-packages (from importlib-metadata>=0.20; python_version < \"3.8\"->catalogue<1.1.0,>=0.0.7->spacy>=2.2.2->en_core_web_md==2.2.5) (3.7.4.3)\n",
-            "Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.6/dist-packages (from importlib-metadata>=0.20; python_version < \"3.8\"->catalogue<1.1.0,>=0.0.7->spacy>=2.2.2->en_core_web_md==2.2.5) (3.4.0)\n",
-            "\u001b[38;5;2m✔ Download and installation successful\u001b[0m\n",
-            "You can now load the model via spacy.load('en_core_web_md')\n"
-          ],
-          "name": "stdout"
-        }
-      ]
-    },
-    {
-      "cell_type": "code",
-      "metadata": {
-        "id": "1VrWMrW341Sa"
-      },
-      "source": [
-        ""
-      ],
-      "execution_count": null,
-      "outputs": []
-    },
-    {
-      "cell_type": "code",
-      "metadata": {
-        "id": "fo2y7zTwtkLs",
-        "colab": {
-          "base_uri": "https://localhost:8080/",
-          "height": 35
-        },
-        "outputId": "e98d5e38-4009-4313-eefa-69717ff7a159"
-      },
-      "source": [
-        "nlp = spacy.load('en_core_web_md')\r\n",
-        "\r\n",
-        "def lemma_creator(text):\r\n",
-        "    lemmas = []\r\n",
-        "    process_text = nlp(text)\r\n",
-        "\r\n",
-        "    for token in process_text:\r\n",
-        "        if ((token.is_stop == False) and (token.is_punct == False)) and (token.pos_ != 'PRON'):\r\n",
-        "            lemmas.append(token.lemma_)\r\n",
-        "    return ' '.join(lemmas)\r\n",
-        "\r\n",
-        "most_pop_songs['lemmas'] = most_pop_songs['track_name'].apply(lemma_creator)\r\n",
-        "most_pop_songs['lemmas'][0]"
-      ],
-      "execution_count": null,
-      "outputs": [
-        {
-          "output_type": "execute_result",
-          "data": {
-            "application/vnd.google.colaboratory.intrinsic+json": {
-              "type": "string"
-            },
-            "text/plain": [
-              "'Kendu Mix'"
-            ]
-          },
-          "metadata": {
-            "tags": []
-          },
-          "execution_count": 20
-        }
-      ]
-    },
-    {
-      "cell_type": "code",
-      "metadata": {
-        "id": "LHSNGUey0S3V"
-      },
-      "source": [
-        "most_pop_songs.to_csv('most_pop_songs.csv', index=False)"
-      ],
-      "execution_count": null,
-      "outputs": []
-    },
-    {
-      "cell_type": "code",
-      "metadata": {
-        "id": "Y6J2cqfR-jxZ"
-      },
-      "source": [
-        "from sklearn.feature_extraction.text import TfidfVectorizer"
-      ],
-      "execution_count": null,
-      "outputs": []
-    },
-    {
-      "cell_type": "code",
-      "metadata": {
-        "id": "_sLk8kg70Sx6"
-      },
-      "source": [
-        "tfidf = TfidfVectorizer(stop_words='english', min_df=0.025, max_df=0.98, ngram_range=(1,3))\r\n",
-        "dtm = tfidf.fit_transform(most_pop_songs['lemmas'])\r\n",
-        "dtm = pd.DataFrame(dtm.todense(), columns=tfidf.get_feature_names())"
-      ],
-      "execution_count": null,
-      "outputs": []
-    },
-    {
-      "cell_type": "code",
-      "metadata": {
-        "colab": {
-          "base_uri": "https://localhost:8080/"
-        },
-        "id": "cfT4gQzv92XH",
-        "outputId": "9c01d386-7ae2-4113-aad1-e705c6cbb0f9"
-      },
-      "source": [
-        "!pip install pickle-mixin"
-      ],
-      "execution_count": null,
-      "outputs": [
-        {
-          "output_type": "stream",
-          "text": [
-            "Requirement already satisfied: pickle-mixin in /usr/local/lib/python3.6/dist-packages (1.0.2)\n"
-          ],
-          "name": "stdout"
-        }
-      ]
-    },
-    {
-      "cell_type": "code",
-      "metadata": {
-        "id": "1nZZOkg10SqC"
-      },
-      "source": [
-        "with open('model.pkl', 'wb') as f2:\r\n",
-        "  pickle.dump('/content/most_pop_songs.csv', f2)"
-      ],
-      "execution_count": null,
-      "outputs": []
-    },
-    {
-      "cell_type": "code",
-      "metadata": {
-        "id": "IckeT2W2rfuF"
-      },
-      "source": [
-        ""
-      ],
-      "execution_count": null,
-      "outputs": []
-    },
-    {
-      "cell_type": "code",
-      "metadata": {
-        "id": "9zfNfBNKq4NC",
-        "colab": {
-          "base_uri": "https://localhost:8080/",
-          "height": 131
-        },
-        "outputId": "9532dad7-091a-411a-ac67-99e0d6e38118"
-      },
-      "source": [
-        "X_train, y_train, X_test, y_test = train_test_split(most_pop_songs, test_size=)"
-      ],
-      "execution_count": null,
-      "outputs": [
-        {
-          "output_type": "error",
-          "ename": "SyntaxError",
-          "evalue": "ignored",
-          "traceback": [
-            "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-21-93e4b645e535>\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    X_train, y_train, X_test, y_test = train_test_split(most_pop_songs, test_size=)\u001b[0m\n\u001b[0m                                                                                  ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
-          ]
-        }
-      ]
-    },
-    {
-      "cell_type": "code",
-      "metadata": {
-        "id": "d13PfoVrpHgY"
-      },
-      "source": [
-        "n_neighbors = 10\r\n",
-        "\r\n"
-      ],
-      "execution_count": null,
-      "outputs": []
-    }
-  ]
+ "nbformat": 4,
+ "nbformat_minor": 0,
+ "metadata": {
+  "kernelspec": {
+   "name": "python3",
+   "display_name": "Python 3"
+  },
+  "colab": {
+   "name": "spotify_eda.ipynb",
+   "provenance": [],
+   "toc_visible": true
+  },
+  "accelerator": "TPU"
+ },
+ "cells": [
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "pycharm": {
+     "name": "#%% md\n"
+    },
+    "id": "_QsUF-whcChD"
+   },
+   "source": [
+    "# Spotify Song Suggester"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "pycharm": {
+     "name": "#%% md\n"
+    },
+    "id": "Tns3ezOtcChI"
+   },
+   "source": [
+    "## The Problem:\n",
+    "Need to create a model to give predictions of songs that a user might like based on music they already like."
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "pycharm": {
+     "name": "#%% md\n"
+    },
+    "id": "TT-CTdNVcChJ"
+   },
+   "source": [
+    "## Resources:\n",
+    "- [DS PT Schedule / Milestones](https://www.notion.so/f30da0c13d5247289bd5ade8d95af4a8?v=c97929c27fe24af780928a5a91a8b095)\n",
+    "- [DS Unit 3 Rubric](https://www.notion.so/Data-Science-Unit-3-Rubric-455c04d97fb840c6b75d46e8052a5275)\n",
+    "- [DS Unit 4 Rubric](https://www.notion.so/Data-Science-Unit-4-Rubric-1f7381be7b924da2a83c086c2bf97d3b)"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "pycharm": {
+     "name": "#%% md\n"
+    },
+    "id": "b58fjLJDcChJ"
+   },
+   "source": [
+    "## The Data:\n",
+    "Looking for data that not only gives the artist and title of a song, but the lyrics too."
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "pycharm": {
+     "name": "#%% md\n"
+    },
+    "id": "CU3Jt7rgcChJ"
+   },
+   "source": [
+    "### Possible Datasets:\n",
+    "- most_popular_spotify_songs.csv\n",
+    "- [billboard-lyrics-spotify.csv](https://github.com/walkerkq/musiclyrics/blob/master/billboard_lyrics_1964-2015.csv)\n",
+    "- [Spotify API](https://developer.spotify.com/documentation/web-api/quick-start/)\n",
+    "- [musiXmatch Dataset API](http://millionsongdataset.com/musixmatch/)\n",
+    "- Scrape the web for lyrics to match to Spotify song list."
+   ]
+  },
+  {
+   "cell_type": "code",
+   "metadata": {
+    "pycharm": {
+     "name": "#%%\n"
+    },
+    "id": "5lYlnyE-cChK"
+   },
+   "source": [
+    "# If running on Google Colab\n",
+    "!pip install pandas-profiling==2.*\n",
+    "from google.colab import output # to clear pip output to screen\n",
+    "output.clear()"
+   ],
+   "execution_count": null,
+   "outputs": []
+  },
+  {
+   "cell_type": "code",
+   "metadata": {
+    "colab": {
+     "base_uri": "https://localhost:8080/"
+    },
+    "id": "hUBkJQBNBpI1",
+    "outputId": "4d613aac-b70e-4746-fdf3-25b9076820b2"
+   },
+   "source": [
+    "# Install squarify\n",
+    "!pip install squarify"
+   ],
+   "execution_count": null,
+   "outputs": [
+    {
+     "output_type": "stream",
+     "text": [
+      "Requirement already satisfied: squarify in /usr/local/lib/python3.6/dist-packages (0.4.3)\n"
+     ],
+     "name": "stdout"
+    }
+   ]
+  },
+  {
+   "cell_type": "code",
+   "metadata": {
+    "pycharm": {
+     "name": "#%%\n"
+    },
+    "id": "Grmu-yI_cChK"
+   },
+   "source": [
+    "# Imports\n",
+    "import warnings\n",
+    "warnings.filterwarnings('ignore')\n",
+    "\n",
+    "import numpy as np\n",
+    "import pandas as pd\n",
+    "import pickle\n",
+    "from collections import Counter\n",
+    "\n",
+    "from pandas_profiling import ProfileReport\n",
+    "\n",
+    "# Sci-Kit Learn\n",
+    "from sklearn.model_selection import train_test_split\n",
+    "from sklearn.neighbors import NearestNeighbors, KNeighborsRegressor\n",
+    "from sklearn.feature_extraction.text import CountVectorizer, ENGLISH_STOP_WORDS, TfidfVectorizer\n",
+    "\n",
+    "# NLP\n",
+    "import re\n",
+    "from nltk.stem import PorterStemmer\n",
+    "import spacy\n",
+    "from spacy.tokenizer import Tokenizer\n",
+    "\n",
+    "# PLotting\n",
+    "import squarify\n",
+    "import matplotlib.pyplot as plt\n",
+    "import seaborn as sns\n",
+    "\n",
+    "from gensim.models import Word2Vec"
+   ],
+   "execution_count": null,
+   "outputs": []
+  },
+  {
+   "cell_type": "code",
+   "metadata": {
+    "pycharm": {
+     "name": "#%%\n"
+    },
+    "colab": {
+     "base_uri": "https://localhost:8080/",
+     "height": 621
+    },
+    "id": "4mrv_7Q1cChK",
+    "outputId": "5aaa9fe1-ac95-4286-9dbc-50ac84a2b872"
+   },
+   "source": [
+    "# Read in dataset\n",
+    "song_df = pd.read_csv('https://raw.githubusercontent.com/Spotify-DSPT-158/Build-Week-Spotify/main/spotify_songs.csv')\n",
+    "\n",
+    "# Peak at the dataset\n",
+    "print(song_df.shape)\n",
+    "song_df.head()"
+   ],
+   "execution_count": null,
+   "outputs": [
+    {
+     "output_type": "stream",
+     "text": [
+      "(18454, 25)\n"
+     ],
+     "name": "stdout"
+    },
+    {
+     "output_type": "execute_result",
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>track_id</th>\n",
+       "      <th>track_name</th>\n",
+       "      <th>track_artist</th>\n",
+       "      <th>lyrics</th>\n",
+       "      <th>track_popularity</th>\n",
+       "      <th>track_album_id</th>\n",
+       "      <th>track_album_name</th>\n",
+       "      <th>track_album_release_date</th>\n",
+       "      <th>playlist_name</th>\n",
+       "      <th>playlist_id</th>\n",
+       "      <th>playlist_genre</th>\n",
+       "      <th>playlist_subgenre</th>\n",
+       "      <th>danceability</th>\n",
+       "      <th>energy</th>\n",
+       "      <th>key</th>\n",
+       "      <th>loudness</th>\n",
+       "      <th>mode</th>\n",
+       "      <th>speechiness</th>\n",
+       "      <th>acousticness</th>\n",
+       "      <th>instrumentalness</th>\n",
+       "      <th>liveness</th>\n",
+       "      <th>valence</th>\n",
+       "      <th>tempo</th>\n",
+       "      <th>duration_ms</th>\n",
+       "      <th>language</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>0</th>\n",
+       "      <td>0017A6SJgTbfQVU2EtsPNo</td>\n",
+       "      <td>Pangarap</td>\n",
+       "      <td>Barbie's Cradle</td>\n",
+       "      <td>Minsan pa Nang ako'y napalingon Hindi ko alam ...</td>\n",
+       "      <td>41</td>\n",
+       "      <td>1srJQ0njEQgd8w4XSqI4JQ</td>\n",
+       "      <td>Trip</td>\n",
+       "      <td>2001-01-01</td>\n",
+       "      <td>Pinoy Classic Rock</td>\n",
+       "      <td>37i9dQZF1DWYDQ8wBxd7xt</td>\n",
+       "      <td>rock</td>\n",
+       "      <td>classic rock</td>\n",
+       "      <td>0.682</td>\n",
+       "      <td>0.401</td>\n",
+       "      <td>2</td>\n",
+       "      <td>-10.068</td>\n",
+       "      <td>1</td>\n",
+       "      <td>0.0236</td>\n",
+       "      <td>0.27900</td>\n",
+       "      <td>0.01170</td>\n",
+       "      <td>0.0887</td>\n",
+       "      <td>0.566</td>\n",
+       "      <td>97.091</td>\n",
+       "      <td>235440</td>\n",
+       "      <td>tl</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>1</th>\n",
+       "      <td>004s3t0ONYlzxII9PLgU6z</td>\n",
+       "      <td>I Feel Alive</td>\n",
+       "      <td>Steady Rollin</td>\n",
+       "      <td>The trees, are singing in the wind The sky blu...</td>\n",
+       "      <td>28</td>\n",
+       "      <td>3z04Lb9Dsilqw68SHt6jLB</td>\n",
+       "      <td>Love &amp; Loss</td>\n",
+       "      <td>2017-11-21</td>\n",
+       "      <td>Hard Rock Workout</td>\n",
+       "      <td>3YouF0u7waJnolytf9JCXf</td>\n",
+       "      <td>rock</td>\n",
+       "      <td>hard rock</td>\n",
+       "      <td>0.303</td>\n",
+       "      <td>0.880</td>\n",
+       "      <td>9</td>\n",
+       "      <td>-4.739</td>\n",
+       "      <td>1</td>\n",
+       "      <td>0.0442</td>\n",
+       "      <td>0.01170</td>\n",
+       "      <td>0.00994</td>\n",
+       "      <td>0.3470</td>\n",
+       "      <td>0.404</td>\n",
+       "      <td>135.225</td>\n",
+       "      <td>373512</td>\n",
+       "      <td>en</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>2</th>\n",
+       "      <td>00chLpzhgVjxs1zKC9UScL</td>\n",
+       "      <td>Poison</td>\n",
+       "      <td>Bell Biv DeVoe</td>\n",
+       "      <td>NA Yeah, Spyderman and Freeze in full effect U...</td>\n",
+       "      <td>0</td>\n",
+       "      <td>6oZ6brjB8x3GoeSYdwJdPc</td>\n",
+       "      <td>Gold</td>\n",
+       "      <td>2005-01-01</td>\n",
+       "      <td>Back in the day - R&amp;B, New Jack Swing, Swingbe...</td>\n",
+       "      <td>3a9y4eeCJRmG9p4YKfqYIx</td>\n",
+       "      <td>r&amp;b</td>\n",
+       "      <td>new jack swing</td>\n",
+       "      <td>0.845</td>\n",
+       "      <td>0.652</td>\n",
+       "      <td>6</td>\n",
+       "      <td>-7.504</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0.2160</td>\n",
+       "      <td>0.00432</td>\n",
+       "      <td>0.00723</td>\n",
+       "      <td>0.4890</td>\n",
+       "      <td>0.650</td>\n",
+       "      <td>111.904</td>\n",
+       "      <td>262467</td>\n",
+       "      <td>en</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3</th>\n",
+       "      <td>00cqd6ZsSkLZqGMlQCR0Zo</td>\n",
+       "      <td>Baby It's Cold Outside (feat. Christina Aguilera)</td>\n",
+       "      <td>CeeLo Green</td>\n",
+       "      <td>I really can't stay Baby it's cold outside I'v...</td>\n",
+       "      <td>41</td>\n",
+       "      <td>3ssspRe42CXkhPxdc12xcp</td>\n",
+       "      <td>CeeLo's Magic Moment</td>\n",
+       "      <td>2012-10-29</td>\n",
+       "      <td>Christmas Soul</td>\n",
+       "      <td>6FZYc2BvF7tColxO8PBShV</td>\n",
+       "      <td>r&amp;b</td>\n",
+       "      <td>neo soul</td>\n",
+       "      <td>0.425</td>\n",
+       "      <td>0.378</td>\n",
+       "      <td>5</td>\n",
+       "      <td>-5.819</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0.0341</td>\n",
+       "      <td>0.68900</td>\n",
+       "      <td>0.00000</td>\n",
+       "      <td>0.0664</td>\n",
+       "      <td>0.405</td>\n",
+       "      <td>118.593</td>\n",
+       "      <td>243067</td>\n",
+       "      <td>en</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>4</th>\n",
+       "      <td>00emjlCv9azBN0fzuuyLqy</td>\n",
+       "      <td>Dumb Litty</td>\n",
+       "      <td>KARD</td>\n",
+       "      <td>Get up out of my business You don't keep me fr...</td>\n",
+       "      <td>65</td>\n",
+       "      <td>7h5X3xhh3peIK9Y0qI5hbK</td>\n",
+       "      <td>KARD 2nd Digital Single ‘Dumb Litty’</td>\n",
+       "      <td>2019-09-22</td>\n",
+       "      <td>K-Party Dance Mix</td>\n",
+       "      <td>37i9dQZF1DX4RDXswvP6Mj</td>\n",
+       "      <td>pop</td>\n",
+       "      <td>dance pop</td>\n",
+       "      <td>0.760</td>\n",
+       "      <td>0.887</td>\n",
+       "      <td>9</td>\n",
+       "      <td>-1.993</td>\n",
+       "      <td>1</td>\n",
+       "      <td>0.0409</td>\n",
+       "      <td>0.03700</td>\n",
+       "      <td>0.00000</td>\n",
+       "      <td>0.1380</td>\n",
+       "      <td>0.240</td>\n",
+       "      <td>130.018</td>\n",
+       "      <td>193160</td>\n",
+       "      <td>en</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "                 track_id  ... language\n",
+       "0  0017A6SJgTbfQVU2EtsPNo  ...       tl\n",
+       "1  004s3t0ONYlzxII9PLgU6z  ...       en\n",
+       "2  00chLpzhgVjxs1zKC9UScL  ...       en\n",
+       "3  00cqd6ZsSkLZqGMlQCR0Zo  ...       en\n",
+       "4  00emjlCv9azBN0fzuuyLqy  ...       en\n",
+       "\n",
+       "[5 rows x 25 columns]"
+      ]
+     },
+     "metadata": {
+      "tags": []
+     },
+     "execution_count": 4
+    }
+   ]
+  },
+  {
+   "cell_type": "code",
+   "metadata": {
+    "colab": {
+     "base_uri": "https://localhost:8080/",
+     "height": 621
+    },
+    "id": "106GLyDVws1X",
+    "outputId": "d1436adc-4a2f-4545-b987-2709a4c99e28"
+   },
+   "source": [
+    "# Drop columns not needed for our problem\n",
+    "songs = song_df.drop(columns=['track_album_id', 'track_album_name', 'playlist_id'])\n",
+    "print(songs.shape)\n",
+    "songs.head()"
+   ],
+   "execution_count": null,
+   "outputs": [
+    {
+     "output_type": "stream",
+     "text": [
+      "(18454, 22)\n"
+     ],
+     "name": "stdout"
+    },
+    {
+     "output_type": "execute_result",
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>track_id</th>\n",
+       "      <th>track_name</th>\n",
+       "      <th>track_artist</th>\n",
+       "      <th>lyrics</th>\n",
+       "      <th>track_popularity</th>\n",
+       "      <th>track_album_release_date</th>\n",
+       "      <th>playlist_name</th>\n",
+       "      <th>playlist_genre</th>\n",
+       "      <th>playlist_subgenre</th>\n",
+       "      <th>danceability</th>\n",
+       "      <th>energy</th>\n",
+       "      <th>key</th>\n",
+       "      <th>loudness</th>\n",
+       "      <th>mode</th>\n",
+       "      <th>speechiness</th>\n",
+       "      <th>acousticness</th>\n",
+       "      <th>instrumentalness</th>\n",
+       "      <th>liveness</th>\n",
+       "      <th>valence</th>\n",
+       "      <th>tempo</th>\n",
+       "      <th>duration_ms</th>\n",
+       "      <th>language</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>0</th>\n",
+       "      <td>0017A6SJgTbfQVU2EtsPNo</td>\n",
+       "      <td>Pangarap</td>\n",
+       "      <td>Barbie's Cradle</td>\n",
+       "      <td>Minsan pa Nang ako'y napalingon Hindi ko alam ...</td>\n",
+       "      <td>41</td>\n",
+       "      <td>2001-01-01</td>\n",
+       "      <td>Pinoy Classic Rock</td>\n",
+       "      <td>rock</td>\n",
+       "      <td>classic rock</td>\n",
+       "      <td>0.682</td>\n",
+       "      <td>0.401</td>\n",
+       "      <td>2</td>\n",
+       "      <td>-10.068</td>\n",
+       "      <td>1</td>\n",
+       "      <td>0.0236</td>\n",
+       "      <td>0.27900</td>\n",
+       "      <td>0.01170</td>\n",
+       "      <td>0.0887</td>\n",
+       "      <td>0.566</td>\n",
+       "      <td>97.091</td>\n",
+       "      <td>235440</td>\n",
+       "      <td>tl</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>1</th>\n",
+       "      <td>004s3t0ONYlzxII9PLgU6z</td>\n",
+       "      <td>I Feel Alive</td>\n",
+       "      <td>Steady Rollin</td>\n",
+       "      <td>The trees, are singing in the wind The sky blu...</td>\n",
+       "      <td>28</td>\n",
+       "      <td>2017-11-21</td>\n",
+       "      <td>Hard Rock Workout</td>\n",
+       "      <td>rock</td>\n",
+       "      <td>hard rock</td>\n",
+       "      <td>0.303</td>\n",
+       "      <td>0.880</td>\n",
+       "      <td>9</td>\n",
+       "      <td>-4.739</td>\n",
+       "      <td>1</td>\n",
+       "      <td>0.0442</td>\n",
+       "      <td>0.01170</td>\n",
+       "      <td>0.00994</td>\n",
+       "      <td>0.3470</td>\n",
+       "      <td>0.404</td>\n",
+       "      <td>135.225</td>\n",
+       "      <td>373512</td>\n",
+       "      <td>en</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>2</th>\n",
+       "      <td>00chLpzhgVjxs1zKC9UScL</td>\n",
+       "      <td>Poison</td>\n",
+       "      <td>Bell Biv DeVoe</td>\n",
+       "      <td>NA Yeah, Spyderman and Freeze in full effect U...</td>\n",
+       "      <td>0</td>\n",
+       "      <td>2005-01-01</td>\n",
+       "      <td>Back in the day - R&amp;B, New Jack Swing, Swingbe...</td>\n",
+       "      <td>r&amp;b</td>\n",
+       "      <td>new jack swing</td>\n",
+       "      <td>0.845</td>\n",
+       "      <td>0.652</td>\n",
+       "      <td>6</td>\n",
+       "      <td>-7.504</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0.2160</td>\n",
+       "      <td>0.00432</td>\n",
+       "      <td>0.00723</td>\n",
+       "      <td>0.4890</td>\n",
+       "      <td>0.650</td>\n",
+       "      <td>111.904</td>\n",
+       "      <td>262467</td>\n",
+       "      <td>en</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3</th>\n",
+       "      <td>00cqd6ZsSkLZqGMlQCR0Zo</td>\n",
+       "      <td>Baby It's Cold Outside (feat. Christina Aguilera)</td>\n",
+       "      <td>CeeLo Green</td>\n",
+       "      <td>I really can't stay Baby it's cold outside I'v...</td>\n",
+       "      <td>41</td>\n",
+       "      <td>2012-10-29</td>\n",
+       "      <td>Christmas Soul</td>\n",
+       "      <td>r&amp;b</td>\n",
+       "      <td>neo soul</td>\n",
+       "      <td>0.425</td>\n",
+       "      <td>0.378</td>\n",
+       "      <td>5</td>\n",
+       "      <td>-5.819</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0.0341</td>\n",
+       "      <td>0.68900</td>\n",
+       "      <td>0.00000</td>\n",
+       "      <td>0.0664</td>\n",
+       "      <td>0.405</td>\n",
+       "      <td>118.593</td>\n",
+       "      <td>243067</td>\n",
+       "      <td>en</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>4</th>\n",
+       "      <td>00emjlCv9azBN0fzuuyLqy</td>\n",
+       "      <td>Dumb Litty</td>\n",
+       "      <td>KARD</td>\n",
+       "      <td>Get up out of my business You don't keep me fr...</td>\n",
+       "      <td>65</td>\n",
+       "      <td>2019-09-22</td>\n",
+       "      <td>K-Party Dance Mix</td>\n",
+       "      <td>pop</td>\n",
+       "      <td>dance pop</td>\n",
+       "      <td>0.760</td>\n",
+       "      <td>0.887</td>\n",
+       "      <td>9</td>\n",
+       "      <td>-1.993</td>\n",
+       "      <td>1</td>\n",
+       "      <td>0.0409</td>\n",
+       "      <td>0.03700</td>\n",
+       "      <td>0.00000</td>\n",
+       "      <td>0.1380</td>\n",
+       "      <td>0.240</td>\n",
+       "      <td>130.018</td>\n",
+       "      <td>193160</td>\n",
+       "      <td>en</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "                 track_id  ... language\n",
+       "0  0017A6SJgTbfQVU2EtsPNo  ...       tl\n",
+       "1  004s3t0ONYlzxII9PLgU6z  ...       en\n",
+       "2  00chLpzhgVjxs1zKC9UScL  ...       en\n",
+       "3  00cqd6ZsSkLZqGMlQCR0Zo  ...       en\n",
+       "4  00emjlCv9azBN0fzuuyLqy  ...       en\n",
+       "\n",
+       "[5 rows x 22 columns]"
+      ]
+     },
+     "metadata": {
+      "tags": []
+     },
+     "execution_count": 5
+    }
+   ]
+  },
+  {
+   "cell_type": "code",
+   "metadata": {
+    "colab": {
+     "base_uri": "https://localhost:8080/",
+     "height": 621
+    },
+    "id": "EjeV_byXzfaT",
+    "outputId": "bc5f70d9-8894-4ce0-96b6-76ee1b070733"
+   },
+   "source": [
+    "# Rename features to make it easier to work with\n",
+    "songs = songs.rename(columns={'track_id': 'id', 'track_name': 'title' , \n",
+    "                              'track_artist': 'artist', \n",
+    "                              'track_popularity': 'popularity',\n",
+    "                              'track_album_release_date': 'release_date',\n",
+    "                              'playlist_name': 'playlist', \n",
+    "                              'playlist_genre': 'genre',\n",
+    "                              'playlist_subgenre': 'subgenre'})\n",
+    "\n",
+    "songs.head()"
+   ],
+   "execution_count": null,
+   "outputs": [
+    {
+     "output_type": "execute_result",
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>id</th>\n",
+       "      <th>title</th>\n",
+       "      <th>artist</th>\n",
+       "      <th>lyrics</th>\n",
+       "      <th>popularity</th>\n",
+       "      <th>release_date</th>\n",
+       "      <th>playlist</th>\n",
+       "      <th>genre</th>\n",
+       "      <th>subgenre</th>\n",
+       "      <th>danceability</th>\n",
+       "      <th>energy</th>\n",
+       "      <th>key</th>\n",
+       "      <th>loudness</th>\n",
+       "      <th>mode</th>\n",
+       "      <th>speechiness</th>\n",
+       "      <th>acousticness</th>\n",
+       "      <th>instrumentalness</th>\n",
+       "      <th>liveness</th>\n",
+       "      <th>valence</th>\n",
+       "      <th>tempo</th>\n",
+       "      <th>duration_ms</th>\n",
+       "      <th>language</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>0</th>\n",
+       "      <td>0017A6SJgTbfQVU2EtsPNo</td>\n",
+       "      <td>Pangarap</td>\n",
+       "      <td>Barbie's Cradle</td>\n",
+       "      <td>Minsan pa Nang ako'y napalingon Hindi ko alam ...</td>\n",
+       "      <td>41</td>\n",
+       "      <td>2001-01-01</td>\n",
+       "      <td>Pinoy Classic Rock</td>\n",
+       "      <td>rock</td>\n",
+       "      <td>classic rock</td>\n",
+       "      <td>0.682</td>\n",
+       "      <td>0.401</td>\n",
+       "      <td>2</td>\n",
+       "      <td>-10.068</td>\n",
+       "      <td>1</td>\n",
+       "      <td>0.0236</td>\n",
+       "      <td>0.27900</td>\n",
+       "      <td>0.01170</td>\n",
+       "      <td>0.0887</td>\n",
+       "      <td>0.566</td>\n",
+       "      <td>97.091</td>\n",
+       "      <td>235440</td>\n",
+       "      <td>tl</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>1</th>\n",
+       "      <td>004s3t0ONYlzxII9PLgU6z</td>\n",
+       "      <td>I Feel Alive</td>\n",
+       "      <td>Steady Rollin</td>\n",
+       "      <td>The trees, are singing in the wind The sky blu...</td>\n",
+       "      <td>28</td>\n",
+       "      <td>2017-11-21</td>\n",
+       "      <td>Hard Rock Workout</td>\n",
+       "      <td>rock</td>\n",
+       "      <td>hard rock</td>\n",
+       "      <td>0.303</td>\n",
+       "      <td>0.880</td>\n",
+       "      <td>9</td>\n",
+       "      <td>-4.739</td>\n",
+       "      <td>1</td>\n",
+       "      <td>0.0442</td>\n",
+       "      <td>0.01170</td>\n",
+       "      <td>0.00994</td>\n",
+       "      <td>0.3470</td>\n",
+       "      <td>0.404</td>\n",
+       "      <td>135.225</td>\n",
+       "      <td>373512</td>\n",
+       "      <td>en</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>2</th>\n",
+       "      <td>00chLpzhgVjxs1zKC9UScL</td>\n",
+       "      <td>Poison</td>\n",
+       "      <td>Bell Biv DeVoe</td>\n",
+       "      <td>NA Yeah, Spyderman and Freeze in full effect U...</td>\n",
+       "      <td>0</td>\n",
+       "      <td>2005-01-01</td>\n",
+       "      <td>Back in the day - R&amp;B, New Jack Swing, Swingbe...</td>\n",
+       "      <td>r&amp;b</td>\n",
+       "      <td>new jack swing</td>\n",
+       "      <td>0.845</td>\n",
+       "      <td>0.652</td>\n",
+       "      <td>6</td>\n",
+       "      <td>-7.504</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0.2160</td>\n",
+       "      <td>0.00432</td>\n",
+       "      <td>0.00723</td>\n",
+       "      <td>0.4890</td>\n",
+       "      <td>0.650</td>\n",
+       "      <td>111.904</td>\n",
+       "      <td>262467</td>\n",
+       "      <td>en</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3</th>\n",
+       "      <td>00cqd6ZsSkLZqGMlQCR0Zo</td>\n",
+       "      <td>Baby It's Cold Outside (feat. Christina Aguilera)</td>\n",
+       "      <td>CeeLo Green</td>\n",
+       "      <td>I really can't stay Baby it's cold outside I'v...</td>\n",
+       "      <td>41</td>\n",
+       "      <td>2012-10-29</td>\n",
+       "      <td>Christmas Soul</td>\n",
+       "      <td>r&amp;b</td>\n",
+       "      <td>neo soul</td>\n",
+       "      <td>0.425</td>\n",
+       "      <td>0.378</td>\n",
+       "      <td>5</td>\n",
+       "      <td>-5.819</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0.0341</td>\n",
+       "      <td>0.68900</td>\n",
+       "      <td>0.00000</td>\n",
+       "      <td>0.0664</td>\n",
+       "      <td>0.405</td>\n",
+       "      <td>118.593</td>\n",
+       "      <td>243067</td>\n",
+       "      <td>en</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>4</th>\n",
+       "      <td>00emjlCv9azBN0fzuuyLqy</td>\n",
+       "      <td>Dumb Litty</td>\n",
+       "      <td>KARD</td>\n",
+       "      <td>Get up out of my business You don't keep me fr...</td>\n",
+       "      <td>65</td>\n",
+       "      <td>2019-09-22</td>\n",
+       "      <td>K-Party Dance Mix</td>\n",
+       "      <td>pop</td>\n",
+       "      <td>dance pop</td>\n",
+       "      <td>0.760</td>\n",
+       "      <td>0.887</td>\n",
+       "      <td>9</td>\n",
+       "      <td>-1.993</td>\n",
+       "      <td>1</td>\n",
+       "      <td>0.0409</td>\n",
+       "      <td>0.03700</td>\n",
+       "      <td>0.00000</td>\n",
+       "      <td>0.1380</td>\n",
+       "      <td>0.240</td>\n",
+       "      <td>130.018</td>\n",
+       "      <td>193160</td>\n",
+       "      <td>en</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "                       id  ... language\n",
+       "0  0017A6SJgTbfQVU2EtsPNo  ...       tl\n",
+       "1  004s3t0ONYlzxII9PLgU6z  ...       en\n",
+       "2  00chLpzhgVjxs1zKC9UScL  ...       en\n",
+       "3  00cqd6ZsSkLZqGMlQCR0Zo  ...       en\n",
+       "4  00emjlCv9azBN0fzuuyLqy  ...       en\n",
+       "\n",
+       "[5 rows x 22 columns]"
+      ]
+     },
+     "metadata": {
+      "tags": []
+     },
+     "execution_count": 6
+    }
+   ]
+  },
+  {
+   "cell_type": "code",
+   "metadata": {
+    "colab": {
+     "base_uri": "https://localhost:8080/",
+     "height": 157
+    },
+    "id": "qpCxKN7LcrPK",
+    "outputId": "1a04321d-6a23-4adc-8e21-f94d1d59f390"
+   },
+   "source": [
+    "# Peak a lyrics value\n",
+    "songs.lyrics[2]"
+   ],
+   "execution_count": null,
+   "outputs": [
+    {
+     "output_type": "execute_result",
+     "data": {
+      "application/vnd.google.colaboratory.intrinsic+json": {
+       "type": "string"
+      },
+      "text/plain": [
+       "'NA Yeah, Spyderman and Freeze in full effect Uh-huh You ready, Ron? I\\'m ready You ready, Biv? I\\'m ready, Slick, are you? Oh, yeah, break it down NA Girl, I, must (warn you) I sense something strange in my mind Situation is (serious) Let\\'s cure it cause we\\'re running out of time It\\'s oh, so (beautiful) Relationships they seem from the start It\\'s all so (deadly) When love is not together from the heart It\\'s drivin\\' me out of my mind! That\\'s why it\\'s HARD for me to find Can\\'t get it out of my head! Miss her, kiss her, love her(Wrong move you\\'re dead!) That girl is (poison)...Never trust a big butt and smile That girl is (poison)..(\"POISON!!\") NA (-caution) Before I start to meet a fly girl, you know? Cause in some (portions) You\\'ll think she\\'s the best thing in the world She\\'s so - (fly) She\\'ll drive you right out of your mind And steal your heart when you\\'re blind Beware she\\'s schemin\\', she\\'ll make you think you\\'re dreamin\\' YOU\\'LL fall in love and you\\'ll be screamin\\', demon, HOO.. Poison, deadly, movin\\' in slow Lookin for a mellow fellow like DeVoe Gettin paid, laid, so better lay low Schemin on house, money, and the whole show The low pro ho she\\'ll be cut like an aaa-FRO See what you\\'re sayin\\', huh, she\\'s a winner to you But I know she\\'s a loser (How do you know?) Me and the crew used to do her! \"POISON!\" \"POISON!\" \"POISON!\" \"POISON!\" \"POISON!\" \"POISON!\" \"POISON!\" \"POISON! \"POISON!\" \"POISON!\" \"POISON!\" \"POISON! \"POISON!\" \"POISON!\" \"POISON!\" \"POISON! I was at the park, shake, breakin and takin \\'em all And that night, I played the wall Checkin\\' out the fellas, the highs and lows Keepin\\' one eye open, still clockin\\' the hoes There was one particular girl that stood out from the rest Poison as can be, the high power chest Michael Biv here and I\\'m runnin\\' the show Bell, Biv DeVoe ..now you know! Yo, Slick, blow.. It\\'s drivin\\' me out of my mind! That\\'s why it\\'s HARD for me to find Can\\'t get it out of my head! Miss her, kiss her, love her(Wrong move you\\'re dead!) That girl is (poison)...Never trust a big butt and smile That girl is (poison)..(\"POISON!!\") Yo\\' fellas, that was my end of.. You know what I\\'m sayin\\', Mike? Yeah, B.B.D. in full effect Yo\\', wassup to Ralph T and Johnny G And I can\\'t forget about my boy, B. Brown And the whole NE crew Poison.. NA'"
+      ]
+     },
+     "metadata": {
+      "tags": []
+     },
+     "execution_count": 7
+    }
+   ]
+  },
+  {
+   "cell_type": "code",
+   "metadata": {
+    "colab": {
+     "base_uri": "https://localhost:8080/"
+    },
+    "id": "Y3-afaV2Noz2",
+    "outputId": "acce7f42-b6c9-4278-a75c-27cb4eab93f1"
+   },
+   "source": [
+    "# Look at values in lyrics\n",
+    "songs['lyrics'].value_counts()"
+   ],
+   "execution_count": null,
+   "outputs": [
+    {
+     "output_type": "execute_result",
+     "data": {
+      "text/plain": [
+       "Lyrics for this song have yet to be released. Please check back once the song has been releasedn",
n",
+       "Instrumentaln",
+       "NA Si el ritmo te lleva a mover la cabeza Ya empezamos como es Mi música no discrimina a nadie Así que vamos a romper Toda mi gente se mueve Mira el ritmo cómo los tiene Hago música que entretiene El mundo nos quiere, nos quiere Me quiere a mí Toda mi gente se mueve Mira el ritmo cómo los tiene Hago música que entretiene Mi música los tiene fuerte bailando Y se baila así Tamo' rompiendo la discoteca La fiesta no para, apenas comienza C'est comme-ci, c'est comme ça Ma chèrie, la-la-la-la-la Francia, Colombia Me gusta (Freeze) J Balvin, Willy William Le gusta (Freeze) Los DJ's no mienten, le gusta a mi gente Y eso se fue mundial (Freeze) No le bajamos, más nunca paramos Es otro palo y ¡blam! ¿Y dónde está mi gente? Mais fais bouger la tête ¿Y dónde está mi gente? Say yeah, yeah, yeah Un, dos, tres, ¡leggo! (Ay di que sí) Esquina a esquina, de ahí no' vamo' El mundo es grande pero lo tengo en mi' manos Estoy muy duro, sí, ok, ahí vamos Y con el tiempo nos seguimos elevando Que seguimos rompiendo aquí Esta fiesta no tiene fin Botellas para arriba, sí Los tengo bailando, rompiendo y yo sigo aquí Que seguimos rompiendo aquí Esta fiesta no tiene fin Botellas para arriba, sí Los tengo bailando, rompiendo y yo sigo aquí ¿Y dónde está mi gente? Mais fais bouger la tête ¿Y dónde está mi gente? Say yeah, yeah, yeah Un, dos, tres, ¡leggo! (Ay di que sí) Worldwide Willy William J Balvin, man Uh-huh Uh-huh Uh-huh Uh-huhn",
+       "NA Yeah, Spyderman and Freeze in full effect Uh-huh You ready, Ron? I'm ready You ready, Biv? I'm ready, Slick, are you? Oh, yeah, break it down NA Girl, I, must (warn you) I sense something strange in my mind Situation is (serious) Let's cure it cause we're running out of time It's oh, so (beautiful) Relationships they seem from the start It's all so (deadly) When love is not together from the heart It's drivin' me out of my mind! That's why it's HARD for me to find Can't get it out of my head! Miss her, kiss her, love her(Wrong move you're dead!) That girl is (poison)...Never trust a big butt and smile That girl is (poison)..(\"POISON!!\") NA (-caution) Before I start to meet a fly girl, you know? Cause in some (portions) You'll think she's the best thing in the world She's so - (fly) She'll drive you right out of your mind And steal your heart when you're blind Beware she's schemin', she'll make you think you're dreamin' YOU'LL fall in love and you'll be screamin', demon, HOO.. Poison, deadly, movin' in slow Lookin for a mellow fellow like DeVoe Gettin paid, laid, so better lay low Schemin on house, money, and the whole show The low pro ho she'll be cut like an aaa-FRO See what you're sayin', huh, she's a winner to you But I know she's a loser (How do you know?) Me and the crew used to do her! \"POISON!\" \"POISON!\" \"POISON!\" \"POISON!\" \"POISON!\" \"POISON!\" \"POISON!\" \"POISON! \"POISON!\" \"POISON!\" \"POISON!\" \"POISON! \"POISON!\" \"POISON!\" \"POISON!\" \"POISON! I was at the park, shake, breakin and takin 'em all And that night, I played the wall Checkin' out the fellas, the highs and lows Keepin' one eye open, still clockin' the hoes There was one particular girl that stood out from the rest Poison as can be, the high power chest Michael Biv here and I'm runnin' the show Bell, Biv DeVoe ..now you know! Yo, Slick, blow.. It's drivin' me out of my mind! That's why it's HARD for me to find Can't get it out of my head! Miss her, kiss her, love her(Wrong move you're dead!) That girl is (poison)...Never trust a big butt and smile That girl is (poison)..(\"POISON!!\") Yo' fellas, that was my end of.. You know what I'm sayin', Mike? Yeah, B.B.D. in full effect Yo', wassup to Ralph T and Johnny G And I can't forget about my boy, B. Brown And the whole NE crew Poison.. NA     7\n",
n",
+       "I've been smoking on the peace pipe I've been wondering just what would peace be like I've been staring into headlights Swallow me whole, finding my peace of mind I'm just trying to seize the moment Trying to love the little things, even if they're hard to love A monument to love unspoken Carved into stone, “Unwilling to come undone” It feels good to be running from the devil Another breath and I'm up another level It feels good to be up above the clouds It feels good for the first time in a long time now I remember back in Oakland I was lying there in rapture on the bathroom floor Moving hotel to hotel Out on the road, no idea really what's in store Light it up just like a flashlight Let it shine, let it rise just like a foreign sun Turn it over and it's capsized It's finally done, the battle's lost, yet I feel I've won It feels good to be running from the devil Another breath and I'm up another level It feels good to be up above the clouds It feels good for the first time in a long time now It feels good for the first time in a long time now It feels good to be me I'm high, staring at the ceiling Sending my love, what a wonderful feeling What comes next, I see a light I'm along for the ride as I'm taking flight I'm high, staring at the ceiling Sending my love, what a wonderful feeling What comes next, I see a light I'm along for the ride as I'm taking flight It feels good to be running from the devil Another breath and I'm up another level It feels good to be up above the clouds It feels good for the first time in a long time now It feels good for the first time in a long time to be me It feels good for the first time in a while I'm free I'm high, staring at the ceiling Sending my love, what a wonderful feeling What comes next, I see a light I'm along for the ride as I'm taking flight                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           1\n",
+       "Golden years, gold, whop, whop, whop Golden years, gold, whop, whop, whop Golden years, gold, whop, whop, whop Don't let me hear you say Life's taking you nowhere, angel(Come get up, my baby) Look at that sky, life's begun Nights are warm and the days are young(Come get up, my baby) There's my baby, lost that's all Once I'm begging you save her little soul Golden years, gold, whop, whop, whop Come get up, my baby Last night they loved you Opening doors and pulling some strings, angel(Come get up, my baby) In walked luck and you looked in time Never look back, walk tall, act fine(Come get up, my baby) I'll stick with you baby for a thousand years Nothing's gonna touch you in these golden years Golden years Golden years, gold, whop, whop, whop Come get up, my baby Some of these days, and it won't be long Gonna drive back down where you once belonged In the back of a dream car twenty foot long(Come get up, my baby) Don't cry my sweet, don't break my heart Doing all right, but you gotta get smart Wish upon, wish upon, day upon day I believe, oh Lord, I believe all the way(Come get up, my baby) Run for the shadows, run for the shadows Run for the shadows in these golden years There's my baby, lost that's all Once I'm begging you save her little soul Golden years, gold, whop, whop, whop Come get up, my baby Don't let me hear you say life's taking you nowhere, angel(Come get up, my baby) Run for the shadows, run for the shadows Run for the shadows in these golden years I'll stick with you baby for a thousand years Nothing's gonna touch you in these golden years Golden years Golden years, gold, whop, whop, whop Golden years, gold, whop, whop, whop Golden years, gold, whop, whop, whop Golden years, gold, whop, whop, whop Golden years, gold, whop, whop, whop Golden years, gold, whop, whop, whop Golden years, gold, whop, whop, whop Golden years, gold, whop, whop, whop Golden years, gold, whop, whop, whop Golden years, gold, whop, whop, whop Golden years, gold, whop, whop, whop                                                                                                                                                                                                                                                                                                    1\n",
+       "I ain't no angel Don't got no halo I cut off my wings Made my momma scream Woah I'm your darkest dream They call me devil My heart is empty They call me devil Just try and tempt me I steal your soul I'll eat you whole Ain't no other way They call me devil And you should be afraid I tell you lies I'll crawl inside your mind Grab hold of your eyes I will make you mine Oh And I'm gonna take my time (yeah) They call me devil My heart is empty They call me devil Just try and tempt me I steal your soul I'll eat you whole Ain't no other way They call me devil And you should be afraid I'm comin' I'm comin' So start runnin' start runnin' Yeah I'm comin' I'm comin' So start runnin' start runnin' NA They call me devil My heart is empty They call me devil Just try and tempt me I steal your soul I'll eat you whole Ain't no other way They call me devil And you should be afraidn",
+       "One, two, three, four Hands on your body, I'm grabbin' your ass Enjoyin' the moment 'cause life move too fast I'm lookin' forward, ignorin' the past These are the times that we'll laugh lookin' back I'm gettin' lucky like coins in the well Goodbye to my haters, I'm wishin' you well This is my year, man, if you couldn't tell This is our life and we livin' it well Late nights in the city, causin' hell Burn this bitch into the ground, oh well If all we got tonight, let's do this right Let's do this right Let's go to (Paradise) This shit feel like Friday nights This shit make me feel alive I feel like we in paradise, paradise (Paradise) Don't know if it's the drink I poured But I swear I've never loved you more When you right here, I come alive One more hit and we can fly This shit feel like (Paradise) I'm feelin' it, my head's where the ceilin' is (Oh yeah) This energy turns nights into memories (Oh yeah) Count up the bands, you've been workin' all summer Ex didn't know what he had, what a bummer Insecure people turn to insecure lovers Well, my drink is almost out and I'm about to pour another Just let it out The night has just begun, we on a level now If I get too fucked up, promise you'll hold me down Yeah, this that shit you can't deny This that shit you feel inside This our life, our time, we livin' well Late nights in the city, causin' hell Burn this bitch into the ground, oh well If all we got tonight, let's do this right Let's do this right Let's go to (Paradise) This shit feel like Friday nights (Ooh, it do) This shit make me feel alive (Baby) I feel like we in paradise, paradise (Paradise, oh yeah) Don't know if it's the drink I poured (Poured) But I swear I've never loved you more (Loved you more) When you right here, I come alive One more hit and we can fly This shit feel like (Paradise)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  1\n",
+       "Waking up to no meaning, I stare at the ceiling Count the imperfections that surround my being Can tell how I'm feeling And it hurts more when you ask There's a hole in my head and heart But I'm a long way from the start There's a hole in my head and heart But I'm a long way from Back when I couldn't move, was frozen I told myself it's all good It's only chemical (Oh-woah) It's only chemical (Oh-woah) It's only chemical I'm too shy to speak up Guess I have my reasons for telling little lies About those around me and what I could be It's eating me alive There's a hole in my head and heart But I'm a long way from the start There's a hole in my head and heart But I'm a long way from Back when I couldn't move, was frozen I told myself it's all good It's only chemical (It's only chemical, it's only chemical) I want to scream, but it won't help I've created my own hell And It's only chemical (Oh-woah) It's only chemical (Oh-woah) It's only chemical I find comfort when they say you can't Sit and count the days until it ends There's still times I want to break everything I've ever made But I've come a long way from I've come a long way from Back when I couldn't move, was frozen I told myself it's all good It's only chemical (It's only chemical, it's only chemical) I want to scream but it won't help I've created my own hell And it's only chemical It's only chemical (Oh-woah) It's only chemical (Oh-woah) It's only chemical  (Oh-woah) It's only chemical (Oh-woah)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                1\n",
+       "Name: lyrics, Length: 15977, dtype: int64"
+      ]
+     },
+     "metadata": {
+      "tags": []
+     },
+     "execution_count": 9
+    }
+   ]
+  },
+  {
+   "cell_type": "code",
+   "metadata": {
+    "colab": {
+     "base_uri": "https://localhost:8080/"
+    },
+    "id": "0vr6m7D1ERtK",
+    "outputId": "1c082a46-dc86-4e8e-b0a0-c9ea45957740"
+   },
+   "source": [
+    "# Remove rows that have no lyrics or \"Instrumental\"\n",
+    "songs = songs[songs['lyrics'].notna()]\n",
+    "no_lyrics_yet = songs[songs['lyrics'] == 'Lyrics for this song have yet to be released. Please check back once the song has been released.'].index\n",
+    "songs.drop(no_lyrics_yet, inplace=True)\n",
+    "no_lyrics_NA = songs[songs['lyrics'] == 'NA NA'].index\n",
+    "songs.drop(no_lyrics_NA, inplace=True)\n",
+    "print(songs.shape)"
+   ],
+   "execution_count": null,
+   "outputs": [
+    {
+     "output_type": "stream",
+     "text": [
+      "(18127, 22)\n"
+     ],
+     "name": "stdout"
+    }
+   ]
+  },
+  {
+   "cell_type": "code",
+   "metadata": {
+    "id": "k1kSvzdmmgOS"
+   },
+   "source": [
+    "# Create function to tokenize a list of words\n",
+    "def tokens(text):\n",
+    "  '''\n",
+    "  Parses a string into a list of sementic units (words)0\n",
+    "\n",
+    "  Args:\n",
+    "    text (str): A string of values to be tokenized\n",
+    "\n",
+    "  Returns:\n",
+    "    list of tokens\n",
+    "  '''\n",
+    "\n",
+    "  # remove all non-alpha numeric characters\n",
+    "  tokens = re.sub('[^a-z A-Z 0-9]', '', text)\n",
+    "  \n",
+    "  # Lowercase all and split on spaces\n",
+    "  tokens = tokens.lower().split()\n",
+    "\n",
+    "  return tokens"
+   ],
+   "execution_count": null,
+   "outputs": []
+  },
+  {
+   "cell_type": "code",
+   "metadata": {
+    "colab": {
+     "base_uri": "https://localhost:8080/",
+     "height": 202
+    },
+    "id": "em4ntYoeCS-o",
+    "outputId": "4c4a9ad0-a1a1-414e-f147-d747fcbbbcc1"
+   },
+   "source": [
+    "# Tokenize the lyrics\n",
+    "songs['tokens'] = songs['lyrics'].apply(tokens)\n",
+    "\n",
+    "# Compare the lyrics to tokens\n",
+    "songs[['lyrics', 'tokens']][:5]"
+   ],
+   "execution_count": null,
+   "outputs": [
+    {
+     "output_type": "execute_result",
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>lyrics</th>\n",
+       "      <th>tokens</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>0</th>\n",
+       "      <td>Minsan pa Nang ako'y napalingon Hindi ko alam ...</td>\n",
+       "      <td>[minsan, pa, nang, akoy, napalingon, hindi, ko...</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>1</th>\n",
+       "      <td>The trees, are singing in the wind The sky blu...</td>\n",
+       "      <td>[the, trees, are, singing, in, the, wind, the,...</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>2</th>\n",
+       "      <td>NA Yeah, Spyderman and Freeze in full effect U...</td>\n",
+       "      <td>[na, yeah, spyderman, and, freeze, in, full, e...</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3</th>\n",
+       "      <td>I really can't stay Baby it's cold outside I'v...</td>\n",
+       "      <td>[i, really, cant, stay, baby, its, cold, outsi...</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>4</th>\n",
+       "      <td>Get up out of my business You don't keep me fr...</td>\n",
+       "      <td>[get, up, out, of, my, business, you, dont, ke...</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "                                              lyrics                                             tokens\n",
+       "0  Minsan pa Nang ako'y napalingon Hindi ko alam ...  [minsan, pa, nang, akoy, napalingon, hindi, ko...\n",
+       "1  The trees, are singing in the wind The sky blu...  [the, trees, are, singing, in, the, wind, the,...\n",
+       "2  NA Yeah, Spyderman and Freeze in full effect U...  [na, yeah, spyderman, and, freeze, in, full, e...\n",
+       "3  I really can't stay Baby it's cold outside I'v...  [i, really, cant, stay, baby, its, cold, outsi...\n",
+       "4  Get up out of my business You don't keep me fr...  [get, up, out, of, my, business, you, dont, ke..."
+      ]
+     },
+     "metadata": {
+      "tags": []
+     },
+     "execution_count": 12
+    }
+   ]
+  },
+  {
+   "cell_type": "code",
+   "metadata": {
+    "colab": {
+     "base_uri": "https://localhost:8080/",
+     "height": 540
+    },
+    "id": "UQzpJCugS_tm",
+    "outputId": "5cc62c36-532a-4d67-90ec-ac9c6fb4d19b"
+   },
+   "source": [
+    "# Graph the count of songs per genre\n",
+    "plt.figure(figsize=(12,8), facecolor='white')\n",
+    "ax = sns.countplot(x='genre', data=songs)\n",
+    "plt.title('Count of Songs in each Genre', fontdict={'size':20})\n",
+    "plt.xlabel('\\nGenre of Song', fontdict={'size':16})\n",
+    "plt.ylabel('Frequency in the Dataset\\n', fontdict={'size':16});"
+   ],
+   "execution_count": null,
+   "outputs": [
+    {
+     "output_type": "display_data",
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 864x576 with 1 Axes>"
+      ]
+     },
+     "metadata": {
+      "tags": []
+     }
+    }
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "RghfoRS53MYk"
+   },
+   "source": [
+    "This dataset (spotify_songs.csv) is not diverse in genres but has lyrics and is large enough to train a good model on."
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "JqEyO0Cj3m-G"
+   },
+   "source": [
+    "This dataset (billboard-lyrics-spotify.csv) has lyrics and appears more deverse but no specified genre and is a small dataset."
+   ]
+  },
+  {
+   "cell_type": "code",
+   "metadata": {
+    "colab": {
+     "base_uri": "https://localhost:8080/",
+     "height": 378
+    },
+    "id": "59bdjRbky2oB",
+    "outputId": "ec281087-aff8-4edf-f1c7-589e93719032"
+   },
+   "source": [
+    "# Look at another dataset and preform EDA\n",
+    "most_pop_songs = pd.read_csv('https://raw.githubusercontent.com/Spotify-DSPT-158/Build-Week-Spotify/main/most_popular_spotify_songs.csv')\n",
+    "print(most_pop_songs.shape)\n",
+    "most_pop_songs.head()"
+   ],
+   "execution_count": null,
+   "outputs": [
+    {
+     "output_type": "stream",
+     "text": [
+      "(75022, 18)\n"
+     ],
+     "name": "stdout"
+    },
+    {
+     "output_type": "execute_result",
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>genre</th>\n",
+       "      <th>artist_name</th>\n",
+       "      <th>track_name</th>\n",
+       "      <th>track_id</th>\n",
+       "      <th>popularity</th>\n",
+       "      <th>acousticness</th>\n",
+       "      <th>danceability</th>\n",
+       "      <th>duration_ms</th>\n",
+       "      <th>energy</th>\n",
+       "      <th>instrumentalness</th>\n",
+       "      <th>key</th>\n",
+       "      <th>liveness</th>\n",
+       "      <th>loudness</th>\n",
+       "      <th>mode</th>\n",
+       "      <th>speechiness</th>\n",
+       "      <th>tempo</th>\n",
+       "      <th>time_signature</th>\n",
+       "      <th>valence</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>0</th>\n",
+       "      <td>R&amp;B</td>\n",
+       "      <td>Mary J. Blige</td>\n",
+       "      <td>Be Without You - Kendu Mix</td>\n",
+       "      <td>2YegxR5As7BeQuVp2U6pek</td>\n",
+       "      <td>65</td>\n",
+       "      <td>0.0830</td>\n",
+       "      <td>0.724</td>\n",
+       "      <td>246333</td>\n",
+       "      <td>0.689</td>\n",
+       "      <td>0.000000</td>\n",
+       "      <td>D</td>\n",
+       "      <td>0.3040</td>\n",
+       "      <td>-5.922</td>\n",
+       "      <td>Minor</td>\n",
+       "      <td>0.1350</td>\n",
+       "      <td>146.496</td>\n",
+       "      <td>4/4</td>\n",
+       "      <td>0.6930</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>1</th>\n",
+       "      <td>R&amp;B</td>\n",
+       "      <td>Rihanna</td>\n",
+       "      <td>Desperado</td>\n",
+       "      <td>6KFaHC9G178beAp7P0Vi5S</td>\n",
+       "      <td>63</td>\n",
+       "      <td>0.3230</td>\n",
+       "      <td>0.685</td>\n",
+       "      <td>186467</td>\n",
+       "      <td>0.610</td>\n",
+       "      <td>0.000000</td>\n",
+       "      <td>C</td>\n",
+       "      <td>0.1020</td>\n",
+       "      <td>-5.221</td>\n",
+       "      <td>Minor</td>\n",
+       "      <td>0.0439</td>\n",
+       "      <td>94.384</td>\n",
+       "      <td>3/4</td>\n",
+       "      <td>0.3230</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>2</th>\n",
+       "      <td>R&amp;B</td>\n",
+       "      <td>Yung Bleu</td>\n",
+       "      <td>Ice On My Baby (feat. Kevin Gates) - Remix</td>\n",
+       "      <td>6muW8cSjJ3rusKJ0vH5olw</td>\n",
+       "      <td>62</td>\n",
+       "      <td>0.0675</td>\n",
+       "      <td>0.762</td>\n",
+       "      <td>199520</td>\n",
+       "      <td>0.520</td>\n",
+       "      <td>0.000004</td>\n",
+       "      <td>F</td>\n",
+       "      <td>0.1140</td>\n",
+       "      <td>-5.237</td>\n",
+       "      <td>Minor</td>\n",
+       "      <td>0.0959</td>\n",
+       "      <td>75.047</td>\n",
+       "      <td>4/4</td>\n",
+       "      <td>0.0862</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3</th>\n",
+       "      <td>R&amp;B</td>\n",
+       "      <td>Surfaces</td>\n",
+       "      <td>Heaven Falls / Fall on Me</td>\n",
+       "      <td>7yHqOZfsXYlicyoMt62yC6</td>\n",
+       "      <td>61</td>\n",
+       "      <td>0.3600</td>\n",
+       "      <td>0.563</td>\n",
+       "      <td>240597</td>\n",
+       "      <td>0.366</td>\n",
+       "      <td>0.002430</td>\n",
+       "      <td>B</td>\n",
+       "      <td>0.0955</td>\n",
+       "      <td>-6.896</td>\n",
+       "      <td>Minor</td>\n",
+       "      <td>0.1210</td>\n",
+       "      <td>85.352</td>\n",
+       "      <td>4/4</td>\n",
+       "      <td>0.7680</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>4</th>\n",
+       "      <td>R&amp;B</td>\n",
+       "      <td>Olivia O'Brien</td>\n",
+       "      <td>Love Myself</td>\n",
+       "      <td>4XzgjxGKqULifVf7mnDIQK</td>\n",
+       "      <td>68</td>\n",
+       "      <td>0.5960</td>\n",
+       "      <td>0.653</td>\n",
+       "      <td>213947</td>\n",
+       "      <td>0.621</td>\n",
+       "      <td>0.000000</td>\n",
+       "      <td>B</td>\n",
+       "      <td>0.0811</td>\n",
+       "      <td>-5.721</td>\n",
+       "      <td>Minor</td>\n",
+       "      <td>0.0409</td>\n",
+       "      <td>100.006</td>\n",
+       "      <td>4/4</td>\n",
+       "      <td>0.4660</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "  genre     artist_name  ... time_signature valence\n",
+       "0   R&B   Mary J. Blige  ...            4/4  0.6930\n",
+       "1   R&B         Rihanna  ...            3/4  0.3230\n",
+       "2   R&B       Yung Bleu  ...            4/4  0.0862\n",
+       "3   R&B        Surfaces  ...            4/4  0.7680\n",
+       "4   R&B  Olivia O'Brien  ...            4/4  0.4660\n",
+       "\n",
+       "[5 rows x 18 columns]"
+      ]
+     },
+     "metadata": {
+      "tags": []
+     },
+     "execution_count": 14
+    }
+   ]
+  },
+  {
+   "cell_type": "code",
+   "metadata": {
+    "colab": {
+     "base_uri": "https://localhost:8080/"
+    },
+    "id": "703hAtJu0e_c",
+    "outputId": "0da5e09c-e37a-43d7-9db1-08325ae8966c"
+   },
+   "source": [
+    "most_pop_songs.columns"
+   ],
+   "execution_count": null,
+   "outputs": [
+    {
+     "output_type": "execute_result",
+     "data": {
+      "text/plain": [
+       "Index(['genre', 'artist_name', 'track_name', 'track_id', 'popularity',\n",
+       "       'acousticness', 'danceability', 'duration_ms', 'energy',\n",
+       "       'instrumentalness', 'key', 'liveness', 'loudness', 'mode',\n",
+       "       'speechiness', 'tempo', 'time_signature', 'valence'],\n",
+       "      dtype='object')"
+      ]
+     },
+     "metadata": {
+      "tags": []
+     },
+     "execution_count": 15
+    }
+   ]
+  },
+  {
+   "cell_type": "code",
+   "metadata": {
+    "colab": {
+     "base_uri": "https://localhost:8080/",
+     "height": 628
+    },
+    "id": "OJnvylBJ0lji",
+    "outputId": "5859b3ae-c32c-4322-d353-88f56371acbc"
+   },
+   "source": [
+    "plt.figure(figsize=(12,8), facecolor='white')\n",
+    "ax = sns.countplot(x='genre', data=most_pop_songs)\n",
+    "plt.title('Count of Songs in each Genre', fontdict={'size':20})\n",
+    "plt.xlabel('\\nGenre of Song', fontdict={'size':16})\n",
+    "plt.xticks(rotation=90, size=12)\n",
+    "plt.ylabel('Frequency in the Dataset\\n', fontdict={'size':16})\n",
+    "plt.yticks(np.arange(0, 10000, 500), size=12)\n",
+    "plt.grid();"
+   ],
+   "execution_count": null,
+   "outputs": [
+    {
+     "output_type": "display_data",
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 864x576 with 1 Axes>"
+      ]
+     },
+     "metadata": {
+      "tags": []
+     }
+    }
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "f7b-Aeme2nid"
+   },
+   "source": [
+    "This dataset (most_popular_spotify_songs.csv) is more diverse but half as many observations as first dataset (spotify_songs.csv) and no lyrics."
+   ]
+  },
+  {
+   "cell_type": "code",
+   "metadata": {
+    "id": "eKIhayUl0teJ",
+    "colab": {
+     "base_uri": "https://localhost:8080/",
+     "height": 314
+    },
+    "outputId": "dafce712-8f94-41b6-a5dd-931bc929b20a"
+   },
+   "source": [
+    "most_pop_songs.describe()"
+   ],
+   "execution_count": null,
+   "outputs": [
+    {
+     "output_type": "execute_result",
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>popularity</th>\n",
+       "      <th>acousticness</th>\n",
+       "      <th>danceability</th>\n",
+       "      <th>duration_ms</th>\n",
+       "      <th>energy</th>\n",
+       "      <th>instrumentalness</th>\n",
+       "      <th>liveness</th>\n",
+       "      <th>loudness</th>\n",
+       "      <th>speechiness</th>\n",
+       "      <th>tempo</th>\n",
+       "      <th>valence</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>count</th>\n",
+       "      <td>75022.000000</td>\n",
+       "      <td>75022.000000</td>\n",
+       "      <td>75022.000000</td>\n",
+       "      <td>7.502200e+04</td>\n",
+       "      <td>75022.000000</td>\n",
+       "      <td>75022.000000</td>\n",
+       "      <td>75022.000000</td>\n",
+       "      <td>75022.000000</td>\n",
+       "      <td>75022.000000</td>\n",
+       "      <td>75022.000000</td>\n",
+       "      <td>75022.000000</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>mean</th>\n",
+       "      <td>52.326757</td>\n",
+       "      <td>0.286114</td>\n",
+       "      <td>0.590045</td>\n",
+       "      <td>2.338447e+05</td>\n",
+       "      <td>0.609805</td>\n",
+       "      <td>0.098790</td>\n",
+       "      <td>0.188244</td>\n",
+       "      <td>-8.127492</td>\n",
+       "      <td>0.095000</td>\n",
+       "      <td>119.785346</td>\n",
+       "      <td>0.469266</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>std</th>\n",
+       "      <td>8.930855</td>\n",
+       "      <td>0.305384</td>\n",
+       "      <td>0.168050</td>\n",
+       "      <td>8.315542e+04</td>\n",
+       "      <td>0.230312</td>\n",
+       "      <td>0.249359</td>\n",
+       "      <td>0.158109</td>\n",
+       "      <td>4.636775</td>\n",
+       "      <td>0.108138</td>\n",
+       "      <td>29.795567</td>\n",
+       "      <td>0.244772</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>min</th>\n",
+       "      <td>41.000000</td>\n",
+       "      <td>0.000001</td>\n",
+       "      <td>0.058100</td>\n",
+       "      <td>3.009300e+04</td>\n",
+       "      <td>0.000234</td>\n",
+       "      <td>0.000000</td>\n",
+       "      <td>0.009670</td>\n",
+       "      <td>-47.046000</td>\n",
+       "      <td>0.022200</td>\n",
+       "      <td>31.689000</td>\n",
+       "      <td>0.017600</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>25%</th>\n",
+       "      <td>45.000000</td>\n",
+       "      <td>0.029300</td>\n",
+       "      <td>0.483000</td>\n",
+       "      <td>1.910228e+05</td>\n",
+       "      <td>0.460250</td>\n",
+       "      <td>0.000000</td>\n",
+       "      <td>0.096200</td>\n",
+       "      <td>-9.682750</td>\n",
+       "      <td>0.035600</td>\n",
+       "      <td>95.431750</td>\n",
+       "      <td>0.274000</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>50%</th>\n",
+       "      <td>50.000000</td>\n",
+       "      <td>0.158000</td>\n",
+       "      <td>0.602000</td>\n",
+       "      <td>2.213730e+05</td>\n",
+       "      <td>0.638000</td>\n",
+       "      <td>0.000015</td>\n",
+       "      <td>0.123000</td>\n",
+       "      <td>-6.979000</td>\n",
+       "      <td>0.049700</td>\n",
+       "      <td>119.048000</td>\n",
+       "      <td>0.459000</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>75%</th>\n",
+       "      <td>58.000000</td>\n",
+       "      <td>0.485000</td>\n",
+       "      <td>0.713000</td>\n",
+       "      <td>2.604368e+05</td>\n",
+       "      <td>0.792000</td>\n",
+       "      <td>0.005727</td>\n",
+       "      <td>0.228000</td>\n",
+       "      <td>-5.198000</td>\n",
+       "      <td>0.102000</td>\n",
+       "      <td>139.997000</td>\n",
+       "      <td>0.659000</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>max</th>\n",
+       "      <td>100.000000</td>\n",
+       "      <td>0.996000</td>\n",
+       "      <td>0.986000</td>\n",
+       "      <td>5.488000e+06</td>\n",
+       "      <td>0.999000</td>\n",
+       "      <td>0.994000</td>\n",
+       "      <td>1.000000</td>\n",
+       "      <td>1.585000</td>\n",
+       "      <td>0.960000</td>\n",
+       "      <td>242.903000</td>\n",
+       "      <td>0.992000</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "         popularity  acousticness  ...         tempo       valence\n",
+       "count  75022.000000  75022.000000  ...  75022.000000  75022.000000\n",
+       "mean      52.326757      0.286114  ...    119.785346      0.469266\n",
+       "std        8.930855      0.305384  ...     29.795567      0.244772\n",
+       "min       41.000000      0.000001  ...     31.689000      0.017600\n",
+       "25%       45.000000      0.029300  ...     95.431750      0.274000\n",
+       "50%       50.000000      0.158000  ...    119.048000      0.459000\n",
+       "75%       58.000000      0.485000  ...    139.997000      0.659000\n",
+       "max      100.000000      0.996000  ...    242.903000      0.992000\n",
+       "\n",
+       "[8 rows x 11 columns]"
+      ]
+     },
+     "metadata": {
+      "tags": []
+     },
+     "execution_count": 17
+    }
+   ]
+  },
+  {
+   "cell_type": "code",
+   "metadata": {
+    "id": "P-ZACDVWtV_P",
+    "colab": {
+     "base_uri": "https://localhost:8080/"
+    },
+    "outputId": "a9b6ea8b-31ea-475a-bad8-fcee63ee4cdf"
+   },
+   "source": [
+    "most_pop_songs.isnull().sum()"
+   ],
+   "execution_count": null,
+   "outputs": [
+    {
+     "output_type": "execute_result",
+     "data": {
+      "text/plain": [
+       "genre               0\n",
+       "artist_name         0\n",
+       "track_name          0\n",
+       "track_id            0\n",
+       "popularity          0\n",
+       "acousticness        0\n",
+       "danceability        0\n",
+       "duration_ms         0\n",
+       "energy              0\n",
+       "instrumentalness    0\n",
+       "key                 0\n",
+       "liveness            0\n",
+       "loudness            0\n",
+       "mode                0\n",
+       "speechiness         0\n",
+       "tempo               0\n",
+       "time_signature      0\n",
+       "valence             0\n",
+       "dtype: int64"
+      ]
+     },
+     "metadata": {
+      "tags": []
+     },
+     "execution_count": 18
+    }
+   ]
+  },
+  {
+   "cell_type": "code",
+   "metadata": {
+    "id": "B2EpTsDjx4PZ",
+    "colab": {
+     "base_uri": "https://localhost:8080/"
+    },
+    "outputId": "0360b805-36b6-4088-b5a1-70c117a2efaf"
+   },
+   "source": [
+    "!python -m spacy download en_core_web_md"
+   ],
+   "execution_count": null,
+   "outputs": [
+    {
+     "output_type": "stream",
+     "text": [
+      "Requirement already satisfied: en_core_web_md==2.2.5 from https://github.com/explosion/spacy-models/releases/download/en_core_web_md-2.2.5/en_core_web_md-2.2.5.tar.gz#egg=en_core_web_md==2.2.5 in /usr/local/lib/python3.6/dist-packages (2.2.5)\n",
+      "Requirement already satisfied: spacy>=2.2.2 in /usr/local/lib/python3.6/dist-packages (from en_core_web_md==2.2.5) (2.2.4)\n",
+      "Requirement already satisfied: murmurhash<1.1.0,>=0.28.0 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_md==2.2.5) (1.0.5)\n",
+      "Requirement already satisfied: numpy>=1.15.0 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_md==2.2.5) (1.19.4)\n",
+      "Requirement already satisfied: wasabi<1.1.0,>=0.4.0 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_md==2.2.5) (0.8.0)\n",
+      "Requirement already satisfied: cymem<2.1.0,>=2.0.2 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_md==2.2.5) (2.0.5)\n",
+      "Requirement already satisfied: preshed<3.1.0,>=3.0.2 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_md==2.2.5) (3.0.5)\n",
+      "Requirement already satisfied: setuptools in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_md==2.2.5) (51.0.0)\n",
+      "Requirement already satisfied: thinc==7.4.0 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_md==2.2.5) (7.4.0)\n",
+      "Requirement already satisfied: plac<1.2.0,>=0.9.6 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_md==2.2.5) (1.1.3)\n",
+      "Requirement already satisfied: srsly<1.1.0,>=1.0.2 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_md==2.2.5) (1.0.5)\n",
+      "Requirement already satisfied: blis<0.5.0,>=0.4.0 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_md==2.2.5) (0.4.1)\n",
+      "Requirement already satisfied: catalogue<1.1.0,>=0.0.7 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_md==2.2.5) (1.0.0)\n",
+      "Requirement already satisfied: requests<3.0.0,>=2.13.0 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_md==2.2.5) (2.25.1)\n",
+      "Requirement already satisfied: tqdm<5.0.0,>=4.38.0 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_md==2.2.5) (4.55.1)\n",
+      "Requirement already satisfied: importlib-metadata>=0.20; python_version < \"3.8\" in /usr/local/lib/python3.6/dist-packages (from catalogue<1.1.0,>=0.0.7->spacy>=2.2.2->en_core_web_md==2.2.5) (3.3.0)\n",
+      "Requirement already satisfied: chardet<5,>=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests<3.0.0,>=2.13.0->spacy>=2.2.2->en_core_web_md==2.2.5) (3.0.4)\n",
+      "Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.6/dist-packages (from requests<3.0.0,>=2.13.0->spacy>=2.2.2->en_core_web_md==2.2.5) (1.24.3)\n",
+      "Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.6/dist-packages (from requests<3.0.0,>=2.13.0->spacy>=2.2.2->en_core_web_md==2.2.5) (2.10)\n",
+      "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.6/dist-packages (from requests<3.0.0,>=2.13.0->spacy>=2.2.2->en_core_web_md==2.2.5) (2020.12.5)\n",
+      "Requirement already satisfied: typing-extensions>=3.6.4; python_version < \"3.8\" in /usr/local/lib/python3.6/dist-packages (from importlib-metadata>=0.20; python_version < \"3.8\"->catalogue<1.1.0,>=0.0.7->spacy>=2.2.2->en_core_web_md==2.2.5) (3.7.4.3)\n",
+      "Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.6/dist-packages (from importlib-metadata>=0.20; python_version < \"3.8\"->catalogue<1.1.0,>=0.0.7->spacy>=2.2.2->en_core_web_md==2.2.5) (3.4.0)\n",
+      "\u001B[38;5;2m✔ Download and installation successful\u001B[0m\n",
+      "You can now load the model via spacy.load('en_core_web_md')\n"
+     ],
+     "name": "stdout"
+    }
+   ]
+  },
+  {
+   "cell_type": "code",
+   "metadata": {
+    "id": "1VrWMrW341Sa"
+   },
+   "source": [],
+   "execution_count": null,
+   "outputs": []
+  },
+  {
+   "cell_type": "code",
+   "metadata": {
+    "id": "fo2y7zTwtkLs",
+    "colab": {
+     "base_uri": "https://localhost:8080/",
+     "height": 35
+    },
+    "outputId": "e98d5e38-4009-4313-eefa-69717ff7a159"
+   },
+   "source": [
+    "nlp = spacy.load('en_core_web_md')\n",
+    "\n",
+    "def lemma_creator(text):\n",
+    "    lemmas = []\n",
+    "    process_text = nlp(text)\n",
+    "\n",
+    "    for token in process_text:\n",
+    "        if ((token.is_stop == False) and (token.is_punct == False)) and (token.pos_ != 'PRON'):\n",
+    "            lemmas.append(token.lemma_)\n",
+    "    return ' '.join(lemmas)\n",
+    "\n",
+    "most_pop_songs['lemmas'] = most_pop_songs['track_name'].apply(lemma_creator)\n",
+    "most_pop_songs['lemmas'][0]"
+   ],
+   "execution_count": null,
+   "outputs": [
+    {
+     "output_type": "execute_result",
+     "data": {
+      "application/vnd.google.colaboratory.intrinsic+json": {
+       "type": "string"
+      },
+      "text/plain": [
+       "'Kendu Mix'"
+      ]
+     },
+     "metadata": {
+      "tags": []
+     },
+     "execution_count": 20
+    }
+   ]
+  },
+  {
+   "cell_type": "code",
+   "metadata": {
+    "id": "LHSNGUey0S3V"
+   },
+   "source": [
+    "most_pop_songs.to_csv('most_pop_songs.csv', index=False)"
+   ],
+   "execution_count": null,
+   "outputs": []
+  },
+  {
+   "cell_type": "code",
+   "metadata": {
+    "id": "Y6J2cqfR-jxZ"
+   },
+   "source": [
+    "from sklearn.feature_extraction.text import TfidfVectorizer"
+   ],
+   "execution_count": null,
+   "outputs": []
+  },
+  {
+   "cell_type": "code",
+   "metadata": {
+    "id": "_sLk8kg70Sx6"
+   },
+   "source": [
+    "tfidf = TfidfVectorizer(stop_words='english', min_df=0.025, max_df=0.98, ngram_range=(1,3))\n",
+    "dtm = tfidf.fit_transform(most_pop_songs['lemmas'])\n",
+    "dtm = pd.DataFrame(dtm.todense(), columns=tfidf.get_feature_names())"
+   ],
+   "execution_count": null,
+   "outputs": []
+  },
+  {
+   "cell_type": "code",
+   "metadata": {
+    "colab": {
+     "base_uri": "https://localhost:8080/"
+    },
+    "id": "cfT4gQzv92XH",
+    "outputId": "9c01d386-7ae2-4113-aad1-e705c6cbb0f9"
+   },
+   "source": [
+    "!pip install pickle-mixin"
+   ],
+   "execution_count": null,
+   "outputs": [
+    {
+     "output_type": "stream",
+     "text": [
+      "Requirement already satisfied: pickle-mixin in /usr/local/lib/python3.6/dist-packages (1.0.2)\n"
+     ],
+     "name": "stdout"
+    }
+   ]
+  },
+  {
+   "cell_type": "code",
+   "metadata": {
+    "id": "1nZZOkg10SqC"
+   },
+   "source": [
+    "with open('.pkl', 'wb') as f2:\n",
+    "  pickle.dump('/content/most_pop_songs.csv', f2)"
+   ],
+   "execution_count": null,
+   "outputs": []
+  },
+  {
+   "cell_type": "code",
+   "metadata": {
+    "id": "IckeT2W2rfuF"
+   },
+   "source": [
+    ""
+   ],
+   "execution_count": null,
+   "outputs": []
+  },
+  {
+   "cell_type": "code",
+   "metadata": {
+    "id": "9zfNfBNKq4NC",
+    "colab": {
+     "base_uri": "https://localhost:8080/",
+     "height": 131
+    },
+    "outputId": "9532dad7-091a-411a-ac67-99e0d6e38118"
+   },
+   "source": [
+    "X_train, y_train, X_test, y_test = train_test_split(most_pop_songs, test_size=)"
+   ],
+   "execution_count": null,
+   "outputs": [
+    {
+     "output_type": "error",
+     "ename": "SyntaxError",
+     "evalue": "ignored",
+     "traceback": [
+      "\u001B[0;36m  File \u001B[0;32m\"<ipython-input-21-93e4b645e535>\"\u001B[0;36m, line \u001B[0;32m1\u001B[0m\n\u001B[0;31m    X_train, y_train, X_test, y_test = train_test_split(most_pop_songs, test_size=)\u001B[0m\n\u001B[0m                                                                                  ^\u001B[0m\n\u001B[0;31mSyntaxError\u001B[0m\u001B[0;31m:\u001B[0m invalid syntax\n"
+     ]
+    }
+   ]
+  },
+  {
+   "cell_type": "code",
+   "metadata": {
+    "id": "d13PfoVrpHgY"
+   },
+   "source": [
+    "n_neighbors = 10\r\n",
+    "\r\n"
+   ],
+   "execution_count": null,
+   "outputs": []
+  }
+ ]
 }
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"a250d6c4-1e4b-4fe2-961a-d4fd1e40562f\" name=\"Default Changelist\" comment=\"\">\r\n      <change afterPath=\"$PROJECT_DIR$/model_creation.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"1lziAYJjW33ekGFn6jJ53XlDk9m\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"ASKED_SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$\" />\r\n    <property name=\"node.js.detected.package.eslint\" value=\"true\" />\r\n    <property name=\"node.js.detected.package.tslint\" value=\"true\" />\r\n    <property name=\"node.js.path.for.package.eslint\" value=\"project\" />\r\n    <property name=\"node.js.path.for.package.tslint\" value=\"project\" />\r\n    <property name=\"node.js.selected.package.eslint\" value=\"(autodetect)\" />\r\n    <property name=\"node.js.selected.package.tslint\" value=\"(autodetect)\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"editor.preferences.fonts.default\" />\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Build-Week-Spotify\" type=\"PythonConfigurationType\" factoryName=\"Python\">\r\n      <module name=\"Build-Week-Spotify\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/models.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"a250d6c4-1e4b-4fe2-961a-d4fd1e40562f\" name=\"Default Changelist\" comment=\"\" />\r\n      <created>1608606177530</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1608606177530</updated>\r\n      <workItem from=\"1608606179421\" duration=\"12000\" />\r\n      <workItem from=\"1608606220867\" duration=\"969000\" />\r\n      <workItem from=\"1609814780267\" duration=\"59000\" />\r\n      <workItem from=\"1609814865185\" duration=\"1027000\" />\r\n      <workItem from=\"1609901491933\" duration=\"4671000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Corrected path names\">\r\n      <created>1608607099268</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1608607099268</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Added .env file with client id and secret\">\r\n      <created>1609901453516</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1609901453516</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Added .env file with client id and secret\">\r\n      <created>1609901527486</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1609901527487</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Added .env file with client id and secret (2nd attempt)\">\r\n      <created>1609901764653</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1609901764653</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Got pickled model set\">\r\n      <created>1609908514721</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1609908514721</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Got pickled model set\">\r\n      <created>1609908546509</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1609908546509</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"7\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"main\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Corrected path names\" />\r\n    <MESSAGE value=\"Added .env file with client id and secret\" />\r\n    <MESSAGE value=\"Added .env file with client id and secret (2nd attempt)\" />\r\n    <MESSAGE value=\"Got pickled model set\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Got pickled model set\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision ccd0fdef7e512148a91f9d29cb7e710967f55ed5)
+++ b/.idea/workspace.xml	(date 1609992138296)
@@ -2,8 +2,10 @@
 <project version="4">
   <component name="ChangeListManager">
     <list default="true" id="a250d6c4-1e4b-4fe2-961a-d4fd1e40562f" name="Default Changelist" comment="">
-      <change afterPath="$PROJECT_DIR$/model_creation.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/model.pkl" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/model_creation.py" beforeDir="false" afterPath="$PROJECT_DIR$/model_creation.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/spotify_eda.ipynb" beforeDir="false" afterPath="$PROJECT_DIR$/spotify_eda.ipynb" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -69,7 +71,8 @@
       <workItem from="1608606220867" duration="969000" />
       <workItem from="1609814780267" duration="59000" />
       <workItem from="1609814865185" duration="1027000" />
-      <workItem from="1609901491933" duration="4671000" />
+      <workItem from="1609901491933" duration="8918000" />
+      <workItem from="1609991584086" duration="551000" />
     </task>
     <task id="LOCAL-00001" summary="Corrected path names">
       <created>1608607099268</created>
@@ -113,7 +116,21 @@
       <option name="project" value="LOCAL" />
       <updated>1609908546509</updated>
     </task>
-    <option name="localTasksCounter" value="7" />
+    <task id="LOCAL-00007" summary="began model_creation.py - still need to work on it.">
+      <created>1609910697294</created>
+      <option name="number" value="00007" />
+      <option name="presentableId" value="LOCAL-00007" />
+      <option name="project" value="LOCAL" />
+      <updated>1609910697294</updated>
+    </task>
+    <task id="LOCAL-00008" summary="Finished base product to be renamed shortly...">
+      <created>1609987784734</created>
+      <option name="number" value="00008" />
+      <option name="presentableId" value="LOCAL-00008" />
+      <option name="project" value="LOCAL" />
+      <updated>1609987784734</updated>
+    </task>
+    <option name="localTasksCounter" value="9" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -148,6 +165,8 @@
     <MESSAGE value="Added .env file with client id and secret" />
     <MESSAGE value="Added .env file with client id and secret (2nd attempt)" />
     <MESSAGE value="Got pickled model set" />
-    <option name="LAST_COMMIT_MESSAGE" value="Got pickled model set" />
+    <MESSAGE value="began model_creation.py - still need to work on it." />
+    <MESSAGE value="Finished base product to be renamed shortly..." />
+    <option name="LAST_COMMIT_MESSAGE" value="Finished base product to be renamed shortly..." />
   </component>
 </project>
\ No newline at end of file
Index: model_creation.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import os\r\nimport pickle\r\nimport pandas\r\n\r\nbasedir = os.path.abspath(os.path.dirname(__file__))\r\nmodel_path = os.path.join(basedir, ##insert model)\r\ndf_path = os.path.join(basedir, ## Pickle Path)\r\n\r\nwith open(model_path, 'rb') as f:\r\n    model = pickle.load(f)\r\n\r\nwith open(df_path, 'rb') as f:\r\n    df = pickle.load(f)\r\n\r\ndef find_recommended_songs(track_id):\r\n    song_index = df.index[df['id'] == track_id]\r\n    audio_features = df.iloc[song_index, 3:].to_numpy()\r\n    distances, indices = model.kneighbors(audio_features)\r\n    return df.iloc[indices[0], 'id'].tolist()\r\n\r\ndef track_id_in_df(track_id):\r\n    return len(df.index[df['id'] == track_id])> 0\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/model_creation.py b/model_creation.py
--- a/model_creation.py	(revision ccd0fdef7e512148a91f9d29cb7e710967f55ed5)
+++ b/model_creation.py	(date 1609988350966)
@@ -3,7 +3,7 @@
 import pandas
 
 basedir = os.path.abspath(os.path.dirname(__file__))
-model_path = os.path.join(basedir, ##insert model)
+model_path = os.path.join(basedir, model.pkl)
 df_path = os.path.join(basedir, ## Pickle Path)
 
 with open(model_path, 'rb') as f:
